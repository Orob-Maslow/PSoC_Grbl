ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"planner.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.plan_prev_block_index,"ax",%progbits
  19              		.align	2
  20              		.thumb
  21              		.thumb_func
  22              		.type	plan_prev_block_index, %function
  23              	plan_prev_block_index:
  24              	.LFB64:
  25              		.file 1 "planner.c"
   1:planner.c     **** /*
   2:planner.c     ****   planner.c - buffers movement commands and manages the acceleration profile plan
   3:planner.c     ****   Part of Grbl
   4:planner.c     **** 
   5:planner.c     ****   Copyright (c) 2011-2016 Sungeun K. Jeon for Gnea Research LLC
   6:planner.c     ****   Copyright (c) 2009-2011 Simen Svale Skogsrud
   7:planner.c     ****   Copyright (c) 2011 Jens Geisler
   8:planner.c     **** 
   9:planner.c     ****   Grbl is free software: you can redistribute it and/or modify
  10:planner.c     ****   it under the terms of the GNU General Public License as published by
  11:planner.c     ****   the Free Software Foundation, either version 3 of the License, or
  12:planner.c     ****   (at your option) any later version.
  13:planner.c     **** 
  14:planner.c     ****   Grbl is distributed in the hope that it will be useful,
  15:planner.c     ****   but WITHOUT ANY WARRANTY; without even the implied warranty of
  16:planner.c     ****   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  17:planner.c     ****   GNU General Public License for more details.
  18:planner.c     **** 
  19:planner.c     ****   You should have received a copy of the GNU General Public License
  20:planner.c     ****   along with Grbl.  If not, see <http://www.gnu.org/licenses/>.
  21:planner.c     **** */
  22:planner.c     **** 
  23:planner.c     **** #include "grbl.h"
  24:planner.c     **** #include <stdlib.h> // PSoc Required for labs
  25:planner.c     **** 
  26:planner.c     **** 
  27:planner.c     **** static plan_block_t block_buffer[BLOCK_BUFFER_SIZE];  // A ring buffer for motion instructions
  28:planner.c     **** static uint8_t block_buffer_tail;     // Index of the block to process now
  29:planner.c     **** static uint8_t block_buffer_head;     // Index of the next block to be pushed
  30:planner.c     **** static uint8_t next_buffer_head;      // Index of the next buffer head
  31:planner.c     **** static uint8_t block_buffer_planned;  // Index of the optimally planned block
  32:planner.c     **** 
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 2


  33:planner.c     **** // Define planner variables
  34:planner.c     **** typedef struct {
  35:planner.c     ****   int32_t position[N_AXIS];          // The planner position of the tool in absolute steps. Kept se
  36:planner.c     ****                                      // from g-code position for movements requiring multiple line 
  37:planner.c     ****                                      // i.e. arcs, canned cycles, and backlash compensation.
  38:planner.c     ****   float previous_unit_vec[N_AXIS];   // Unit vector of previous path line segment
  39:planner.c     ****   float previous_nominal_speed;  // Nominal speed of previous path line segment
  40:planner.c     **** } planner_t;
  41:planner.c     **** static planner_t pl;
  42:planner.c     **** 
  43:planner.c     **** 
  44:planner.c     **** // Returns the index of the next block in the ring buffer. Also called by stepper segment buffer.
  45:planner.c     **** uint8_t plan_next_block_index(uint8_t block_index)
  46:planner.c     **** {
  47:planner.c     ****   block_index++;
  48:planner.c     ****   if (block_index == BLOCK_BUFFER_SIZE) { block_index = 0; }
  49:planner.c     ****   return(block_index);
  50:planner.c     **** }
  51:planner.c     **** 
  52:planner.c     **** 
  53:planner.c     **** // Returns the index of the previous block in the ring buffer
  54:planner.c     **** static uint8_t plan_prev_block_index(uint8_t block_index)
  55:planner.c     **** {
  26              		.loc 1 55 0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 0
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30              		@ link register save eliminated.
  31              	.LVL0:
  56:planner.c     ****   if (block_index == 0) { block_index = BLOCK_BUFFER_SIZE; }
  32              		.loc 1 56 0
  33 0000 0346     		mov	r3, r0
  34 0002 00B9     		cbnz	r0, .L2
  35 0004 1023     		movs	r3, #16
  36              	.L2:
  37              	.LVL1:
  57:planner.c     ****   block_index--;
  38              		.loc 1 57 0
  39 0006 581E     		subs	r0, r3, #1
  40              	.LVL2:
  58:planner.c     ****   return(block_index);
  59:planner.c     **** }
  41              		.loc 1 59 0
  42 0008 C0B2     		uxtb	r0, r0
  43 000a 7047     		bx	lr
  44              		.cfi_endproc
  45              	.LFE64:
  46              		.size	plan_prev_block_index, .-plan_prev_block_index
  47              		.global	__aeabi_fcmpgt
  48              		.global	__aeabi_fmul
  49              		.section	.text.plan_compute_profile_parameters,"ax",%progbits
  50              		.align	2
  51              		.thumb
  52              		.thumb_func
  53              		.type	plan_compute_profile_parameters, %function
  54              	plan_compute_profile_parameters:
  55              	.LFB74:
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 3


  60:planner.c     **** 
  61:planner.c     **** 
  62:planner.c     **** /*                            PLANNER SPEED DEFINITION
  63:planner.c     ****                                      +--------+   <- current->nominal_speed
  64:planner.c     ****                                     /          \
  65:planner.c     ****          current->entry_speed ->   +            \
  66:planner.c     ****                                    |             + <- next->entry_speed (aka exit speed)
  67:planner.c     ****                                    +-------------+
  68:planner.c     ****                                        time -->
  69:planner.c     **** 
  70:planner.c     ****   Recalculates the motion plan according to the following basic guidelines:
  71:planner.c     **** 
  72:planner.c     ****     1. Go over every feasible block sequentially in reverse order and calculate the junction speeds
  73:planner.c     ****         (i.e. current->entry_speed) such that:
  74:planner.c     ****       a. No junction speed exceeds the pre-computed maximum junction speed limit or nominal speeds 
  75:planner.c     ****          neighboring blocks.
  76:planner.c     ****       b. A block entry speed cannot exceed one reverse-computed from its exit speed (next->entry_sp
  77:planner.c     ****          with a maximum allowable deceleration over the block travel distance.
  78:planner.c     ****       c. The last (or newest appended) block is planned from a complete stop (an exit speed of zero
  79:planner.c     ****     2. Go over every block in chronological (forward) order and dial down junction speed values if
  80:planner.c     ****       a. The exit speed exceeds the one forward-computed from its entry speed with the maximum allo
  81:planner.c     ****          acceleration over the block travel distance.
  82:planner.c     **** 
  83:planner.c     ****   When these stages are complete, the planner will have maximized the velocity profiles throughout 
  84:planner.c     ****   of the planner blocks, where every block is operating at its maximum allowable acceleration limit
  85:planner.c     ****   other words, for all of the blocks in the planner, the plan is optimal and no further speed impro
  86:planner.c     ****   are possible. If a new block is added to the buffer, the plan is recomputed according to the said
  87:planner.c     ****   guidelines for a new optimal plan.
  88:planner.c     **** 
  89:planner.c     ****   To increase computational efficiency of these guidelines, a set of planner block pointers have be
  90:planner.c     ****   created to indicate stop-compute points for when the planner guidelines cannot logically make any
  91:planner.c     ****   changes or improvements to the plan when in normal operation and new blocks are streamed and adde
  92:planner.c     ****   planner buffer. For example, if a subset of sequential blocks in the planner have been planned an
  93:planner.c     ****   bracketed by junction velocities at their maximums (or by the first planner block as well), no ne
  94:planner.c     ****   added to the planner buffer will alter the velocity profiles within them. So we no longer have to
  95:planner.c     ****   them. Or, if a set of sequential blocks from the first block in the planner (or a optimal stop-co
  96:planner.c     ****   point) are all accelerating, they are all optimal and can not be altered by a new block added to 
  97:planner.c     ****   planner buffer, as this will only further increase the plan speed to chronological blocks until a
  98:planner.c     ****   junction velocity is reached. However, if the operational conditions of the plan changes from inf
  99:planner.c     ****   used feed holds or feedrate overrides, the stop-compute pointers will be reset and the entire pla
 100:planner.c     ****   recomputed as stated in the general guidelines.
 101:planner.c     **** 
 102:planner.c     ****   Planner buffer index mapping:
 103:planner.c     ****   - block_buffer_tail: Points to the beginning of the planner buffer. First to be executed or being
 104:planner.c     ****   - block_buffer_head: Points to the buffer block after the last block in the buffer. Used to indic
 105:planner.c     ****       the buffer is full or empty. As described for standard ring buffers, this block is always emp
 106:planner.c     ****   - next_buffer_head: Points to next planner buffer block after the buffer head block. When equal t
 107:planner.c     ****       buffer tail, this indicates the buffer is full.
 108:planner.c     ****   - block_buffer_planned: Points to the first buffer block after the last optimally planned block f
 109:planner.c     ****       streaming operating conditions. Use for planning optimizations by avoiding recomputing parts 
 110:planner.c     ****       planner buffer that don't change with the addition of a new block, as describe above. In addi
 111:planner.c     ****       this block can never be less than block_buffer_tail and will always be pushed forward and mai
 112:planner.c     ****       this requirement when encountered by the plan_discard_current_block() routine during a cycle.
 113:planner.c     **** 
 114:planner.c     ****   NOTE: Since the planner only computes on what's in the planner buffer, some motions with lots of 
 115:planner.c     ****   line segments, like G2/3 arcs or complex curves, may seem to move slow. This is because there sim
 116:planner.c     ****   enough combined distance traveled in the entire buffer to accelerate up to the nominal speed and 
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 4


 117:planner.c     ****   decelerate to a complete stop at the end of the buffer, as stated by the guidelines. If this happ
 118:planner.c     ****   becomes an annoyance, there are a few simple solutions: (1) Maximize the machine acceleration. Th
 119:planner.c     ****   will be able to compute higher velocity profiles within the same combined distance. (2) Maximize 
 120:planner.c     ****   motion(s) distance per block to a desired tolerance. The more combined distance the planner has t
 121:planner.c     ****   the faster it can go. (3) Maximize the planner buffer size. This also will increase the combined 
 122:planner.c     ****   for the planner to compute over. It also increases the number of computations the planner has to 
 123:planner.c     ****   to compute an optimal plan, so select carefully. The Arduino 328p memory is already maxed out, bu
 124:planner.c     ****   ARM versions should have enough memory and speed for look-ahead blocks numbering up to a hundred 
 125:planner.c     **** 
 126:planner.c     **** */
 127:planner.c     **** static void planner_recalculate()
 128:planner.c     **** {
 129:planner.c     ****   // Initialize block index to the last block in the planner buffer.
 130:planner.c     ****   uint8_t block_index = plan_prev_block_index(block_buffer_head);
 131:planner.c     **** 
 132:planner.c     ****   // Bail. Can't do anything with one only one plan-able block.
 133:planner.c     ****   if (block_index == block_buffer_planned) { return; }
 134:planner.c     **** 
 135:planner.c     ****   // Reverse Pass: Coarsely maximize all possible deceleration curves back-planning from the last
 136:planner.c     ****   // block in buffer. Cease planning when the last optimal planned or tail pointer is reached.
 137:planner.c     ****   // NOTE: Forward pass will later refine and correct the reverse pass to create an optimal plan.
 138:planner.c     ****   float entry_speed_sqr;
 139:planner.c     ****   plan_block_t *next;
 140:planner.c     ****   plan_block_t *current = &block_buffer[block_index];
 141:planner.c     **** 
 142:planner.c     ****   // Calculate maximum entry speed for last block in buffer, where the exit speed is always zero.
 143:planner.c     ****   current->entry_speed_sqr = min( current->max_entry_speed_sqr, 2*current->acceleration*current->mi
 144:planner.c     **** 
 145:planner.c     ****   block_index = plan_prev_block_index(block_index);
 146:planner.c     ****   if (block_index == block_buffer_planned) { // Only two plannable blocks in buffer. Reverse pass c
 147:planner.c     ****     // Check if the first block is the tail. If so, notify stepper to update its current parameters
 148:planner.c     ****     if (block_index == block_buffer_tail) { st_update_plan_block_parameters(); }
 149:planner.c     ****   } else { // Three or more plan-able blocks
 150:planner.c     ****     while (block_index != block_buffer_planned) {
 151:planner.c     ****       next = current;
 152:planner.c     ****       current = &block_buffer[block_index];
 153:planner.c     ****       block_index = plan_prev_block_index(block_index);
 154:planner.c     **** 
 155:planner.c     ****       // Check if next block is the tail block(=planned block). If so, update current stepper param
 156:planner.c     ****       if (block_index == block_buffer_tail) { st_update_plan_block_parameters(); }
 157:planner.c     **** 
 158:planner.c     ****       // Compute maximum entry speed decelerating over the current block from its exit speed.
 159:planner.c     ****       if (current->entry_speed_sqr != current->max_entry_speed_sqr) {
 160:planner.c     ****         entry_speed_sqr = next->entry_speed_sqr + 2*current->acceleration*current->millimeters;
 161:planner.c     ****         if (entry_speed_sqr < current->max_entry_speed_sqr) {
 162:planner.c     ****           current->entry_speed_sqr = entry_speed_sqr;
 163:planner.c     ****         } else {
 164:planner.c     ****           current->entry_speed_sqr = current->max_entry_speed_sqr;
 165:planner.c     ****         }
 166:planner.c     ****       }
 167:planner.c     ****     }
 168:planner.c     ****   }
 169:planner.c     **** 
 170:planner.c     ****   // Forward Pass: Forward plan the acceleration curve from the planned pointer onward.
 171:planner.c     ****   // Also scans for optimal plan breakpoints and appropriately updates the planned pointer.
 172:planner.c     ****   next = &block_buffer[block_buffer_planned]; // Begin at buffer planned pointer
 173:planner.c     ****   block_index = plan_next_block_index(block_buffer_planned);
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 5


 174:planner.c     ****   while (block_index != block_buffer_head) {
 175:planner.c     ****     current = next;
 176:planner.c     ****     next = &block_buffer[block_index];
 177:planner.c     **** 
 178:planner.c     ****     // Any acceleration detected in the forward pass automatically moves the optimal planned
 179:planner.c     ****     // pointer forward, since everything before this is all optimal. In other words, nothing
 180:planner.c     ****     // can improve the plan from the buffer tail to the planned pointer by logic.
 181:planner.c     ****     if (current->entry_speed_sqr < next->entry_speed_sqr) {
 182:planner.c     ****       entry_speed_sqr = current->entry_speed_sqr + 2*current->acceleration*current->millimeters;
 183:planner.c     ****       // If true, current block is full-acceleration and we can move the planned pointer forward.
 184:planner.c     ****       if (entry_speed_sqr < next->entry_speed_sqr) {
 185:planner.c     ****         next->entry_speed_sqr = entry_speed_sqr; // Always <= max_entry_speed_sqr. Backward pass se
 186:planner.c     ****         block_buffer_planned = block_index; // Set optimal plan pointer.
 187:planner.c     ****       }
 188:planner.c     ****     }
 189:planner.c     **** 
 190:planner.c     ****     // Any block set at its maximum entry speed also creates an optimal plan up to this
 191:planner.c     ****     // point in the buffer. When the plan is bracketed by either the beginning of the
 192:planner.c     ****     // buffer and a maximum entry speed or two maximum entry speeds, every block in between
 193:planner.c     ****     // cannot logically be further improved. Hence, we don't have to recompute them anymore.
 194:planner.c     ****     if (next->entry_speed_sqr == next->max_entry_speed_sqr) { block_buffer_planned = block_index; }
 195:planner.c     ****     block_index = plan_next_block_index( block_index );
 196:planner.c     ****   }
 197:planner.c     **** }
 198:planner.c     **** 
 199:planner.c     **** 
 200:planner.c     **** void plan_reset()
 201:planner.c     **** {
 202:planner.c     ****   memset(&pl, 0, sizeof(planner_t)); // Clear planner struct
 203:planner.c     ****   plan_reset_buffer();
 204:planner.c     **** }
 205:planner.c     **** 
 206:planner.c     **** 
 207:planner.c     **** void plan_reset_buffer()
 208:planner.c     **** {
 209:planner.c     ****   block_buffer_tail = 0;
 210:planner.c     ****   block_buffer_head = 0; // Empty = tail
 211:planner.c     ****   next_buffer_head = 1; // plan_next_block_index(block_buffer_head)
 212:planner.c     ****   block_buffer_planned = 0; // = block_buffer_tail;
 213:planner.c     **** }
 214:planner.c     **** 
 215:planner.c     **** 
 216:planner.c     **** void plan_discard_current_block()
 217:planner.c     **** {
 218:planner.c     ****   if (block_buffer_head != block_buffer_tail) { // Discard non-empty buffer.
 219:planner.c     ****     uint8_t block_index = plan_next_block_index( block_buffer_tail );
 220:planner.c     ****     // Push block_buffer_planned pointer, if encountered.
 221:planner.c     ****     if (block_buffer_tail == block_buffer_planned) { block_buffer_planned = block_index; }
 222:planner.c     ****     block_buffer_tail = block_index;
 223:planner.c     ****   }
 224:planner.c     **** }
 225:planner.c     **** 
 226:planner.c     **** 
 227:planner.c     **** // Returns address of planner buffer block used by system motions. Called by segment generator.
 228:planner.c     **** plan_block_t *plan_get_system_motion_block()
 229:planner.c     **** {
 230:planner.c     ****   return(&block_buffer[block_buffer_head]);
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 6


 231:planner.c     **** }
 232:planner.c     **** 
 233:planner.c     **** 
 234:planner.c     **** // Returns address of first planner block, if available. Called by various main program functions.
 235:planner.c     **** plan_block_t *plan_get_current_block()
 236:planner.c     **** {
 237:planner.c     ****   if (block_buffer_head == block_buffer_tail) { return(NULL); } // Buffer empty
 238:planner.c     ****   return(&block_buffer[block_buffer_tail]);
 239:planner.c     **** }
 240:planner.c     **** 
 241:planner.c     **** 
 242:planner.c     **** float plan_get_exec_block_exit_speed_sqr()
 243:planner.c     **** {
 244:planner.c     ****   uint8_t block_index = plan_next_block_index(block_buffer_tail);
 245:planner.c     ****   if (block_index == block_buffer_head) { return( 0.0 ); }
 246:planner.c     ****   return( block_buffer[block_index].entry_speed_sqr );
 247:planner.c     **** }
 248:planner.c     **** 
 249:planner.c     **** 
 250:planner.c     **** // Returns the availability status of the block ring buffer. True, if full.
 251:planner.c     **** uint8_t plan_check_full_buffer()
 252:planner.c     **** {
 253:planner.c     ****   if (block_buffer_tail == next_buffer_head) { return(true); }
 254:planner.c     ****   return(false);
 255:planner.c     **** }
 256:planner.c     **** 
 257:planner.c     **** 
 258:planner.c     **** // Computes and returns block nominal speed based on running condition and override values.
 259:planner.c     **** // NOTE: All system motion commands, such as homing/parking, are not subject to overrides.
 260:planner.c     **** float plan_compute_profile_nominal_speed(plan_block_t *block)
 261:planner.c     **** {
 262:planner.c     ****   float nominal_speed = block->programmed_rate;
 263:planner.c     ****   if (block->condition & PL_COND_FLAG_RAPID_MOTION) { nominal_speed *= (0.01*sys.r_override); }
 264:planner.c     ****   else {
 265:planner.c     ****     if (!(block->condition & PL_COND_FLAG_NO_FEED_OVERRIDE)) { nominal_speed *= (0.01*sys.f_overrid
 266:planner.c     ****     if (nominal_speed > block->rapid_rate) { nominal_speed = block->rapid_rate; }
 267:planner.c     ****   }
 268:planner.c     ****   if (nominal_speed > MINIMUM_FEED_RATE) { return(nominal_speed); }
 269:planner.c     ****   return(MINIMUM_FEED_RATE);
 270:planner.c     **** }
 271:planner.c     **** 
 272:planner.c     **** 
 273:planner.c     **** // Computes and updates the max entry speed (sqr) of the block, based on the minimum of the junctio
 274:planner.c     **** // previous and current nominal speeds and max junction speed.
 275:planner.c     **** static void plan_compute_profile_parameters(plan_block_t *block, float nominal_speed, float prev_no
 276:planner.c     **** {
  56              		.loc 1 276 0
  57              		.cfi_startproc
  58              		@ args = 0, pretend = 0, frame = 0
  59              		@ frame_needed = 0, uses_anonymous_args = 0
  60              	.LVL3:
  61 0000 70B5     		push	{r4, r5, r6, lr}
  62              		.cfi_def_cfa_offset 16
  63              		.cfi_offset 4, -16
  64              		.cfi_offset 5, -12
  65              		.cfi_offset 6, -8
  66              		.cfi_offset 14, -4
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 7


  67 0002 0446     		mov	r4, r0
  68 0004 0D46     		mov	r5, r1
  69 0006 1646     		mov	r6, r2
 277:planner.c     ****   // Compute the junction maximum entry based on the minimum of the junction speed and neighboring 
 278:planner.c     ****   if (nominal_speed > prev_nominal_speed) { block->max_entry_speed_sqr = prev_nominal_speed*prev_no
  70              		.loc 1 278 0
  71 0008 0846     		mov	r0, r1
  72              	.LVL4:
  73 000a 1146     		mov	r1, r2
  74              	.LVL5:
  75 000c FFF7FEFF 		bl	__aeabi_fcmpgt
  76              	.LVL6:
  77 0010 28B1     		cbz	r0, .L12
  78              		.loc 1 278 0 is_stmt 0 discriminator 1
  79 0012 3046     		mov	r0, r6
  80 0014 3146     		mov	r1, r6
  81 0016 FFF7FEFF 		bl	__aeabi_fmul
  82              	.LVL7:
  83 001a A061     		str	r0, [r4, #24]	@ float
  84 001c 04E0     		b	.L7
  85              	.L12:
 279:planner.c     ****   else { block->max_entry_speed_sqr = nominal_speed*nominal_speed; }
  86              		.loc 1 279 0 is_stmt 1
  87 001e 2846     		mov	r0, r5
  88 0020 2946     		mov	r1, r5
  89 0022 FFF7FEFF 		bl	__aeabi_fmul
  90              	.LVL8:
  91 0026 A061     		str	r0, [r4, #24]	@ float
  92              	.L7:
 280:planner.c     ****   if (block->max_entry_speed_sqr > block->max_junction_speed_sqr) { block->max_entry_speed_sqr = bl
  93              		.loc 1 280 0
  94 0028 656A     		ldr	r5, [r4, #36]	@ float
  95              	.LVL9:
  96 002a A069     		ldr	r0, [r4, #24]	@ float
  97 002c 2946     		mov	r1, r5
  98 002e FFF7FEFF 		bl	__aeabi_fcmpgt
  99              	.LVL10:
 100 0032 00B1     		cbz	r0, .L4
 101              		.loc 1 280 0 is_stmt 0 discriminator 1
 102 0034 A561     		str	r5, [r4, #24]	@ float
 103              	.L4:
 104 0036 70BD     		pop	{r4, r5, r6, pc}
 105              		.cfi_endproc
 106              	.LFE74:
 107              		.size	plan_compute_profile_parameters, .-plan_compute_profile_parameters
 108              		.section	.text.plan_next_block_index,"ax",%progbits
 109              		.align	2
 110              		.global	plan_next_block_index
 111              		.thumb
 112              		.thumb_func
 113              		.type	plan_next_block_index, %function
 114              	plan_next_block_index:
 115              	.LFB63:
  46:planner.c     ****   block_index++;
 116              		.loc 1 46 0 is_stmt 1
 117              		.cfi_startproc
 118              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 8


 119              		@ frame_needed = 0, uses_anonymous_args = 0
 120              		@ link register save eliminated.
 121              	.LVL11:
  47:planner.c     ****   if (block_index == BLOCK_BUFFER_SIZE) { block_index = 0; }
 122              		.loc 1 47 0
 123 0000 0130     		adds	r0, r0, #1
 124              	.LVL12:
 125 0002 C0B2     		uxtb	r0, r0
 126              	.LVL13:
  48:planner.c     ****   return(block_index);
 127              		.loc 1 48 0
 128 0004 1028     		cmp	r0, #16
 129 0006 00D1     		bne	.L15
 130 0008 0020     		movs	r0, #0
 131              	.LVL14:
 132              	.L15:
  50:planner.c     **** 
 133              		.loc 1 50 0
 134 000a 7047     		bx	lr
 135              		.cfi_endproc
 136              	.LFE63:
 137              		.size	plan_next_block_index, .-plan_next_block_index
 138              		.global	__aeabi_fadd
 139              		.global	__aeabi_fcmplt
 140              		.global	__aeabi_fcmpeq
 141              		.section	.text.planner_recalculate,"ax",%progbits
 142              		.align	2
 143              		.thumb
 144              		.thumb_func
 145              		.type	planner_recalculate, %function
 146              	planner_recalculate:
 147              	.LFB65:
 128:planner.c     ****   // Initialize block index to the last block in the planner buffer.
 148              		.loc 1 128 0
 149              		.cfi_startproc
 150              		@ args = 0, pretend = 0, frame = 0
 151              		@ frame_needed = 0, uses_anonymous_args = 0
 152 0000 2DE9F843 		push	{r3, r4, r5, r6, r7, r8, r9, lr}
 153              		.cfi_def_cfa_offset 32
 154              		.cfi_offset 3, -32
 155              		.cfi_offset 4, -28
 156              		.cfi_offset 5, -24
 157              		.cfi_offset 6, -20
 158              		.cfi_offset 7, -16
 159              		.cfi_offset 8, -12
 160              		.cfi_offset 9, -8
 161              		.cfi_offset 14, -4
 130:planner.c     **** 
 162              		.loc 1 130 0
 163 0004 5E4C     		ldr	r4, .L44
 164 0006 2078     		ldrb	r0, [r4]	@ zero_extendqisi2
 165 0008 FFF7FEFF 		bl	plan_prev_block_index
 166              	.LVL15:
 167 000c 0546     		mov	r5, r0
 168              	.LVL16:
 133:planner.c     **** 
 169              		.loc 1 133 0
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 9


 170 000e 6678     		ldrb	r6, [r4, #1]	@ zero_extendqisi2
 171 0010 B042     		cmp	r0, r6
 172 0012 00F0B380 		beq	.L17
 140:planner.c     **** 
 173              		.loc 1 140 0
 174 0016 04F10408 		add	r8, r4, #4
 175 001a 3423     		movs	r3, #52
 176 001c 03FB00F3 		mul	r3, r3, r0
 177 0020 9844     		add	r8, r8, r3
 178              	.LVL17:
 143:planner.c     **** 
 179              		.loc 1 143 0
 180 0022 1C44     		add	r4, r4, r3
 181 0024 E769     		ldr	r7, [r4, #28]	@ float
 182 0026 206A     		ldr	r0, [r4, #32]	@ float
 183              	.LVL18:
 184 0028 0146     		mov	r1, r0
 185 002a FFF7FEFF 		bl	__aeabi_fadd
 186              	.LVL19:
 187 002e 616A     		ldr	r1, [r4, #36]	@ float
 188 0030 FFF7FEFF 		bl	__aeabi_fmul
 189              	.LVL20:
 190 0034 0446     		mov	r4, r0
 191 0036 3846     		mov	r0, r7
 192 0038 2146     		mov	r1, r4
 193 003a FFF7FEFF 		bl	__aeabi_fcmplt
 194              	.LVL21:
 195 003e 00B1     		cbz	r0, .L19
 196 0040 3C46     		mov	r4, r7
 197              	.L19:
 143:planner.c     **** 
 198              		.loc 1 143 0 is_stmt 0 discriminator 4
 199 0042 3423     		movs	r3, #52
 200 0044 4E4A     		ldr	r2, .L44
 201 0046 03FB0523 		mla	r3, r3, r5, r2
 202 004a 9C61     		str	r4, [r3, #24]	@ float
 145:planner.c     ****   if (block_index == block_buffer_planned) { // Only two plannable blocks in buffer. Reverse pass c
 203              		.loc 1 145 0 is_stmt 1 discriminator 4
 204 004c 2846     		mov	r0, r5
 205 004e FFF7FEFF 		bl	plan_prev_block_index
 206              	.LVL22:
 207 0052 0446     		mov	r4, r0
 208              	.LVL23:
 146:planner.c     ****     // Check if the first block is the tail. If so, notify stepper to update its current parameters
 209              		.loc 1 146 0 discriminator 4
 210 0054 8642     		cmp	r6, r0
 211 0056 47D1     		bne	.L21
 148:planner.c     ****   } else { // Three or more plan-able blocks
 212              		.loc 1 148 0
 213 0058 494B     		ldr	r3, .L44
 214 005a 93F84433 		ldrb	r3, [r3, #836]	@ zero_extendqisi2
 215 005e 9842     		cmp	r0, r3
 216 0060 46D1     		bne	.L22
 148:planner.c     ****   } else { // Three or more plan-able blocks
 217              		.loc 1 148 0 is_stmt 0 discriminator 1
 218 0062 FFF7FEFF 		bl	st_update_plan_block_parameters
 219              	.LVL24:
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 10


 220 0066 43E0     		b	.L22
 221              	.LVL25:
 222              	.L28:
 152:planner.c     ****       block_index = plan_prev_block_index(block_index);
 223              		.loc 1 152 0 is_stmt 1
 224 0068 2646     		mov	r6, r4
 225 006a 454F     		ldr	r7, .L44
 226 006c 3B1D     		adds	r3, r7, #4
 227 006e 3425     		movs	r5, #52
 228 0070 05FB0435 		mla	r5, r5, r4, r3
 229              	.LVL26:
 153:planner.c     **** 
 230              		.loc 1 153 0
 231 0074 2046     		mov	r0, r4
 232 0076 FFF7FEFF 		bl	plan_prev_block_index
 233              	.LVL27:
 234 007a 0446     		mov	r4, r0
 235              	.LVL28:
 156:planner.c     **** 
 236              		.loc 1 156 0
 237 007c 97F84433 		ldrb	r3, [r7, #836]	@ zero_extendqisi2
 238 0080 9842     		cmp	r0, r3
 239 0082 01D1     		bne	.L23
 156:planner.c     **** 
 240              		.loc 1 156 0 is_stmt 0 discriminator 1
 241 0084 FFF7FEFF 		bl	st_update_plan_block_parameters
 242              	.LVL29:
 243              	.L23:
 159:planner.c     ****         entry_speed_sqr = next->entry_speed_sqr + 2*current->acceleration*current->millimeters;
 244              		.loc 1 159 0 is_stmt 1
 245 0088 3423     		movs	r3, #52
 246 008a 3D4A     		ldr	r2, .L44
 247 008c 03FB0623 		mla	r3, r3, r6, r2
 248 0090 DF69     		ldr	r7, [r3, #28]	@ float
 249 0092 9869     		ldr	r0, [r3, #24]	@ float
 250 0094 3946     		mov	r1, r7
 251 0096 FFF7FEFF 		bl	__aeabi_fcmpeq
 252              	.LVL30:
 253 009a 20BB     		cbnz	r0, .L24
 160:planner.c     ****         if (entry_speed_sqr < current->max_entry_speed_sqr) {
 254              		.loc 1 160 0
 255 009c D8F81490 		ldr	r9, [r8, #20]	@ float
 256 00a0 3423     		movs	r3, #52
 257 00a2 374A     		ldr	r2, .L44
 258 00a4 03FB0628 		mla	r8, r3, r6, r2
 259              	.LVL31:
 260 00a8 D8F82000 		ldr	r0, [r8, #32]	@ float
 261 00ac 0146     		mov	r1, r0
 262 00ae FFF7FEFF 		bl	__aeabi_fadd
 263              	.LVL32:
 264 00b2 D8F82410 		ldr	r1, [r8, #36]	@ float
 265 00b6 FFF7FEFF 		bl	__aeabi_fmul
 266              	.LVL33:
 267 00ba 0146     		mov	r1, r0
 268 00bc 4846     		mov	r0, r9
 269 00be FFF7FEFF 		bl	__aeabi_fadd
 270              	.LVL34:
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 11


 271 00c2 8046     		mov	r8, r0
 272              	.LVL35:
 161:planner.c     ****           current->entry_speed_sqr = entry_speed_sqr;
 273              		.loc 1 161 0
 274 00c4 3846     		mov	r0, r7
 275              	.LVL36:
 276 00c6 4146     		mov	r1, r8
 277 00c8 FFF7FEFF 		bl	__aeabi_fcmpgt
 278              	.LVL37:
 279 00cc 30B1     		cbz	r0, .L42
 162:planner.c     ****         } else {
 280              		.loc 1 162 0
 281 00ce 3423     		movs	r3, #52
 282 00d0 2B4A     		ldr	r2, .L44
 283 00d2 03FB0626 		mla	r6, r3, r6, r2
 284 00d6 C6F81880 		str	r8, [r6, #24]	@ float
 285 00da 04E0     		b	.L24
 286              	.L42:
 164:planner.c     ****         }
 287              		.loc 1 164 0
 288 00dc 3422     		movs	r2, #52
 289 00de 284B     		ldr	r3, .L44
 290 00e0 02FB0636 		mla	r6, r2, r6, r3
 291 00e4 B761     		str	r7, [r6, #24]	@ float
 292              	.LVL38:
 293              	.L24:
 143:planner.c     **** 
 294              		.loc 1 143 0
 295 00e6 A846     		mov	r8, r5
 296              	.LVL39:
 297              	.L21:
 150:planner.c     ****       next = current;
 298              		.loc 1 150 0
 299 00e8 254B     		ldr	r3, .L44
 300 00ea 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 301 00ec 9C42     		cmp	r4, r3
 302 00ee BBD1     		bne	.L28
 303              	.LVL40:
 304              	.L22:
 172:planner.c     ****   block_index = plan_next_block_index(block_buffer_planned);
 305              		.loc 1 172 0
 306 00f0 234F     		ldr	r7, .L44
 307 00f2 7878     		ldrb	r0, [r7, #1]	@ zero_extendqisi2
 308 00f4 0437     		adds	r7, r7, #4
 309 00f6 3423     		movs	r3, #52
 310 00f8 03FB0077 		mla	r7, r3, r0, r7
 311              	.LVL41:
 173:planner.c     ****   while (block_index != block_buffer_head) {
 312              		.loc 1 173 0
 313 00fc FFF7FEFF 		bl	plan_next_block_index
 314              	.LVL42:
 315 0100 0446     		mov	r4, r0
 316              	.LVL43:
 174:planner.c     ****     current = next;
 317              		.loc 1 174 0
 318 0102 37E0     		b	.L29
 319              	.LVL44:
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 12


 320              	.L35:
 176:planner.c     **** 
 321              		.loc 1 176 0
 322 0104 2546     		mov	r5, r4
 323 0106 1E49     		ldr	r1, .L44
 324 0108 0E1D     		adds	r6, r1, #4
 325 010a 3422     		movs	r2, #52
 326 010c 02FB04F3 		mul	r3, r2, r4
 327 0110 1E44     		add	r6, r6, r3
 328              	.LVL45:
 181:planner.c     ****       entry_speed_sqr = current->entry_speed_sqr + 2*current->acceleration*current->millimeters;
 329              		.loc 1 181 0
 330 0112 D7F81480 		ldr	r8, [r7, #20]	@ float
 331 0116 0B44     		add	r3, r3, r1
 332 0118 D3F81890 		ldr	r9, [r3, #24]	@ float
 333 011c 4046     		mov	r0, r8
 334 011e 4946     		mov	r1, r9
 335 0120 FFF7FEFF 		bl	__aeabi_fcmplt
 336              	.LVL46:
 337 0124 B0B1     		cbz	r0, .L30
 182:planner.c     ****       // If true, current block is full-acceleration and we can move the planned pointer forward.
 338              		.loc 1 182 0
 339 0126 F869     		ldr	r0, [r7, #28]	@ float
 340 0128 0146     		mov	r1, r0
 341 012a FFF7FEFF 		bl	__aeabi_fadd
 342              	.LVL47:
 343 012e 396A     		ldr	r1, [r7, #32]	@ float
 344 0130 FFF7FEFF 		bl	__aeabi_fmul
 345              	.LVL48:
 346 0134 0146     		mov	r1, r0
 347 0136 4046     		mov	r0, r8
 348 0138 FFF7FEFF 		bl	__aeabi_fadd
 349              	.LVL49:
 350 013c 0746     		mov	r7, r0
 351              	.LVL50:
 184:planner.c     ****         next->entry_speed_sqr = entry_speed_sqr; // Always <= max_entry_speed_sqr. Backward pass se
 352              		.loc 1 184 0
 353 013e 4846     		mov	r0, r9
 354              	.LVL51:
 355 0140 3946     		mov	r1, r7
 356 0142 FFF7FEFF 		bl	__aeabi_fcmpgt
 357              	.LVL52:
 358 0146 28B1     		cbz	r0, .L30
 185:planner.c     ****         block_buffer_planned = block_index; // Set optimal plan pointer.
 359              		.loc 1 185 0
 360 0148 0D4A     		ldr	r2, .L44
 361 014a 3423     		movs	r3, #52
 362 014c 03FB0423 		mla	r3, r3, r4, r2
 363 0150 9F61     		str	r7, [r3, #24]	@ float
 186:planner.c     ****       }
 364              		.loc 1 186 0
 365 0152 5470     		strb	r4, [r2, #1]
 366              	.LVL53:
 367              	.L30:
 194:planner.c     ****     block_index = plan_next_block_index( block_index );
 368              		.loc 1 194 0
 369 0154 3422     		movs	r2, #52
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 13


 370 0156 0A4B     		ldr	r3, .L44
 371 0158 02FB0533 		mla	r3, r2, r5, r3
 372 015c 9869     		ldr	r0, [r3, #24]	@ float
 373 015e D969     		ldr	r1, [r3, #28]	@ float
 374 0160 FFF7FEFF 		bl	__aeabi_fcmpeq
 375              	.LVL54:
 376 0164 08B1     		cbz	r0, .L33
 194:planner.c     ****     block_index = plan_next_block_index( block_index );
 377              		.loc 1 194 0 is_stmt 0 discriminator 1
 378 0166 064B     		ldr	r3, .L44
 379 0168 5C70     		strb	r4, [r3, #1]
 380              	.L33:
 195:planner.c     ****   }
 381              		.loc 1 195 0 is_stmt 1
 382 016a 2046     		mov	r0, r4
 383 016c FFF7FEFF 		bl	plan_next_block_index
 384              	.LVL55:
 385 0170 0446     		mov	r4, r0
 386              	.LVL56:
 176:planner.c     **** 
 387              		.loc 1 176 0
 388 0172 3746     		mov	r7, r6
 389              	.LVL57:
 390              	.L29:
 174:planner.c     ****     current = next;
 391              		.loc 1 174 0
 392 0174 024B     		ldr	r3, .L44
 393 0176 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 394 0178 9C42     		cmp	r4, r3
 395 017a C3D1     		bne	.L35
 396              	.LVL58:
 397              	.L17:
 398 017c BDE8F883 		pop	{r3, r4, r5, r6, r7, r8, r9, pc}
 399              	.L45:
 400              		.align	2
 401              	.L44:
 402 0180 00000000 		.word	.LANCHOR0
 403              		.cfi_endproc
 404              	.LFE65:
 405              		.size	planner_recalculate, .-planner_recalculate
 406              		.section	.text.plan_reset_buffer,"ax",%progbits
 407              		.align	2
 408              		.global	plan_reset_buffer
 409              		.thumb
 410              		.thumb_func
 411              		.type	plan_reset_buffer, %function
 412              	plan_reset_buffer:
 413              	.LFB67:
 208:planner.c     ****   block_buffer_tail = 0;
 414              		.loc 1 208 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 209:planner.c     ****   block_buffer_head = 0; // Empty = tail
 419              		.loc 1 209 0
 420 0000 044B     		ldr	r3, .L47
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 14


 421 0002 0022     		movs	r2, #0
 422 0004 83F84423 		strb	r2, [r3, #836]
 210:planner.c     ****   next_buffer_head = 1; // plan_next_block_index(block_buffer_head)
 423              		.loc 1 210 0
 424 0008 1A70     		strb	r2, [r3]
 211:planner.c     ****   block_buffer_planned = 0; // = block_buffer_tail;
 425              		.loc 1 211 0
 426 000a 0121     		movs	r1, #1
 427 000c 83F84513 		strb	r1, [r3, #837]
 212:planner.c     **** }
 428              		.loc 1 212 0
 429 0010 5A70     		strb	r2, [r3, #1]
 430 0012 7047     		bx	lr
 431              	.L48:
 432              		.align	2
 433              	.L47:
 434 0014 00000000 		.word	.LANCHOR0
 435              		.cfi_endproc
 436              	.LFE67:
 437              		.size	plan_reset_buffer, .-plan_reset_buffer
 438              		.section	.text.plan_reset,"ax",%progbits
 439              		.align	2
 440              		.global	plan_reset
 441              		.thumb
 442              		.thumb_func
 443              		.type	plan_reset, %function
 444              	plan_reset:
 445              	.LFB66:
 201:planner.c     ****   memset(&pl, 0, sizeof(planner_t)); // Clear planner struct
 446              		.loc 1 201 0
 447              		.cfi_startproc
 448              		@ args = 0, pretend = 0, frame = 0
 449              		@ frame_needed = 0, uses_anonymous_args = 0
 450 0000 08B5     		push	{r3, lr}
 451              		.cfi_def_cfa_offset 8
 452              		.cfi_offset 3, -8
 453              		.cfi_offset 14, -4
 202:planner.c     ****   plan_reset_buffer();
 454              		.loc 1 202 0
 455 0002 094B     		ldr	r3, .L51
 456 0004 0022     		movs	r2, #0
 457 0006 C3F84823 		str	r2, [r3, #840]
 458 000a C3F84C23 		str	r2, [r3, #844]
 459 000e C3F85023 		str	r2, [r3, #848]
 460 0012 C3F85423 		str	r2, [r3, #852]
 461 0016 C3F85823 		str	r2, [r3, #856]
 462 001a C3F85C23 		str	r2, [r3, #860]
 463 001e C3F86023 		str	r2, [r3, #864]
 203:planner.c     **** }
 464              		.loc 1 203 0
 465 0022 FFF7FEFF 		bl	plan_reset_buffer
 466              	.LVL59:
 467 0026 08BD     		pop	{r3, pc}
 468              	.L52:
 469              		.align	2
 470              	.L51:
 471 0028 00000000 		.word	.LANCHOR0
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 15


 472              		.cfi_endproc
 473              	.LFE66:
 474              		.size	plan_reset, .-plan_reset
 475              		.section	.text.plan_discard_current_block,"ax",%progbits
 476              		.align	2
 477              		.global	plan_discard_current_block
 478              		.thumb
 479              		.thumb_func
 480              		.type	plan_discard_current_block, %function
 481              	plan_discard_current_block:
 482              	.LFB68:
 217:planner.c     ****   if (block_buffer_head != block_buffer_tail) { // Discard non-empty buffer.
 483              		.loc 1 217 0
 484              		.cfi_startproc
 485              		@ args = 0, pretend = 0, frame = 0
 486              		@ frame_needed = 0, uses_anonymous_args = 0
 487 0000 10B5     		push	{r4, lr}
 488              		.cfi_def_cfa_offset 8
 489              		.cfi_offset 4, -8
 490              		.cfi_offset 14, -4
 218:planner.c     ****     uint8_t block_index = plan_next_block_index( block_buffer_tail );
 491              		.loc 1 218 0
 492 0002 094B     		ldr	r3, .L57
 493 0004 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 494 0006 93F84443 		ldrb	r4, [r3, #836]	@ zero_extendqisi2
 495 000a A242     		cmp	r2, r4
 496 000c 0BD0     		beq	.L53
 497              	.LBB2:
 219:planner.c     ****     // Push block_buffer_planned pointer, if encountered.
 498              		.loc 1 219 0
 499 000e 2046     		mov	r0, r4
 500 0010 FFF7FEFF 		bl	plan_next_block_index
 501              	.LVL60:
 221:planner.c     ****     block_buffer_tail = block_index;
 502              		.loc 1 221 0
 503 0014 044B     		ldr	r3, .L57
 504 0016 5B78     		ldrb	r3, [r3, #1]	@ zero_extendqisi2
 505 0018 9C42     		cmp	r4, r3
 506 001a 01D1     		bne	.L55
 221:planner.c     ****     block_buffer_tail = block_index;
 507              		.loc 1 221 0 is_stmt 0 discriminator 1
 508 001c 024B     		ldr	r3, .L57
 509 001e 5870     		strb	r0, [r3, #1]
 510              	.L55:
 222:planner.c     ****   }
 511              		.loc 1 222 0 is_stmt 1
 512 0020 014B     		ldr	r3, .L57
 513 0022 83F84403 		strb	r0, [r3, #836]
 514              	.LVL61:
 515              	.L53:
 516 0026 10BD     		pop	{r4, pc}
 517              	.L58:
 518              		.align	2
 519              	.L57:
 520 0028 00000000 		.word	.LANCHOR0
 521              	.LBE2:
 522              		.cfi_endproc
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 16


 523              	.LFE68:
 524              		.size	plan_discard_current_block, .-plan_discard_current_block
 525              		.section	.text.plan_get_system_motion_block,"ax",%progbits
 526              		.align	2
 527              		.global	plan_get_system_motion_block
 528              		.thumb
 529              		.thumb_func
 530              		.type	plan_get_system_motion_block, %function
 531              	plan_get_system_motion_block:
 532              	.LFB69:
 229:planner.c     ****   return(&block_buffer[block_buffer_head]);
 533              		.loc 1 229 0
 534              		.cfi_startproc
 535              		@ args = 0, pretend = 0, frame = 0
 536              		@ frame_needed = 0, uses_anonymous_args = 0
 537              		@ link register save eliminated.
 230:planner.c     **** }
 538              		.loc 1 230 0
 539 0000 034B     		ldr	r3, .L60
 540 0002 13F8042B 		ldrb	r2, [r3], #4	@ zero_extendqisi2
 231:planner.c     **** 
 541              		.loc 1 231 0
 542 0006 3420     		movs	r0, #52
 543 0008 00FB0230 		mla	r0, r0, r2, r3
 544 000c 7047     		bx	lr
 545              	.L61:
 546 000e 00BF     		.align	2
 547              	.L60:
 548 0010 00000000 		.word	.LANCHOR0
 549              		.cfi_endproc
 550              	.LFE69:
 551              		.size	plan_get_system_motion_block, .-plan_get_system_motion_block
 552              		.section	.text.plan_get_current_block,"ax",%progbits
 553              		.align	2
 554              		.global	plan_get_current_block
 555              		.thumb
 556              		.thumb_func
 557              		.type	plan_get_current_block, %function
 558              	plan_get_current_block:
 559              	.LFB70:
 236:planner.c     ****   if (block_buffer_head == block_buffer_tail) { return(NULL); } // Buffer empty
 560              		.loc 1 236 0
 561              		.cfi_startproc
 562              		@ args = 0, pretend = 0, frame = 0
 563              		@ frame_needed = 0, uses_anonymous_args = 0
 564              		@ link register save eliminated.
 237:planner.c     ****   return(&block_buffer[block_buffer_tail]);
 565              		.loc 1 237 0
 566 0000 064B     		ldr	r3, .L65
 567 0002 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 568 0004 93F84433 		ldrb	r3, [r3, #836]	@ zero_extendqisi2
 569 0008 9A42     		cmp	r2, r3
 570 000a 04D0     		beq	.L64
 238:planner.c     **** }
 571              		.loc 1 238 0
 572 000c 3420     		movs	r0, #52
 573 000e 044A     		ldr	r2, .L65+4
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 17


 574 0010 00FB0320 		mla	r0, r0, r3, r2
 575 0014 7047     		bx	lr
 576              	.L64:
 237:planner.c     ****   return(&block_buffer[block_buffer_tail]);
 577              		.loc 1 237 0
 578 0016 0020     		movs	r0, #0
 239:planner.c     **** 
 579              		.loc 1 239 0
 580 0018 7047     		bx	lr
 581              	.L66:
 582 001a 00BF     		.align	2
 583              	.L65:
 584 001c 00000000 		.word	.LANCHOR0
 585 0020 04000000 		.word	.LANCHOR0+4
 586              		.cfi_endproc
 587              	.LFE70:
 588              		.size	plan_get_current_block, .-plan_get_current_block
 589              		.section	.text.plan_get_exec_block_exit_speed_sqr,"ax",%progbits
 590              		.align	2
 591              		.global	plan_get_exec_block_exit_speed_sqr
 592              		.thumb
 593              		.thumb_func
 594              		.type	plan_get_exec_block_exit_speed_sqr, %function
 595              	plan_get_exec_block_exit_speed_sqr:
 596              	.LFB71:
 243:planner.c     ****   uint8_t block_index = plan_next_block_index(block_buffer_tail);
 597              		.loc 1 243 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601 0000 10B5     		push	{r4, lr}
 602              		.cfi_def_cfa_offset 8
 603              		.cfi_offset 4, -8
 604              		.cfi_offset 14, -4
 244:planner.c     ****   if (block_index == block_buffer_head) { return( 0.0 ); }
 605              		.loc 1 244 0
 606 0002 074C     		ldr	r4, .L71
 607 0004 94F84403 		ldrb	r0, [r4, #836]	@ zero_extendqisi2
 608 0008 FFF7FEFF 		bl	plan_next_block_index
 609              	.LVL62:
 245:planner.c     ****   return( block_buffer[block_index].entry_speed_sqr );
 610              		.loc 1 245 0
 611 000c 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 612 000e 9842     		cmp	r0, r3
 613 0010 04D0     		beq	.L69
 246:planner.c     **** }
 614              		.loc 1 246 0
 615 0012 3422     		movs	r2, #52
 616 0014 02FB0040 		mla	r0, r2, r0, r4
 617              	.LVL63:
 618 0018 8069     		ldr	r0, [r0, #24]	@ float
 619 001a 10BD     		pop	{r4, pc}
 620              	.LVL64:
 621              	.L69:
 245:planner.c     ****   return( block_buffer[block_index].entry_speed_sqr );
 622              		.loc 1 245 0
 623 001c 0020     		movs	r0, #0
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 18


 624              	.LVL65:
 247:planner.c     **** 
 625              		.loc 1 247 0
 626 001e 10BD     		pop	{r4, pc}
 627              	.L72:
 628              		.align	2
 629              	.L71:
 630 0020 00000000 		.word	.LANCHOR0
 631              		.cfi_endproc
 632              	.LFE71:
 633              		.size	plan_get_exec_block_exit_speed_sqr, .-plan_get_exec_block_exit_speed_sqr
 634              		.section	.text.plan_check_full_buffer,"ax",%progbits
 635              		.align	2
 636              		.global	plan_check_full_buffer
 637              		.thumb
 638              		.thumb_func
 639              		.type	plan_check_full_buffer, %function
 640              	plan_check_full_buffer:
 641              	.LFB72:
 252:planner.c     ****   if (block_buffer_tail == next_buffer_head) { return(true); }
 642              		.loc 1 252 0
 643              		.cfi_startproc
 644              		@ args = 0, pretend = 0, frame = 0
 645              		@ frame_needed = 0, uses_anonymous_args = 0
 646              		@ link register save eliminated.
 253:planner.c     ****   return(false);
 647              		.loc 1 253 0
 648 0000 054B     		ldr	r3, .L76
 649 0002 93F84423 		ldrb	r2, [r3, #836]	@ zero_extendqisi2
 650 0006 93F84533 		ldrb	r3, [r3, #837]	@ zero_extendqisi2
 651 000a 9A42     		cmp	r2, r3
 652 000c 01D1     		bne	.L75
 653 000e 0120     		movs	r0, #1
 654 0010 7047     		bx	lr
 655              	.L75:
 254:planner.c     **** }
 656              		.loc 1 254 0
 657 0012 0020     		movs	r0, #0
 255:planner.c     **** 
 658              		.loc 1 255 0
 659 0014 7047     		bx	lr
 660              	.L77:
 661 0016 00BF     		.align	2
 662              	.L76:
 663 0018 00000000 		.word	.LANCHOR0
 664              		.cfi_endproc
 665              	.LFE72:
 666              		.size	plan_check_full_buffer, .-plan_check_full_buffer
 667              		.global	__aeabi_i2d
 668              		.global	__aeabi_dmul
 669              		.global	__aeabi_f2d
 670              		.global	__aeabi_d2f
 671              		.section	.text.plan_compute_profile_nominal_speed,"ax",%progbits
 672              		.align	2
 673              		.global	plan_compute_profile_nominal_speed
 674              		.thumb
 675              		.thumb_func
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 19


 676              		.type	plan_compute_profile_nominal_speed, %function
 677              	plan_compute_profile_nominal_speed:
 678              	.LFB73:
 261:planner.c     ****   float nominal_speed = block->programmed_rate;
 679              		.loc 1 261 0
 680              		.cfi_startproc
 681              		@ args = 0, pretend = 0, frame = 0
 682              		@ frame_needed = 0, uses_anonymous_args = 0
 683              	.LVL66:
 684 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 685              		.cfi_def_cfa_offset 24
 686              		.cfi_offset 3, -24
 687              		.cfi_offset 4, -20
 688              		.cfi_offset 5, -16
 689              		.cfi_offset 6, -12
 690              		.cfi_offset 7, -8
 691              		.cfi_offset 14, -4
 692 0002 0446     		mov	r4, r0
 262:planner.c     ****   if (block->condition & PL_COND_FLAG_RAPID_MOTION) { nominal_speed *= (0.01*sys.r_override); }
 693              		.loc 1 262 0
 694 0004 C56A     		ldr	r5, [r0, #44]	@ float
 695              	.LVL67:
 263:planner.c     ****   else {
 696              		.loc 1 263 0
 697 0006 437C     		ldrb	r3, [r0, #17]	@ zero_extendqisi2
 698 0008 13F0010F 		tst	r3, #1
 699 000c 15D0     		beq	.L79
 263:planner.c     ****   else {
 700              		.loc 1 263 0 is_stmt 0 discriminator 1
 701 000e 224B     		ldr	r3, .L85+8
 702 0010 187A     		ldrb	r0, [r3, #8]	@ zero_extendqisi2
 703              	.LVL68:
 704 0012 FFF7FEFF 		bl	__aeabi_i2d
 705              	.LVL69:
 706 0016 1EA3     		adr	r3, .L85
 707 0018 D3E90023 		ldrd	r2, [r3]
 708 001c FFF7FEFF 		bl	__aeabi_dmul
 709              	.LVL70:
 710 0020 0646     		mov	r6, r0
 711 0022 0F46     		mov	r7, r1
 712 0024 2846     		mov	r0, r5
 713 0026 FFF7FEFF 		bl	__aeabi_f2d
 714              	.LVL71:
 715 002a 3246     		mov	r2, r6
 716 002c 3B46     		mov	r3, r7
 717 002e FFF7FEFF 		bl	__aeabi_dmul
 718              	.LVL72:
 719 0032 FFF7FEFF 		bl	__aeabi_d2f
 720              	.LVL73:
 721 0036 0446     		mov	r4, r0
 722              	.LVL74:
 723 0038 1EE0     		b	.L80
 724              	.LVL75:
 725              	.L79:
 265:planner.c     ****     if (nominal_speed > block->rapid_rate) { nominal_speed = block->rapid_rate; }
 726              		.loc 1 265 0 is_stmt 1
 727 003a 13F0040F 		tst	r3, #4
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 20


 728 003e 14D1     		bne	.L81
 265:planner.c     ****     if (nominal_speed > block->rapid_rate) { nominal_speed = block->rapid_rate; }
 729              		.loc 1 265 0 is_stmt 0 discriminator 1
 730 0040 154B     		ldr	r3, .L85+8
 731 0042 D879     		ldrb	r0, [r3, #7]	@ zero_extendqisi2
 732              	.LVL76:
 733 0044 FFF7FEFF 		bl	__aeabi_i2d
 734              	.LVL77:
 735 0048 11A3     		adr	r3, .L85
 736 004a D3E90023 		ldrd	r2, [r3]
 737 004e FFF7FEFF 		bl	__aeabi_dmul
 738              	.LVL78:
 739 0052 0646     		mov	r6, r0
 740 0054 0F46     		mov	r7, r1
 741 0056 2846     		mov	r0, r5
 742 0058 FFF7FEFF 		bl	__aeabi_f2d
 743              	.LVL79:
 744 005c 3246     		mov	r2, r6
 745 005e 3B46     		mov	r3, r7
 746 0060 FFF7FEFF 		bl	__aeabi_dmul
 747              	.LVL80:
 748 0064 FFF7FEFF 		bl	__aeabi_d2f
 749              	.LVL81:
 750 0068 0546     		mov	r5, r0
 751              	.LVL82:
 752              	.L81:
 266:planner.c     ****   }
 753              		.loc 1 266 0 is_stmt 1
 754 006a A46A     		ldr	r4, [r4, #40]	@ float
 755              	.LVL83:
 756 006c 2046     		mov	r0, r4
 757 006e 2946     		mov	r1, r5
 758 0070 FFF7FEFF 		bl	__aeabi_fcmplt
 759              	.LVL84:
 760 0074 00B9     		cbnz	r0, .L80
 761 0076 2C46     		mov	r4, r5
 762              	.LVL85:
 763              	.L80:
 268:planner.c     ****   return(MINIMUM_FEED_RATE);
 764              		.loc 1 268 0
 765 0078 2046     		mov	r0, r4
 766 007a 4FF07E51 		mov	r1, #1065353216
 767 007e FFF7FEFF 		bl	__aeabi_fcmpgt
 768              	.LVL86:
 769 0082 10B9     		cbnz	r0, .L83
 269:planner.c     **** }
 770              		.loc 1 269 0
 771 0084 4FF07E50 		mov	r0, #1065353216
 772 0088 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 773              	.LVL87:
 774              	.L83:
 268:planner.c     ****   return(MINIMUM_FEED_RATE);
 775              		.loc 1 268 0
 776 008a 2046     		mov	r0, r4
 270:planner.c     **** 
 777              		.loc 1 270 0
 778 008c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 21


 779              	.LVL88:
 780              	.L86:
 781 008e 00BF     		.align	3
 782              	.L85:
 783 0090 7B14AE47 		.word	1202590843
 784 0094 E17A843F 		.word	1065646817
 785 0098 00000000 		.word	sys
 786              		.cfi_endproc
 787              	.LFE73:
 788              		.size	plan_compute_profile_nominal_speed, .-plan_compute_profile_nominal_speed
 789 009c AFF30080 		.section	.text.plan_update_velocity_profile_parameters,"ax",%progbits
 790              		.align	2
 791              		.global	plan_update_velocity_profile_parameters
 792              		.thumb
 793              		.thumb_func
 794              		.type	plan_update_velocity_profile_parameters, %function
 795              	plan_update_velocity_profile_parameters:
 796              	.LFB75:
 281:planner.c     **** }
 282:planner.c     **** 
 283:planner.c     **** 
 284:planner.c     **** // Re-calculates buffered motions profile parameters upon a motion-based override change.
 285:planner.c     **** void plan_update_velocity_profile_parameters()
 286:planner.c     **** {
 797              		.loc 1 286 0
 798              		.cfi_startproc
 799              		@ args = 0, pretend = 0, frame = 0
 800              		@ frame_needed = 0, uses_anonymous_args = 0
 801 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 802              		.cfi_def_cfa_offset 24
 803              		.cfi_offset 3, -24
 804              		.cfi_offset 4, -20
 805              		.cfi_offset 5, -16
 806              		.cfi_offset 6, -12
 807              		.cfi_offset 7, -8
 808              		.cfi_offset 14, -4
 287:planner.c     ****   uint8_t block_index = block_buffer_tail;
 809              		.loc 1 287 0
 810 0002 0F4B     		ldr	r3, .L91
 811 0004 93F84453 		ldrb	r5, [r3, #836]	@ zero_extendqisi2
 812              	.LVL89:
 288:planner.c     ****   plan_block_t *block;
 289:planner.c     ****   float nominal_speed;
 290:planner.c     ****   float prev_nominal_speed = SOME_LARGE_VALUE; // Set high for first block nominal speed calculatio
 813              		.loc 1 290 0
 814 0008 0E4F     		ldr	r7, .L91+4
 291:planner.c     ****   while (block_index != block_buffer_head) {
 815              		.loc 1 291 0
 816 000a 11E0     		b	.L88
 817              	.LVL90:
 818              	.L89:
 292:planner.c     ****     block = &block_buffer[block_index];
 819              		.loc 1 292 0
 820 000c 3423     		movs	r3, #52
 821 000e 0E4C     		ldr	r4, .L91+8
 822 0010 03FB0544 		mla	r4, r3, r5, r4
 823              	.LVL91:
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 22


 293:planner.c     ****     nominal_speed = plan_compute_profile_nominal_speed(block);
 824              		.loc 1 293 0
 825 0014 2046     		mov	r0, r4
 826 0016 FFF7FEFF 		bl	plan_compute_profile_nominal_speed
 827              	.LVL92:
 828 001a 0646     		mov	r6, r0
 829              	.LVL93:
 294:planner.c     ****     plan_compute_profile_parameters(block, nominal_speed, prev_nominal_speed);
 830              		.loc 1 294 0
 831 001c 2046     		mov	r0, r4
 832              	.LVL94:
 833 001e 3146     		mov	r1, r6
 834 0020 3A46     		mov	r2, r7
 835 0022 FFF7FEFF 		bl	plan_compute_profile_parameters
 836              	.LVL95:
 295:planner.c     ****     prev_nominal_speed = nominal_speed;
 296:planner.c     ****     block_index = plan_next_block_index(block_index);
 837              		.loc 1 296 0
 838 0026 2846     		mov	r0, r5
 839 0028 FFF7FEFF 		bl	plan_next_block_index
 840              	.LVL96:
 841 002c 0546     		mov	r5, r0
 842              	.LVL97:
 295:planner.c     ****     prev_nominal_speed = nominal_speed;
 843              		.loc 1 295 0
 844 002e 3746     		mov	r7, r6
 845              	.LVL98:
 846              	.L88:
 291:planner.c     ****     block = &block_buffer[block_index];
 847              		.loc 1 291 0
 848 0030 034B     		ldr	r3, .L91
 849 0032 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 850 0034 9D42     		cmp	r5, r3
 851 0036 E9D1     		bne	.L89
 297:planner.c     ****   }
 298:planner.c     ****   pl.previous_nominal_speed = prev_nominal_speed; // Update prev nominal speed for next incoming bl
 852              		.loc 1 298 0
 853 0038 014B     		ldr	r3, .L91
 854 003a C3F86073 		str	r7, [r3, #864]	@ float
 855 003e F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 856              	.LVL99:
 857              	.L92:
 858              		.align	2
 859              	.L91:
 860 0040 00000000 		.word	.LANCHOR0
 861 0044 9976967E 		.word	2123789977
 862 0048 04000000 		.word	.LANCHOR0+4
 863              		.cfi_endproc
 864              	.LFE75:
 865              		.size	plan_update_velocity_profile_parameters, .-plan_update_velocity_profile_parameters
 866              		.global	__aeabi_i2f
 867              		.global	__aeabi_fdiv
 868              		.global	__aeabi_fsub
 869              		.global	__aeabi_dcmpgt
 870              		.global	__aeabi_dcmplt
 871              		.global	__aeabi_dsub
 872              		.global	__aeabi_ddiv
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 23


 873              		.section	.text.plan_buffer_line,"ax",%progbits
 874              		.align	2
 875              		.global	plan_buffer_line
 876              		.thumb
 877              		.thumb_func
 878              		.type	plan_buffer_line, %function
 879              	plan_buffer_line:
 880              	.LFB76:
 299:planner.c     **** }
 300:planner.c     **** 
 301:planner.c     **** 
 302:planner.c     **** /* Add a new linear movement to the buffer. target[N_AXIS] is the signed, absolute target position
 303:planner.c     ****    in millimeters. Feed rate specifies the speed of the motion. If feed rate is inverted, the feed
 304:planner.c     ****    rate is taken to mean "frequency" and would complete the operation in 1/feed_rate minutes.
 305:planner.c     ****    All position data passed to the planner must be in terms of machine position to keep the planner
 306:planner.c     ****    independent of any coordinate system changes and offsets, which are handled by the g-code parser
 307:planner.c     ****    NOTE: Assumes buffer is available. Buffer checks are handled at a higher level by motion_control
 308:planner.c     ****    In other words, the buffer head is never equal to the buffer tail.  Also the feed rate input val
 309:planner.c     ****    is used in three ways: as a normal feed rate if invert_feed_rate is false, as inverse time if
 310:planner.c     ****    invert_feed_rate is true, or as seek/rapids rate if the feed_rate value is negative (and
 311:planner.c     ****    invert_feed_rate always false).
 312:planner.c     ****    The system motion condition tells the planner to plan a motion in the always unused block buffer
 313:planner.c     ****    head. It avoids changing the planner state and preserves the buffer to ensure subsequent gcode
 314:planner.c     ****    motions are still planned correctly, while the stepper module only points to the block buffer he
 315:planner.c     ****    to execute the special system motion. */
 316:planner.c     **** uint8_t plan_buffer_line(float *target, plan_line_data_t *pl_data)
 317:planner.c     **** {
 881              		.loc 1 317 0
 882              		.cfi_startproc
 883              		@ args = 0, pretend = 0, frame = 48
 884              		@ frame_needed = 0, uses_anonymous_args = 0
 885              	.LVL100:
 886 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
 887              		.cfi_def_cfa_offset 32
 888              		.cfi_offset 4, -32
 889              		.cfi_offset 5, -28
 890              		.cfi_offset 6, -24
 891              		.cfi_offset 7, -20
 892              		.cfi_offset 8, -16
 893              		.cfi_offset 9, -12
 894              		.cfi_offset 10, -8
 895              		.cfi_offset 14, -4
 896 0004 8CB0     		sub	sp, sp, #48
 897              		.cfi_def_cfa_offset 80
 898 0006 8146     		mov	r9, r0
 899 0008 8A46     		mov	r10, r1
 318:planner.c     ****   // Prepare and initialize new block. Copy relevant pl_data for block execution.
 319:planner.c     ****   plan_block_t *block = &block_buffer[block_buffer_head];
 900              		.loc 1 319 0
 901 000a BB4E     		ldr	r6, .L123+16
 902 000c B046     		mov	r8, r6
 903 000e 18F8045B 		ldrb	r5, [r8], #4	@ zero_extendqisi2
 904 0012 3422     		movs	r2, #52
 905 0014 02FB05F4 		mul	r4, r2, r5
 906 0018 A044     		add	r8, r8, r4
 907              	.LVL101:
 320:planner.c     ****   memset(block,0,sizeof(plan_block_t)); // Zero all block values.
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 24


 908              		.loc 1 320 0
 909 001a 4046     		mov	r0, r8
 910              	.LVL102:
 911 001c 0021     		movs	r1, #0
 912              	.LVL103:
 913 001e FFF7FEFF 		bl	memset
 914              	.LVL104:
 321:planner.c     ****   block->condition = pl_data->condition;
 915              		.loc 1 321 0
 916 0022 9AF80830 		ldrb	r3, [r10, #8]	@ zero_extendqisi2
 917 0026 3444     		add	r4, r4, r6
 918 0028 6375     		strb	r3, [r4, #21]
 322:planner.c     ****   #ifdef VARIABLE_SPINDLE
 323:planner.c     ****     block->spindle_speed = pl_data->spindle_speed;
 919              		.loc 1 323 0
 920 002a DAF80420 		ldr	r2, [r10, #4]	@ float
 921 002e 6263     		str	r2, [r4, #52]	@ float
 324:planner.c     ****   #endif
 325:planner.c     ****   #ifdef USE_LINE_NUMBERS
 326:planner.c     ****     block->line_number = pl_data->line_number;
 327:planner.c     ****   #endif
 328:planner.c     **** 
 329:planner.c     ****   // Compute and store initial move distance data.
 330:planner.c     ****   int32_t target_steps[N_AXIS], position_steps[N_AXIS];
 331:planner.c     ****   float unit_vec[N_AXIS], delta_mm;
 332:planner.c     ****   uint8_t idx;
 333:planner.c     **** 
 334:planner.c     ****   // Copy position data based on type of motion being planned.
 335:planner.c     ****   if (block->condition & PL_COND_FLAG_SYSTEM_MOTION) { 
 922              		.loc 1 335 0
 923 0030 13F0020F 		tst	r3, #2
 924 0034 06D0     		beq	.L94
 336:planner.c     ****     #ifdef COREXY
 337:planner.c     ****       position_steps[X_AXIS] = system_convert_corexy_to_x_axis_steps(sys_position);
 338:planner.c     ****       position_steps[Y_AXIS] = system_convert_corexy_to_y_axis_steps(sys_position);
 339:planner.c     ****       position_steps[Z_AXIS] = sys_position[Z_AXIS];
 340:planner.c     ****     #else
 341:planner.c     ****       memcpy(position_steps, sys_position, sizeof(sys_position)); 
 925              		.loc 1 341 0
 926 0036 B14A     		ldr	r2, .L123+20
 927 0038 06AB     		add	r3, sp, #24
 928 003a 07CA     		ldmia	r2, {r0, r1, r2}
 929 003c 83E80700 		stmia	r3, {r0, r1, r2}
 930              	.L96:
 317:planner.c     ****   // Prepare and initialize new block. Copy relevant pl_data for block execution.
 931              		.loc 1 317 0 discriminator 1
 932 0040 0024     		movs	r4, #0
 933 0042 45E0     		b	.L95
 934              	.LVL105:
 935              	.L94:
 342:planner.c     ****     #endif
 343:planner.c     ****   } else { memcpy(position_steps, pl.position, sizeof(pl.position)); }
 936              		.loc 1 343 0
 937 0044 06AB     		add	r3, sp, #24
 938 0046 AE4A     		ldr	r2, .L123+24
 939 0048 07CA     		ldmia	r2, {r0, r1, r2}
 940 004a 83E80700 		stmia	r3, {r0, r1, r2}
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 25


 941 004e F7E7     		b	.L96
 942              	.LVL106:
 943              	.L99:
 344:planner.c     **** 
 345:planner.c     ****   #ifdef COREXY
 346:planner.c     ****     target_steps[A_MOTOR] = lround(target[A_MOTOR]*settings.steps_per_mm[A_MOTOR]);
 347:planner.c     ****     target_steps[B_MOTOR] = lround(target[B_MOTOR]*settings.steps_per_mm[B_MOTOR]);
 348:planner.c     ****     block->steps[A_MOTOR] = labs((target_steps[X_AXIS]-position_steps[X_AXIS]) + (target_steps[Y_AX
 349:planner.c     ****     block->steps[B_MOTOR] = labs((target_steps[X_AXIS]-position_steps[X_AXIS]) - (target_steps[Y_AX
 350:planner.c     ****   #endif
 351:planner.c     **** 
 352:planner.c     ****   for (idx=0; idx<N_AXIS; idx++) {
 353:planner.c     ****     // Calculate target position in absolute steps, number of steps for each axis, and determine ma
 354:planner.c     ****     // Also, compute individual axes distance for move and prep unit vector calculations.
 355:planner.c     ****     // NOTE: Computes true distance from converted step values.
 356:planner.c     ****     #ifdef COREXY
 357:planner.c     ****       if ( !(idx == A_MOTOR) && !(idx == B_MOTOR) ) {
 358:planner.c     ****         target_steps[idx] = lround(target[idx]*settings.steps_per_mm[idx]);
 359:planner.c     ****         block->steps[idx] = labs(target_steps[idx]-position_steps[idx]);
 360:planner.c     ****       }
 361:planner.c     ****       block->step_event_count = max(block->step_event_count, block->steps[idx]);
 362:planner.c     ****       if (idx == A_MOTOR) {
 363:planner.c     ****         delta_mm = (target_steps[X_AXIS]-position_steps[X_AXIS] + target_steps[Y_AXIS]-position_ste
 364:planner.c     ****       } else if (idx == B_MOTOR) {
 365:planner.c     ****         delta_mm = (target_steps[X_AXIS]-position_steps[X_AXIS] - target_steps[Y_AXIS]+position_ste
 366:planner.c     ****       } else {
 367:planner.c     ****         delta_mm = (target_steps[idx] - position_steps[idx])/settings.steps_per_mm[idx];
 368:planner.c     ****       }
 369:planner.c     ****     #else
 370:planner.c     ****       target_steps[idx] = lround(target[idx]*settings.steps_per_mm[idx]);
 944              		.loc 1 370 0
 945 0050 AC4F     		ldr	r7, .L123+28
 946 0052 59F82400 		ldr	r0, [r9, r4, lsl #2]	@ float
 947 0056 57F82410 		ldr	r1, [r7, r4, lsl #2]	@ float
 948 005a FFF7FEFF 		bl	__aeabi_fmul
 949              	.LVL107:
 950 005e FFF7FEFF 		bl	__aeabi_f2d
 951              	.LVL108:
 952 0062 FFF7FEFF 		bl	lround
 953              	.LVL109:
 954 0066 0CAB     		add	r3, sp, #48
 955 0068 03EB8406 		add	r6, r3, r4, lsl #2
 956 006c 46F80C0C 		str	r0, [r6, #-12]
 371:planner.c     ****       block->steps[idx] = labs(target_steps[idx]-position_steps[idx]);
 957              		.loc 1 371 0
 958 0070 56F8183C 		ldr	r3, [r6, #-24]
 959 0074 C01A     		subs	r0, r0, r3
 960 0076 80EAE072 		eor	r2, r0, r0, asr #31
 961 007a A2EBE072 		sub	r2, r2, r0, asr #31
 962 007e 9E49     		ldr	r1, .L123+16
 963 0080 05EB4503 		add	r3, r5, r5, lsl #1
 964 0084 05EB8303 		add	r3, r5, r3, lsl #2
 965 0088 2344     		add	r3, r3, r4
 966 008a 01EB8303 		add	r3, r1, r3, lsl #2
 967 008e 5A60     		str	r2, [r3, #4]
 372:planner.c     ****       block->step_event_count = max(block->step_event_count, block->steps[idx]);
 968              		.loc 1 372 0
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 26


 969 0090 3423     		movs	r3, #52
 970 0092 03FB0513 		mla	r3, r3, r5, r1
 971 0096 1969     		ldr	r1, [r3, #16]
 972 0098 8A42     		cmp	r2, r1
 973 009a 38BF     		it	cc
 974 009c 0A46     		movcc	r2, r1
 975 009e 1A61     		str	r2, [r3, #16]
 373:planner.c     ****       delta_mm = (target_steps[idx] - position_steps[idx])/settings.steps_per_mm[idx];
 976              		.loc 1 373 0
 977 00a0 FFF7FEFF 		bl	__aeabi_i2f
 978              	.LVL110:
 979 00a4 57F82410 		ldr	r1, [r7, r4, lsl #2]	@ float
 980 00a8 FFF7FEFF 		bl	__aeabi_fdiv
 981              	.LVL111:
 374:planner.c     **** 	  #endif
 375:planner.c     ****     unit_vec[idx] = delta_mm; // Store unit vector numerator
 982              		.loc 1 375 0
 983 00ac 46F8240C 		str	r0, [r6, #-36]	@ float
 376:planner.c     **** 
 377:planner.c     ****     // Set direction bits. Bit enabled always means direction is negative.
 378:planner.c     ****     if (delta_mm < 0.0 ) { block->direction_bits |= get_direction_pin_mask(idx); }
 984              		.loc 1 378 0
 985 00b0 0021     		movs	r1, #0
 986 00b2 FFF7FEFF 		bl	__aeabi_fcmplt
 987              	.LVL112:
 988 00b6 48B1     		cbz	r0, .L97
 989              		.loc 1 378 0 is_stmt 0 discriminator 1
 990 00b8 2046     		mov	r0, r4
 991 00ba FFF7FEFF 		bl	get_direction_pin_mask
 992              	.LVL113:
 993 00be 3423     		movs	r3, #52
 994 00c0 8D4A     		ldr	r2, .L123+16
 995 00c2 03FB0523 		mla	r3, r3, r5, r2
 996 00c6 1A7D     		ldrb	r2, [r3, #20]	@ zero_extendqisi2
 997 00c8 1043     		orrs	r0, r0, r2
 998 00ca 1875     		strb	r0, [r3, #20]
 999              	.L97:
 352:planner.c     ****     // Calculate target position in absolute steps, number of steps for each axis, and determine ma
 1000              		.loc 1 352 0 is_stmt 1 discriminator 2
 1001 00cc 0134     		adds	r4, r4, #1
 1002              	.LVL114:
 1003 00ce E4B2     		uxtb	r4, r4
 1004              	.LVL115:
 1005              	.L95:
 352:planner.c     ****     // Calculate target position in absolute steps, number of steps for each axis, and determine ma
 1006              		.loc 1 352 0 is_stmt 0 discriminator 1
 1007 00d0 022C     		cmp	r4, #2
 1008 00d2 BDD9     		bls	.L99
 379:planner.c     ****   }
 380:planner.c     **** 
 381:planner.c     ****   // Bail if this is a zero-length block. Highly unlikely to occur.
 382:planner.c     ****   if (block->step_event_count == 0) { return(PLAN_EMPTY_BLOCK); }
 1009              		.loc 1 382 0 is_stmt 1
 1010 00d4 3423     		movs	r3, #52
 1011 00d6 884A     		ldr	r2, .L123+16
 1012 00d8 03FB0523 		mla	r3, r3, r5, r2
 1013 00dc 1B69     		ldr	r3, [r3, #16]
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 27


 1014 00de 002B     		cmp	r3, #0
 1015 00e0 00F0F980 		beq	.L113
 383:planner.c     **** 
 384:planner.c     ****   // Calculate the unit vector of the line move and the block maximum feed rate and acceleration sc
 385:planner.c     ****   // down such that no individual axes maximum values are exceeded with respect to the line directi
 386:planner.c     ****   // NOTE: This calculation assumes all axes are orthogonal (Cartesian) and works with ABC-axes,
 387:planner.c     ****   // if they are also orthogonal/independent. Operates on the absolute value of the unit vector.
 388:planner.c     ****   block->millimeters = convert_delta_vector_to_unit_vector(unit_vec);
 1016              		.loc 1 388 0
 1017 00e4 03A8     		add	r0, sp, #12
 1018 00e6 FFF7FEFF 		bl	convert_delta_vector_to_unit_vector
 1019              	.LVL116:
 1020 00ea 3423     		movs	r3, #52
 1021 00ec 824C     		ldr	r4, .L123+16
 1022              	.LVL117:
 1023 00ee 03FB0544 		mla	r4, r3, r5, r4
 1024 00f2 6062     		str	r0, [r4, #36]	@ float
 389:planner.c     ****   block->acceleration = limit_value_by_axis_maximum(settings.acceleration, unit_vec);
 1025              		.loc 1 389 0
 1026 00f4 844E     		ldr	r6, .L123+32
 1027 00f6 3046     		mov	r0, r6
 1028 00f8 03A9     		add	r1, sp, #12
 1029 00fa FFF7FEFF 		bl	limit_value_by_axis_maximum
 1030              	.LVL118:
 1031 00fe 2062     		str	r0, [r4, #32]	@ float
 390:planner.c     ****   block->rapid_rate = limit_value_by_axis_maximum(settings.max_rate, unit_vec);
 1032              		.loc 1 390 0
 1033 0100 A6F10C00 		sub	r0, r6, #12
 1034 0104 03A9     		add	r1, sp, #12
 1035 0106 FFF7FEFF 		bl	limit_value_by_axis_maximum
 1036              	.LVL119:
 1037 010a E062     		str	r0, [r4, #44]	@ float
 391:planner.c     **** 
 392:planner.c     ****   // Store programmed rate.
 393:planner.c     ****   if (block->condition & PL_COND_FLAG_RAPID_MOTION) { block->programmed_rate = block->rapid_rate; }
 1038              		.loc 1 393 0
 1039 010c 647D     		ldrb	r4, [r4, #21]	@ zero_extendqisi2
 1040 010e 14F0010F 		tst	r4, #1
 1041 0112 05D0     		beq	.L101
 1042              		.loc 1 393 0 is_stmt 0 discriminator 1
 1043 0114 3423     		movs	r3, #52
 1044 0116 784A     		ldr	r2, .L123+16
 1045 0118 03FB0523 		mla	r3, r3, r5, r2
 1046 011c 1863     		str	r0, [r3, #48]	@ float
 1047 011e 12E0     		b	.L102
 1048              	.L101:
 394:planner.c     ****   else { 
 395:planner.c     ****     block->programmed_rate = pl_data->feed_rate;
 1049              		.loc 1 395 0 is_stmt 1
 1050 0120 DAF80000 		ldr	r0, [r10]	@ float
 1051 0124 3423     		movs	r3, #52
 1052 0126 744A     		ldr	r2, .L123+16
 1053 0128 03FB0523 		mla	r3, r3, r5, r2
 1054 012c 1863     		str	r0, [r3, #48]	@ float
 396:planner.c     ****     if (block->condition & PL_COND_FLAG_INVERSE_TIME) { block->programmed_rate *= block->millimeter
 1055              		.loc 1 396 0
 1056 012e 14F0080F 		tst	r4, #8
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 28


 1057 0132 08D0     		beq	.L102
 1058              		.loc 1 396 0 is_stmt 0 discriminator 1
 1059 0134 3423     		movs	r3, #52
 1060 0136 03FB0523 		mla	r3, r3, r5, r2
 1061 013a 03F12C06 		add	r6, r3, #44
 1062 013e 596A     		ldr	r1, [r3, #36]	@ float
 1063 0140 FFF7FEFF 		bl	__aeabi_fmul
 1064              	.LVL120:
 1065 0144 7060     		str	r0, [r6, #4]	@ float
 1066              	.L102:
 397:planner.c     ****   }
 398:planner.c     **** 
 399:planner.c     ****   // TODO: Need to check this method handling zero junction speeds when starting from rest.
 400:planner.c     ****   if ((block_buffer_head == block_buffer_tail) || (block->condition & PL_COND_FLAG_SYSTEM_MOTION)) 
 1067              		.loc 1 400 0 is_stmt 1
 1068 0146 6C4B     		ldr	r3, .L123+16
 1069 0148 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1070 014a 93F84433 		ldrb	r3, [r3, #836]	@ zero_extendqisi2
 1071 014e 9A42     		cmp	r2, r3
 1072 0150 02D0     		beq	.L103
 1073              		.loc 1 400 0 is_stmt 0 discriminator 1
 1074 0152 14F0020F 		tst	r4, #2
 1075 0156 23D0     		beq	.L114
 1076              	.L103:
 401:planner.c     **** 
 402:planner.c     ****     // Initialize block entry speed as zero. Assume it will be starting from rest. Planner will cor
 403:planner.c     ****     // If system motion, the system motion block always is assumed to start from rest and end at a 
 404:planner.c     ****     block->entry_speed_sqr = 0.0;
 1077              		.loc 1 404 0 is_stmt 1
 1078 0158 3423     		movs	r3, #52
 1079 015a 674A     		ldr	r2, .L123+16
 1080 015c 03FB0523 		mla	r3, r3, r5, r2
 1081 0160 0022     		movs	r2, #0
 1082 0162 9A61     		str	r2, [r3, #24]	@ float
 405:planner.c     ****     block->max_junction_speed_sqr = 0.0; // Starting from rest. Enforce start from zero velocity.
 1083              		.loc 1 405 0
 1084 0164 9A62     		str	r2, [r3, #40]	@ float
 1085 0166 89E0     		b	.L105
 1086              	.LVL121:
 1087              	.L106:
 1088              	.LBB3:
 406:planner.c     **** 
 407:planner.c     ****   } else {
 408:planner.c     ****     // Compute maximum allowable entry speed at junction by centripetal acceleration approximation.
 409:planner.c     ****     // Let a circle be tangent to both previous and current path line segments, where the junction
 410:planner.c     ****     // deviation is defined as the distance from the junction to the closest edge of the circle,
 411:planner.c     ****     // colinear with the circle center. The circular segment joining the two paths represents the
 412:planner.c     ****     // path of centripetal acceleration. Solve for max velocity based on max acceleration about the
 413:planner.c     ****     // radius of the circle, defined indirectly by junction deviation. This may be also viewed as
 414:planner.c     ****     // path width or max_jerk in the previous Grbl version. This approach does not actually deviate
 415:planner.c     ****     // from path, but used as a robust way to compute cornering speeds, as it takes into account th
 416:planner.c     ****     // nonlinearities of both the junction angle and junction velocity.
 417:planner.c     ****     //
 418:planner.c     ****     // NOTE: If the junction deviation value is finite, Grbl executes the motions in an exact path
 419:planner.c     ****     // mode (G61). If the junction deviation value is zero, Grbl will execute the motion in an exac
 420:planner.c     ****     // stop mode (G61.1) manner. In the future, if continuous mode (G64) is desired, the math here
 421:planner.c     ****     // is exactly the same. Instead of motioning all the way to junction point, the machine will
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 29


 422:planner.c     ****     // just follow the arc circle defined here. The Arduino doesn't have the CPU cycles to perform
 423:planner.c     ****     // a continuous mode path, but ARM-based microcontrollers most certainly do.
 424:planner.c     ****     //
 425:planner.c     ****     // NOTE: The max junction speed is a fixed value, since machine acceleration limits cannot be
 426:planner.c     ****     // changed dynamically during operation nor can the line move geometry. This must be kept in
 427:planner.c     ****     // memory in the event of a feedrate override changing the nominal speeds of blocks, which can
 428:planner.c     ****     // change the overall maximum entry speed conditions of all blocks.
 429:planner.c     **** 
 430:planner.c     ****     float junction_unit_vec[N_AXIS];
 431:planner.c     ****     float junction_cos_theta = 0.0;
 432:planner.c     ****     for (idx=0; idx<N_AXIS; idx++) {
 433:planner.c     ****       junction_cos_theta -= pl.previous_unit_vec[idx]*unit_vec[idx];
 1089              		.loc 1 433 0 discriminator 3
 1090 0168 634B     		ldr	r3, .L123+16
 1091 016a 03EB8403 		add	r3, r3, r4, lsl #2
 1092 016e D3F85473 		ldr	r7, [r3, #852]	@ float
 1093 0172 0CAB     		add	r3, sp, #48
 1094 0174 03EB8406 		add	r6, r3, r4, lsl #2
 1095 0178 56F824AC 		ldr	r10, [r6, #-36]	@ float
 1096 017c 3846     		mov	r0, r7
 1097 017e 5146     		mov	r1, r10
 1098 0180 FFF7FEFF 		bl	__aeabi_fmul
 1099              	.LVL122:
 1100 0184 0146     		mov	r1, r0
 1101 0186 4846     		mov	r0, r9
 1102 0188 FFF7FEFF 		bl	__aeabi_fsub
 1103              	.LVL123:
 1104 018c 8146     		mov	r9, r0
 1105              	.LVL124:
 434:planner.c     ****       junction_unit_vec[idx] = unit_vec[idx]-pl.previous_unit_vec[idx];
 1106              		.loc 1 434 0 discriminator 3
 1107 018e 5046     		mov	r0, r10
 1108              	.LVL125:
 1109 0190 3946     		mov	r1, r7
 1110 0192 FFF7FEFF 		bl	__aeabi_fsub
 1111              	.LVL126:
 1112 0196 46F8300C 		str	r0, [r6, #-48]	@ float
 432:planner.c     ****       junction_cos_theta -= pl.previous_unit_vec[idx]*unit_vec[idx];
 1113              		.loc 1 432 0 discriminator 3
 1114 019a 0134     		adds	r4, r4, #1
 1115              	.LVL127:
 1116 019c E4B2     		uxtb	r4, r4
 1117              	.LVL128:
 1118 019e 02E0     		b	.L104
 1119              	.LVL129:
 1120              	.L114:
 1121              	.LBE3:
 1122 01a0 4FF00009 		mov	r9, #0
 1123              	.LVL130:
 1124 01a4 0024     		movs	r4, #0
 1125              	.LVL131:
 1126              	.L104:
 1127              	.LBB5:
 432:planner.c     ****       junction_cos_theta -= pl.previous_unit_vec[idx]*unit_vec[idx];
 1128              		.loc 1 432 0 is_stmt 0 discriminator 1
 1129 01a6 022C     		cmp	r4, #2
 1130 01a8 DED9     		bls	.L106
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 30


 435:planner.c     ****     }
 436:planner.c     **** 
 437:planner.c     ****     // NOTE: Computed without any expensive trig, sin() or acos(), by trig half angle identity of c
 438:planner.c     ****     if (junction_cos_theta > 0.999999) {
 1131              		.loc 1 438 0 is_stmt 1
 1132 01aa 4846     		mov	r0, r9
 1133 01ac FFF7FEFF 		bl	__aeabi_f2d
 1134              	.LVL132:
 1135 01b0 0646     		mov	r6, r0
 1136 01b2 0F46     		mov	r7, r1
 1137 01b4 4CA3     		adr	r3, .L123
 1138 01b6 D3E90023 		ldrd	r2, [r3]
 1139 01ba FFF7FEFF 		bl	__aeabi_dcmpgt
 1140              	.LVL133:
 1141 01be 30B1     		cbz	r0, .L120
 439:planner.c     ****       //  For a 0 degree acute junction, just set minimum junction speed.
 440:planner.c     ****       block->max_junction_speed_sqr = MINIMUM_JUNCTION_SPEED*MINIMUM_JUNCTION_SPEED;
 1142              		.loc 1 440 0
 1143 01c0 3423     		movs	r3, #52
 1144 01c2 4D4A     		ldr	r2, .L123+16
 1145 01c4 03FB0523 		mla	r3, r3, r5, r2
 1146 01c8 0022     		movs	r2, #0
 1147 01ca 9A62     		str	r2, [r3, #40]	@ float
 1148 01cc 56E0     		b	.L105
 1149              	.L120:
 441:planner.c     ****     } else {
 442:planner.c     ****       if (junction_cos_theta < -0.999999) {
 1150              		.loc 1 442 0
 1151 01ce 3046     		mov	r0, r6
 1152 01d0 3946     		mov	r1, r7
 1153 01d2 47A3     		adr	r3, .L123+8
 1154 01d4 D3E90023 		ldrd	r2, [r3]
 1155 01d8 FFF7FEFF 		bl	__aeabi_dcmplt
 1156              	.LVL134:
 1157 01dc 30B1     		cbz	r0, .L121
 443:planner.c     ****         // Junction is a straight line or 180 degrees. Junction speed is infinite.
 444:planner.c     ****         block->max_junction_speed_sqr = SOME_LARGE_VALUE;
 1158              		.loc 1 444 0
 1159 01de 3423     		movs	r3, #52
 1160 01e0 454A     		ldr	r2, .L123+16
 1161 01e2 03FB0523 		mla	r3, r3, r5, r2
 1162 01e6 494A     		ldr	r2, .L123+36
 1163 01e8 9A62     		str	r2, [r3, #40]	@ float
 1164 01ea 47E0     		b	.L105
 1165              	.L121:
 1166              	.LBB4:
 445:planner.c     ****       } else {
 446:planner.c     ****         convert_delta_vector_to_unit_vector(junction_unit_vec);
 1167              		.loc 1 446 0
 1168 01ec 6846     		mov	r0, sp
 1169 01ee FFF7FEFF 		bl	convert_delta_vector_to_unit_vector
 1170              	.LVL135:
 447:planner.c     ****         float junction_acceleration = limit_value_by_axis_maximum(settings.acceleration, junction_u
 1171              		.loc 1 447 0
 1172 01f2 454C     		ldr	r4, .L123+32
 1173              	.LVL136:
 1174 01f4 2046     		mov	r0, r4
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 31


 1175 01f6 6946     		mov	r1, sp
 1176 01f8 FFF7FEFF 		bl	limit_value_by_axis_maximum
 1177              	.LVL137:
 1178 01fc 8146     		mov	r9, r0
 1179              	.LVL138:
 448:planner.c     ****         float sin_theta_d2 = sqrt(0.5*(1.0-junction_cos_theta)); // Trig half angle identity. Alway
 1180              		.loc 1 448 0
 1181 01fe 0020     		movs	r0, #0
 1182              	.LVL139:
 1183 0200 4349     		ldr	r1, .L123+40
 1184 0202 3246     		mov	r2, r6
 1185 0204 3B46     		mov	r3, r7
 1186 0206 FFF7FEFF 		bl	__aeabi_dsub
 1187              	.LVL140:
 1188 020a 0646     		mov	r6, r0
 1189 020c 0F46     		mov	r7, r1
 1190 020e 3046     		mov	r0, r6
 1191 0210 3946     		mov	r1, r7
 1192 0212 0022     		movs	r2, #0
 1193 0214 3F4B     		ldr	r3, .L123+44
 1194 0216 FFF7FEFF 		bl	__aeabi_dmul
 1195              	.LVL141:
 1196 021a FFF7FEFF 		bl	sqrt
 1197              	.LVL142:
 1198 021e FFF7FEFF 		bl	__aeabi_d2f
 1199              	.LVL143:
 1200 0222 0646     		mov	r6, r0
 1201              	.LVL144:
 449:planner.c     ****         block->max_junction_speed_sqr = max( MINIMUM_JUNCTION_SPEED*MINIMUM_JUNCTION_SPEED,
 1202              		.loc 1 449 0
 1203 0224 206A     		ldr	r0, [r4, #32]	@ float
 1204              	.LVL145:
 1205 0226 4946     		mov	r1, r9
 1206 0228 FFF7FEFF 		bl	__aeabi_fmul
 1207              	.LVL146:
 1208 022c 3146     		mov	r1, r6
 1209 022e FFF7FEFF 		bl	__aeabi_fmul
 1210              	.LVL147:
 1211 0232 0446     		mov	r4, r0
 1212 0234 3046     		mov	r0, r6
 1213 0236 FFF7FEFF 		bl	__aeabi_f2d
 1214              	.LVL148:
 1215 023a 0246     		mov	r2, r0
 1216 023c 0B46     		mov	r3, r1
 1217 023e 0020     		movs	r0, #0
 1218 0240 3349     		ldr	r1, .L123+40
 1219 0242 FFF7FEFF 		bl	__aeabi_dsub
 1220              	.LVL149:
 1221 0246 0646     		mov	r6, r0
 1222              	.LVL150:
 1223 0248 0F46     		mov	r7, r1
 1224 024a 2046     		mov	r0, r4
 1225 024c FFF7FEFF 		bl	__aeabi_f2d
 1226              	.LVL151:
 1227 0250 3246     		mov	r2, r6
 1228 0252 3B46     		mov	r3, r7
 1229 0254 FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 32


 1230              	.LVL152:
 1231 0258 0646     		mov	r6, r0
 1232 025a 0F46     		mov	r7, r1
 1233 025c 0022     		movs	r2, #0
 1234 025e 0023     		movs	r3, #0
 1235 0260 FFF7FEFF 		bl	__aeabi_dcmplt
 1236              	.LVL153:
 1237 0264 20B9     		cbnz	r0, .L115
 1238              		.loc 1 449 0 is_stmt 0 discriminator 2
 1239 0266 3046     		mov	r0, r6
 1240 0268 3946     		mov	r1, r7
 1241 026a FFF7FEFF 		bl	__aeabi_d2f
 1242              	.LVL154:
 1243 026e 00E0     		b	.L112
 1244              	.L115:
 1245              		.loc 1 449 0
 1246 0270 0020     		movs	r0, #0
 1247              	.L112:
 1248              		.loc 1 449 0 discriminator 4
 1249 0272 3423     		movs	r3, #52
 1250 0274 204A     		ldr	r2, .L123+16
 1251 0276 03FB0523 		mla	r3, r3, r5, r2
 1252 027a 9862     		str	r0, [r3, #40]	@ float
 1253              	.LVL155:
 1254              	.L105:
 1255              	.LBE4:
 1256              	.LBE5:
 450:planner.c     ****                        (junction_acceleration * settings.junction_deviation * sin_theta_d2)/(1.0-si
 451:planner.c     ****       }
 452:planner.c     ****     }
 453:planner.c     ****   }
 454:planner.c     **** 
 455:planner.c     ****   // Block system motion from updating this data to ensure next g-code motion is computed correctly
 456:planner.c     ****   if (!(block->condition & PL_COND_FLAG_SYSTEM_MOTION)) {
 1257              		.loc 1 456 0 is_stmt 1
 1258 027c 3422     		movs	r2, #52
 1259 027e 1E4B     		ldr	r3, .L123+16
 1260 0280 02FB0535 		mla	r5, r2, r5, r3
 1261 0284 6B7D     		ldrb	r3, [r5, #21]	@ zero_extendqisi2
 1262 0286 13F0020F 		tst	r3, #2
 1263 028a 26D1     		bne	.L116
 1264              	.LBB6:
 457:planner.c     ****     float nominal_speed = plan_compute_profile_nominal_speed(block);
 1265              		.loc 1 457 0
 1266 028c 4046     		mov	r0, r8
 1267 028e FFF7FEFF 		bl	plan_compute_profile_nominal_speed
 1268              	.LVL156:
 1269 0292 0546     		mov	r5, r0
 1270              	.LVL157:
 458:planner.c     ****     plan_compute_profile_parameters(block, nominal_speed, pl.previous_nominal_speed);
 1271              		.loc 1 458 0
 1272 0294 184C     		ldr	r4, .L123+16
 1273 0296 4046     		mov	r0, r8
 1274              	.LVL158:
 1275 0298 2946     		mov	r1, r5
 1276 029a D4F86023 		ldr	r2, [r4, #864]	@ float
 1277 029e FFF7FEFF 		bl	plan_compute_profile_parameters
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 33


 1278              	.LVL159:
 459:planner.c     ****     pl.previous_nominal_speed = nominal_speed;
 1279              		.loc 1 459 0
 1280 02a2 C4F86053 		str	r5, [r4, #864]	@ float
 460:planner.c     **** 
 461:planner.c     ****     // Update previous path unit_vector and planner position.
 462:planner.c     ****     memcpy(pl.previous_unit_vec, unit_vec, sizeof(unit_vec)); // pl.previous_unit_vec[] = unit_vec[
 1281              		.loc 1 462 0
 1282 02a6 04F55573 		add	r3, r4, #852
 1283 02aa 03AA     		add	r2, sp, #12
 1284 02ac 07CA     		ldmia	r2, {r0, r1, r2}
 1285 02ae 83E80700 		stmia	r3, {r0, r1, r2}
 463:planner.c     ****     memcpy(pl.position, target_steps, sizeof(target_steps)); // pl.position[] = target_steps[]
 1286              		.loc 1 463 0
 1287 02b2 04F55273 		add	r3, r4, #840
 1288 02b6 0CAA     		add	r2, sp, #48
 1289 02b8 12E90700 		ldmdb	r2, {r0, r1, r2}
 1290 02bc 83E80700 		stmia	r3, {r0, r1, r2}
 464:planner.c     **** 
 465:planner.c     ****     // New block is all set. Update buffer head and next buffer head indices.
 466:planner.c     ****     block_buffer_head = next_buffer_head;
 1291              		.loc 1 466 0
 1292 02c0 94F84503 		ldrb	r0, [r4, #837]	@ zero_extendqisi2
 1293 02c4 2070     		strb	r0, [r4]
 467:planner.c     ****     next_buffer_head = plan_next_block_index(block_buffer_head);
 1294              		.loc 1 467 0
 1295 02c6 FFF7FEFF 		bl	plan_next_block_index
 1296              	.LVL160:
 1297 02ca 84F84503 		strb	r0, [r4, #837]
 468:planner.c     **** 
 469:planner.c     ****     // Finish up by recalculating the plan with the new block.
 470:planner.c     ****     planner_recalculate();
 1298              		.loc 1 470 0
 1299 02ce FFF7FEFF 		bl	planner_recalculate
 1300              	.LVL161:
 1301              	.LBE6:
 471:planner.c     ****   }
 472:planner.c     ****   return(PLAN_OK);
 1302              		.loc 1 472 0
 1303 02d2 0120     		movs	r0, #1
 1304 02d4 02E0     		b	.L100
 1305              	.LVL162:
 1306              	.L113:
 382:planner.c     **** 
 1307              		.loc 1 382 0
 1308 02d6 0020     		movs	r0, #0
 1309 02d8 00E0     		b	.L100
 1310              	.LVL163:
 1311              	.L116:
 1312              		.loc 1 472 0
 1313 02da 0120     		movs	r0, #1
 1314              	.L100:
 473:planner.c     **** }
 1315              		.loc 1 473 0
 1316 02dc 0CB0     		add	sp, sp, #48
 1317              		.cfi_def_cfa_offset 32
 1318              		@ sp needed
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 34


 1319 02de BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 1320              	.LVL164:
 1321              	.L124:
 1322 02e2 00BFAFF3 		.align	3
 1322      0080
 1323              	.L123:
 1324 02e8 E90B21E7 		.word	-417264663
 1325 02ec FDFFEF3F 		.word	1072693245
 1326 02f0 E90B21E7 		.word	-417264663
 1327 02f4 FDFFEFBF 		.word	-1074790403
 1328 02f8 00000000 		.word	.LANCHOR0
 1329 02fc 00000000 		.word	sys_position
 1330 0300 48030000 		.word	.LANCHOR0+840
 1331 0304 00000000 		.word	settings
 1332 0308 18000000 		.word	settings+24
 1333 030c 9976967E 		.word	2123789977
 1334 0310 0000F03F 		.word	1072693248
 1335 0314 0000E03F 		.word	1071644672
 1336              		.cfi_endproc
 1337              	.LFE76:
 1338              		.size	plan_buffer_line, .-plan_buffer_line
 1339              		.section	.text.plan_sync_position,"ax",%progbits
 1340              		.align	2
 1341              		.global	plan_sync_position
 1342              		.thumb
 1343              		.thumb_func
 1344              		.type	plan_sync_position, %function
 1345              	plan_sync_position:
 1346              	.LFB77:
 474:planner.c     **** 
 475:planner.c     **** 
 476:planner.c     **** // Reset the planner position vectors. Called by the system abort/initialization routine.
 477:planner.c     **** void plan_sync_position()
 478:planner.c     **** {
 1347              		.loc 1 478 0
 1348              		.cfi_startproc
 1349              		@ args = 0, pretend = 0, frame = 0
 1350              		@ frame_needed = 0, uses_anonymous_args = 0
 1351              		@ link register save eliminated.
 1352              	.LVL165:
 479:planner.c     ****   // TODO: For motor configurations not in the same coordinate frame as the machine position,
 480:planner.c     ****   // this function needs to be updated to accomodate the difference.
 481:planner.c     ****   uint8_t idx;
 482:planner.c     ****   for (idx=0; idx<N_AXIS; idx++) {
 1353              		.loc 1 482 0
 1354 0000 0023     		movs	r3, #0
 1355 0002 09E0     		b	.L126
 1356              	.LVL166:
 1357              	.L127:
 483:planner.c     ****     #ifdef COREXY
 484:planner.c     ****       if (idx==X_AXIS) {
 485:planner.c     ****         pl.position[X_AXIS] = system_convert_corexy_to_x_axis_steps(sys_position);
 486:planner.c     ****       } else if (idx==Y_AXIS) {
 487:planner.c     ****         pl.position[Y_AXIS] = system_convert_corexy_to_y_axis_steps(sys_position);
 488:planner.c     ****       } else {
 489:planner.c     ****         pl.position[idx] = sys_position[idx];
 490:planner.c     ****       }
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 35


 491:planner.c     ****     #else
 492:planner.c     ****       pl.position[idx] = sys_position[idx];
 1358              		.loc 1 492 0 discriminator 3
 1359 0004 064A     		ldr	r2, .L128
 1360 0006 52F82310 		ldr	r1, [r2, r3, lsl #2]
 1361 000a 064A     		ldr	r2, .L128+4
 1362 000c 02EB8302 		add	r2, r2, r3, lsl #2
 1363 0010 C2F84813 		str	r1, [r2, #840]
 482:planner.c     ****     #ifdef COREXY
 1364              		.loc 1 482 0 discriminator 3
 1365 0014 0133     		adds	r3, r3, #1
 1366              	.LVL167:
 1367 0016 DBB2     		uxtb	r3, r3
 1368              	.LVL168:
 1369              	.L126:
 482:planner.c     ****     #ifdef COREXY
 1370              		.loc 1 482 0 is_stmt 0 discriminator 1
 1371 0018 022B     		cmp	r3, #2
 1372 001a F3D9     		bls	.L127
 493:planner.c     ****     #endif
 494:planner.c     ****   }
 495:planner.c     **** }
 1373              		.loc 1 495 0 is_stmt 1
 1374 001c 7047     		bx	lr
 1375              	.L129:
 1376 001e 00BF     		.align	2
 1377              	.L128:
 1378 0020 00000000 		.word	sys_position
 1379 0024 00000000 		.word	.LANCHOR0
 1380              		.cfi_endproc
 1381              	.LFE77:
 1382              		.size	plan_sync_position, .-plan_sync_position
 1383              		.section	.text.plan_get_block_buffer_available,"ax",%progbits
 1384              		.align	2
 1385              		.global	plan_get_block_buffer_available
 1386              		.thumb
 1387              		.thumb_func
 1388              		.type	plan_get_block_buffer_available, %function
 1389              	plan_get_block_buffer_available:
 1390              	.LFB78:
 496:planner.c     **** 
 497:planner.c     **** 
 498:planner.c     **** // Returns the number of available blocks are in the planner buffer.
 499:planner.c     **** uint8_t plan_get_block_buffer_available()
 500:planner.c     **** {
 1391              		.loc 1 500 0
 1392              		.cfi_startproc
 1393              		@ args = 0, pretend = 0, frame = 0
 1394              		@ frame_needed = 0, uses_anonymous_args = 0
 1395              		@ link register save eliminated.
 501:planner.c     ****   if (block_buffer_head >= block_buffer_tail) { return((BLOCK_BUFFER_SIZE-1)-(block_buffer_head-blo
 1396              		.loc 1 501 0
 1397 0000 064B     		ldr	r3, .L133
 1398 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1399 0004 93F84433 		ldrb	r3, [r3, #836]	@ zero_extendqisi2
 1400 0008 9842     		cmp	r0, r3
 1401 000a 03D3     		bcc	.L131
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 36


 1402              		.loc 1 501 0 is_stmt 0 discriminator 1
 1403 000c 181A     		subs	r0, r3, r0
 1404 000e 0F30     		adds	r0, r0, #15
 1405 0010 C0B2     		uxtb	r0, r0
 1406 0012 7047     		bx	lr
 1407              	.L131:
 502:planner.c     ****   return((block_buffer_tail-block_buffer_head-1));
 1408              		.loc 1 502 0 is_stmt 1
 1409 0014 181A     		subs	r0, r3, r0
 1410 0016 0138     		subs	r0, r0, #1
 1411 0018 C0B2     		uxtb	r0, r0
 503:planner.c     **** }
 1412              		.loc 1 503 0
 1413 001a 7047     		bx	lr
 1414              	.L134:
 1415              		.align	2
 1416              	.L133:
 1417 001c 00000000 		.word	.LANCHOR0
 1418              		.cfi_endproc
 1419              	.LFE78:
 1420              		.size	plan_get_block_buffer_available, .-plan_get_block_buffer_available
 1421              		.section	.text.plan_get_block_buffer_count,"ax",%progbits
 1422              		.align	2
 1423              		.global	plan_get_block_buffer_count
 1424              		.thumb
 1425              		.thumb_func
 1426              		.type	plan_get_block_buffer_count, %function
 1427              	plan_get_block_buffer_count:
 1428              	.LFB79:
 504:planner.c     **** 
 505:planner.c     **** 
 506:planner.c     **** // Returns the number of active blocks are in the planner buffer.
 507:planner.c     **** // NOTE: Deprecated. Not used unless classic status reports are enabled in config.h
 508:planner.c     **** uint8_t plan_get_block_buffer_count()
 509:planner.c     **** {
 1429              		.loc 1 509 0
 1430              		.cfi_startproc
 1431              		@ args = 0, pretend = 0, frame = 0
 1432              		@ frame_needed = 0, uses_anonymous_args = 0
 1433              		@ link register save eliminated.
 510:planner.c     ****   if (block_buffer_head >= block_buffer_tail) { return(block_buffer_head-block_buffer_tail); }
 1434              		.loc 1 510 0
 1435 0000 064A     		ldr	r2, .L138
 1436 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 1437 0004 92F84403 		ldrb	r0, [r2, #836]	@ zero_extendqisi2
 1438 0008 8342     		cmp	r3, r0
 1439 000a 02D3     		bcc	.L136
 1440              		.loc 1 510 0 is_stmt 0 discriminator 1
 1441 000c 181A     		subs	r0, r3, r0
 1442 000e C0B2     		uxtb	r0, r0
 1443 0010 7047     		bx	lr
 1444              	.L136:
 511:planner.c     ****   return(BLOCK_BUFFER_SIZE - (block_buffer_tail-block_buffer_head));
 1445              		.loc 1 511 0 is_stmt 1
 1446 0012 181A     		subs	r0, r3, r0
 1447 0014 1030     		adds	r0, r0, #16
 1448 0016 C0B2     		uxtb	r0, r0
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 37


 512:planner.c     **** }
 1449              		.loc 1 512 0
 1450 0018 7047     		bx	lr
 1451              	.L139:
 1452 001a 00BF     		.align	2
 1453              	.L138:
 1454 001c 00000000 		.word	.LANCHOR0
 1455              		.cfi_endproc
 1456              	.LFE79:
 1457              		.size	plan_get_block_buffer_count, .-plan_get_block_buffer_count
 1458              		.section	.text.plan_cycle_reinitialize,"ax",%progbits
 1459              		.align	2
 1460              		.global	plan_cycle_reinitialize
 1461              		.thumb
 1462              		.thumb_func
 1463              		.type	plan_cycle_reinitialize, %function
 1464              	plan_cycle_reinitialize:
 1465              	.LFB80:
 513:planner.c     **** 
 514:planner.c     **** 
 515:planner.c     **** // Re-initialize buffer plan with a partially completed block, assumed to exist at the buffer tail.
 516:planner.c     **** // Called after a steppers have come to a complete stop for a feed hold and the cycle is stopped.
 517:planner.c     **** void plan_cycle_reinitialize()
 518:planner.c     **** {
 1466              		.loc 1 518 0
 1467              		.cfi_startproc
 1468              		@ args = 0, pretend = 0, frame = 0
 1469              		@ frame_needed = 0, uses_anonymous_args = 0
 1470 0000 08B5     		push	{r3, lr}
 1471              		.cfi_def_cfa_offset 8
 1472              		.cfi_offset 3, -8
 1473              		.cfi_offset 14, -4
 519:planner.c     ****   // Re-plan from a complete stop. Reset planner entry speeds and buffer planned pointer.
 520:planner.c     ****   st_update_plan_block_parameters();
 1474              		.loc 1 520 0
 1475 0002 FFF7FEFF 		bl	st_update_plan_block_parameters
 1476              	.LVL169:
 521:planner.c     ****   block_buffer_planned = block_buffer_tail;
 1477              		.loc 1 521 0
 1478 0006 034B     		ldr	r3, .L142
 1479 0008 93F84423 		ldrb	r2, [r3, #836]	@ zero_extendqisi2
 1480 000c 5A70     		strb	r2, [r3, #1]
 522:planner.c     ****   planner_recalculate();
 1481              		.loc 1 522 0
 1482 000e FFF7FEFF 		bl	planner_recalculate
 1483              	.LVL170:
 1484 0012 08BD     		pop	{r3, pc}
 1485              	.L143:
 1486              		.align	2
 1487              	.L142:
 1488 0014 00000000 		.word	.LANCHOR0
 1489              		.cfi_endproc
 1490              	.LFE80:
 1491              		.size	plan_cycle_reinitialize, .-plan_cycle_reinitialize
 1492              		.comm	exec_lcd_status,1,1
 1493              		.comm	sys_rt_exec_debug,1,1
 1494              		.comm	sys_rt_exec_accessory_override,1,1
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 38


 1495              		.comm	sys_rt_exec_motion_override,1,1
 1496              		.comm	sys_rt_exec_alarm,1,1
 1497              		.comm	sys_rt_exec_state,1,1
 1498              		.comm	sys_probe_state,1,1
 1499              		.comm	sys_probe_position,12,4
 1500              		.comm	sys_position,12,4
 1501              		.bss
 1502              		.align	2
 1503              		.set	.LANCHOR0,. + 0
 1504              		.type	block_buffer_head, %object
 1505              		.size	block_buffer_head, 1
 1506              	block_buffer_head:
 1507 0000 00       		.space	1
 1508              		.type	block_buffer_planned, %object
 1509              		.size	block_buffer_planned, 1
 1510              	block_buffer_planned:
 1511 0001 00       		.space	1
 1512 0002 0000     		.space	2
 1513              		.type	block_buffer, %object
 1514              		.size	block_buffer, 832
 1515              	block_buffer:
 1516 0004 00000000 		.space	832
 1516      00000000 
 1516      00000000 
 1516      00000000 
 1516      00000000 
 1517              		.type	block_buffer_tail, %object
 1518              		.size	block_buffer_tail, 1
 1519              	block_buffer_tail:
 1520 0344 00       		.space	1
 1521              		.type	next_buffer_head, %object
 1522              		.size	next_buffer_head, 1
 1523              	next_buffer_head:
 1524 0345 00       		.space	1
 1525 0346 0000     		.space	2
 1526              		.type	pl, %object
 1527              		.size	pl, 28
 1528              	pl:
 1529 0348 00000000 		.space	28
 1529      00000000 
 1529      00000000 
 1529      00000000 
 1529      00000000 
 1530              		.text
 1531              	.Letext0:
 1532              		.file 2 "d:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1533              		.file 3 "d:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9.
 1534              		.file 4 "settings.h"
 1535              		.file 5 "system.h"
 1536              		.file 6 "planner.h"
 1537              		.file 7 "Generated_Source\\PSoC5/core_cm3.h"
 1538              		.file 8 "lcd_report.h"
 1539              		.file 9 "nuts_bolts.h"
 1540              		.file 10 "d:\\program files (x86)\\cypress\\psoc creator\\4.0\\psoc creator\\import\\gnu\\arm\\4.9
 1541              		.file 11 "stepper.h"
 1542              		.section	.debug_info,"",%progbits
 1543              	.Ldebug_info0:
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 39


 1544 0000 3F0B0000 		.4byte	0xb3f
 1545 0004 0400     		.2byte	0x4
 1546 0006 00000000 		.4byte	.Ldebug_abbrev0
 1547 000a 04       		.byte	0x4
 1548 000b 01       		.uleb128 0x1
 1549 000c 9D060000 		.4byte	.LASF125
 1550 0010 01       		.byte	0x1
 1551 0011 3D020000 		.4byte	.LASF126
 1552 0015 AC020000 		.4byte	.LASF127
 1553 0019 18000000 		.4byte	.Ldebug_ranges0+0x18
 1554 001d 00000000 		.4byte	0
 1555 0021 00000000 		.4byte	.Ldebug_line0
 1556 0025 02       		.uleb128 0x2
 1557 0026 04       		.byte	0x4
 1558 0027 04       		.byte	0x4
 1559 0028 81010000 		.4byte	.LASF0
 1560 002c 02       		.uleb128 0x2
 1561 002d 01       		.byte	0x1
 1562 002e 06       		.byte	0x6
 1563 002f CF070000 		.4byte	.LASF1
 1564 0033 03       		.uleb128 0x3
 1565 0034 08060000 		.4byte	.LASF4
 1566 0038 02       		.byte	0x2
 1567 0039 1D       		.byte	0x1d
 1568 003a 3E000000 		.4byte	0x3e
 1569 003e 02       		.uleb128 0x2
 1570 003f 01       		.byte	0x1
 1571 0040 08       		.byte	0x8
 1572 0041 84060000 		.4byte	.LASF2
 1573 0045 02       		.uleb128 0x2
 1574 0046 02       		.byte	0x2
 1575 0047 05       		.byte	0x5
 1576 0048 3E050000 		.4byte	.LASF3
 1577 004c 03       		.uleb128 0x3
 1578 004d DF010000 		.4byte	.LASF5
 1579 0051 02       		.byte	0x2
 1580 0052 2B       		.byte	0x2b
 1581 0053 57000000 		.4byte	0x57
 1582 0057 02       		.uleb128 0x2
 1583 0058 02       		.byte	0x2
 1584 0059 07       		.byte	0x7
 1585 005a F1070000 		.4byte	.LASF6
 1586 005e 03       		.uleb128 0x3
 1587 005f 9A000000 		.4byte	.LASF7
 1588 0063 02       		.byte	0x2
 1589 0064 3F       		.byte	0x3f
 1590 0065 69000000 		.4byte	0x69
 1591 0069 02       		.uleb128 0x2
 1592 006a 04       		.byte	0x4
 1593 006b 05       		.byte	0x5
 1594 006c 6B050000 		.4byte	.LASF8
 1595 0070 03       		.uleb128 0x3
 1596 0071 92060000 		.4byte	.LASF9
 1597 0075 02       		.byte	0x2
 1598 0076 41       		.byte	0x41
 1599 0077 7B000000 		.4byte	0x7b
 1600 007b 02       		.uleb128 0x2
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 40


 1601 007c 04       		.byte	0x4
 1602 007d 07       		.byte	0x7
 1603 007e 53060000 		.4byte	.LASF10
 1604 0082 02       		.uleb128 0x2
 1605 0083 08       		.byte	0x8
 1606 0084 05       		.byte	0x5
 1607 0085 D8030000 		.4byte	.LASF11
 1608 0089 02       		.uleb128 0x2
 1609 008a 08       		.byte	0x8
 1610 008b 07       		.byte	0x7
 1611 008c 9D010000 		.4byte	.LASF12
 1612 0090 04       		.uleb128 0x4
 1613 0091 04       		.byte	0x4
 1614 0092 05       		.byte	0x5
 1615 0093 696E7400 		.ascii	"int\000"
 1616 0097 02       		.uleb128 0x2
 1617 0098 04       		.byte	0x4
 1618 0099 07       		.byte	0x7
 1619 009a 7D000000 		.4byte	.LASF13
 1620 009e 03       		.uleb128 0x3
 1621 009f 7A030000 		.4byte	.LASF14
 1622 00a3 03       		.byte	0x3
 1623 00a4 15       		.byte	0x15
 1624 00a5 33000000 		.4byte	0x33
 1625 00a9 03       		.uleb128 0x3
 1626 00aa EC040000 		.4byte	.LASF15
 1627 00ae 03       		.byte	0x3
 1628 00af 21       		.byte	0x21
 1629 00b0 4C000000 		.4byte	0x4c
 1630 00b4 03       		.uleb128 0x3
 1631 00b5 65060000 		.4byte	.LASF16
 1632 00b9 03       		.byte	0x3
 1633 00ba 2C       		.byte	0x2c
 1634 00bb 5E000000 		.4byte	0x5e
 1635 00bf 03       		.uleb128 0x3
 1636 00c0 51010000 		.4byte	.LASF17
 1637 00c4 03       		.byte	0x3
 1638 00c5 2D       		.byte	0x2d
 1639 00c6 70000000 		.4byte	0x70
 1640 00ca 02       		.uleb128 0x2
 1641 00cb 08       		.byte	0x8
 1642 00cc 04       		.byte	0x4
 1643 00cd 2F080000 		.4byte	.LASF18
 1644 00d1 02       		.uleb128 0x2
 1645 00d2 01       		.byte	0x1
 1646 00d3 08       		.byte	0x8
 1647 00d4 09030000 		.4byte	.LASF19
 1648 00d8 02       		.uleb128 0x2
 1649 00d9 04       		.byte	0x4
 1650 00da 07       		.byte	0x7
 1651 00db 4A060000 		.4byte	.LASF20
 1652 00df 05       		.uleb128 0x5
 1653 00e0 04       		.byte	0x4
 1654 00e1 06       		.uleb128 0x6
 1655 00e2 9E000000 		.4byte	0x9e
 1656 00e6 02       		.uleb128 0x2
 1657 00e7 08       		.byte	0x8
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 41


 1658 00e8 04       		.byte	0x4
 1659 00e9 C5040000 		.4byte	.LASF21
 1660 00ed 07       		.uleb128 0x7
 1661 00ee 5C       		.byte	0x5c
 1662 00ef 04       		.byte	0x4
 1663 00f0 4F       		.byte	0x4f
 1664 00f1 DA010000 		.4byte	0x1da
 1665 00f5 08       		.uleb128 0x8
 1666 00f6 06040000 		.4byte	.LASF22
 1667 00fa 04       		.byte	0x4
 1668 00fb 51       		.byte	0x51
 1669 00fc DA010000 		.4byte	0x1da
 1670 0100 00       		.byte	0
 1671 0101 08       		.uleb128 0x8
 1672 0102 F5040000 		.4byte	.LASF23
 1673 0106 04       		.byte	0x4
 1674 0107 52       		.byte	0x52
 1675 0108 DA010000 		.4byte	0x1da
 1676 010c 0C       		.byte	0xc
 1677 010d 08       		.uleb128 0x8
 1678 010e 20010000 		.4byte	.LASF24
 1679 0112 04       		.byte	0x4
 1680 0113 53       		.byte	0x53
 1681 0114 DA010000 		.4byte	0x1da
 1682 0118 18       		.byte	0x18
 1683 0119 08       		.uleb128 0x8
 1684 011a EA020000 		.4byte	.LASF25
 1685 011e 04       		.byte	0x4
 1686 011f 54       		.byte	0x54
 1687 0120 DA010000 		.4byte	0x1da
 1688 0124 24       		.byte	0x24
 1689 0125 08       		.uleb128 0x8
 1690 0126 00000000 		.4byte	.LASF26
 1691 012a 04       		.byte	0x4
 1692 012b 57       		.byte	0x57
 1693 012c 9E000000 		.4byte	0x9e
 1694 0130 30       		.byte	0x30
 1695 0131 08       		.uleb128 0x8
 1696 0132 B4040000 		.4byte	.LASF27
 1697 0136 04       		.byte	0x4
 1698 0137 58       		.byte	0x58
 1699 0138 9E000000 		.4byte	0x9e
 1700 013c 31       		.byte	0x31
 1701 013d 08       		.uleb128 0x8
 1702 013e C8080000 		.4byte	.LASF28
 1703 0142 04       		.byte	0x4
 1704 0143 59       		.byte	0x59
 1705 0144 9E000000 		.4byte	0x9e
 1706 0148 32       		.byte	0x32
 1707 0149 08       		.uleb128 0x8
 1708 014a B4000000 		.4byte	.LASF29
 1709 014e 04       		.byte	0x4
 1710 014f 5A       		.byte	0x5a
 1711 0150 9E000000 		.4byte	0x9e
 1712 0154 33       		.byte	0x33
 1713 0155 08       		.uleb128 0x8
 1714 0156 6A000000 		.4byte	.LASF30
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 42


 1715 015a 04       		.byte	0x4
 1716 015b 5B       		.byte	0x5b
 1717 015c 9E000000 		.4byte	0x9e
 1718 0160 34       		.byte	0x34
 1719 0161 08       		.uleb128 0x8
 1720 0162 46080000 		.4byte	.LASF31
 1721 0166 04       		.byte	0x4
 1722 0167 5C       		.byte	0x5c
 1723 0168 25000000 		.4byte	0x25
 1724 016c 38       		.byte	0x38
 1725 016d 08       		.uleb128 0x8
 1726 016e DB000000 		.4byte	.LASF32
 1727 0172 04       		.byte	0x4
 1728 0173 5D       		.byte	0x5d
 1729 0174 25000000 		.4byte	0x25
 1730 0178 3C       		.byte	0x3c
 1731 0179 08       		.uleb128 0x8
 1732 017a 0E030000 		.4byte	.LASF33
 1733 017e 04       		.byte	0x4
 1734 017f 5F       		.byte	0x5f
 1735 0180 25000000 		.4byte	0x25
 1736 0184 40       		.byte	0x40
 1737 0185 08       		.uleb128 0x8
 1738 0186 04080000 		.4byte	.LASF34
 1739 018a 04       		.byte	0x4
 1740 018b 60       		.byte	0x60
 1741 018c 25000000 		.4byte	0x25
 1742 0190 44       		.byte	0x44
 1743 0191 08       		.uleb128 0x8
 1744 0192 4F000000 		.4byte	.LASF35
 1745 0196 04       		.byte	0x4
 1746 0197 62       		.byte	0x62
 1747 0198 9E000000 		.4byte	0x9e
 1748 019c 48       		.byte	0x48
 1749 019d 08       		.uleb128 0x8
 1750 019e 36080000 		.4byte	.LASF36
 1751 01a2 04       		.byte	0x4
 1752 01a3 64       		.byte	0x64
 1753 01a4 9E000000 		.4byte	0x9e
 1754 01a8 49       		.byte	0x49
 1755 01a9 08       		.uleb128 0x8
 1756 01aa 5A010000 		.4byte	.LASF37
 1757 01ae 04       		.byte	0x4
 1758 01af 65       		.byte	0x65
 1759 01b0 25000000 		.4byte	0x25
 1760 01b4 4C       		.byte	0x4c
 1761 01b5 08       		.uleb128 0x8
 1762 01b6 2D010000 		.4byte	.LASF38
 1763 01ba 04       		.byte	0x4
 1764 01bb 66       		.byte	0x66
 1765 01bc 25000000 		.4byte	0x25
 1766 01c0 50       		.byte	0x50
 1767 01c1 08       		.uleb128 0x8
 1768 01c2 DB070000 		.4byte	.LASF39
 1769 01c6 04       		.byte	0x4
 1770 01c7 67       		.byte	0x67
 1771 01c8 A9000000 		.4byte	0xa9
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 43


 1772 01cc 54       		.byte	0x54
 1773 01cd 08       		.uleb128 0x8
 1774 01ce 27020000 		.4byte	.LASF40
 1775 01d2 04       		.byte	0x4
 1776 01d3 68       		.byte	0x68
 1777 01d4 25000000 		.4byte	0x25
 1778 01d8 58       		.byte	0x58
 1779 01d9 00       		.byte	0
 1780 01da 09       		.uleb128 0x9
 1781 01db 25000000 		.4byte	0x25
 1782 01df EA010000 		.4byte	0x1ea
 1783 01e3 0A       		.uleb128 0xa
 1784 01e4 D8000000 		.4byte	0xd8
 1785 01e8 02       		.byte	0x2
 1786 01e9 00       		.byte	0
 1787 01ea 03       		.uleb128 0x3
 1788 01eb 0C080000 		.4byte	.LASF41
 1789 01ef 04       		.byte	0x4
 1790 01f0 69       		.byte	0x69
 1791 01f1 ED000000 		.4byte	0xed
 1792 01f5 07       		.uleb128 0x7
 1793 01f6 14       		.byte	0x14
 1794 01f7 05       		.byte	0x5
 1795 01f8 80       		.byte	0x80
 1796 01f9 A6020000 		.4byte	0x2a6
 1797 01fd 08       		.uleb128 0x8
 1798 01fe 2B070000 		.4byte	.LASF42
 1799 0202 05       		.byte	0x5
 1800 0203 81       		.byte	0x81
 1801 0204 9E000000 		.4byte	0x9e
 1802 0208 00       		.byte	0
 1803 0209 08       		.uleb128 0x8
 1804 020a 0D020000 		.4byte	.LASF43
 1805 020e 05       		.byte	0x5
 1806 020f 82       		.byte	0x82
 1807 0210 9E000000 		.4byte	0x9e
 1808 0214 01       		.byte	0x1
 1809 0215 08       		.uleb128 0x8
 1810 0216 47020000 		.4byte	.LASF44
 1811 021a 05       		.byte	0x5
 1812 021b 83       		.byte	0x83
 1813 021c 9E000000 		.4byte	0x9e
 1814 0220 02       		.byte	0x2
 1815 0221 08       		.uleb128 0x8
 1816 0222 D9050000 		.4byte	.LASF45
 1817 0226 05       		.byte	0x5
 1818 0227 84       		.byte	0x84
 1819 0228 9E000000 		.4byte	0x9e
 1820 022c 03       		.byte	0x3
 1821 022d 08       		.uleb128 0x8
 1822 022e 1A050000 		.4byte	.LASF46
 1823 0232 05       		.byte	0x5
 1824 0233 85       		.byte	0x85
 1825 0234 9E000000 		.4byte	0x9e
 1826 0238 04       		.byte	0x4
 1827 0239 08       		.uleb128 0x8
 1828 023a 12060000 		.4byte	.LASF47
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 44


 1829 023e 05       		.byte	0x5
 1830 023f 86       		.byte	0x86
 1831 0240 9E000000 		.4byte	0x9e
 1832 0244 05       		.byte	0x5
 1833 0245 08       		.uleb128 0x8
 1834 0246 70080000 		.4byte	.LASF48
 1835 024a 05       		.byte	0x5
 1836 024b 87       		.byte	0x87
 1837 024c 9E000000 		.4byte	0x9e
 1838 0250 06       		.byte	0x6
 1839 0251 08       		.uleb128 0x8
 1840 0252 B4010000 		.4byte	.LASF49
 1841 0256 05       		.byte	0x5
 1842 0257 88       		.byte	0x88
 1843 0258 9E000000 		.4byte	0x9e
 1844 025c 07       		.byte	0x7
 1845 025d 08       		.uleb128 0x8
 1846 025e 8F000000 		.4byte	.LASF50
 1847 0262 05       		.byte	0x5
 1848 0263 89       		.byte	0x89
 1849 0264 9E000000 		.4byte	0x9e
 1850 0268 08       		.byte	0x8
 1851 0269 08       		.uleb128 0x8
 1852 026a 68030000 		.4byte	.LASF51
 1853 026e 05       		.byte	0x5
 1854 026f 8A       		.byte	0x8a
 1855 0270 9E000000 		.4byte	0x9e
 1856 0274 09       		.byte	0x9
 1857 0275 08       		.uleb128 0x8
 1858 0276 FC010000 		.4byte	.LASF52
 1859 027a 05       		.byte	0x5
 1860 027b 8B       		.byte	0x8b
 1861 027c 9E000000 		.4byte	0x9e
 1862 0280 0A       		.byte	0xa
 1863 0281 08       		.uleb128 0x8
 1864 0282 55030000 		.4byte	.LASF53
 1865 0286 05       		.byte	0x5
 1866 0287 8C       		.byte	0x8c
 1867 0288 9E000000 		.4byte	0x9e
 1868 028c 0B       		.byte	0xb
 1869 028d 08       		.uleb128 0x8
 1870 028e AA050000 		.4byte	.LASF54
 1871 0292 05       		.byte	0x5
 1872 0293 8D       		.byte	0x8d
 1873 0294 9E000000 		.4byte	0x9e
 1874 0298 0C       		.byte	0xc
 1875 0299 08       		.uleb128 0x8
 1876 029a 36030000 		.4byte	.LASF55
 1877 029e 05       		.byte	0x5
 1878 029f 8F       		.byte	0x8f
 1879 02a0 25000000 		.4byte	0x25
 1880 02a4 10       		.byte	0x10
 1881 02a5 00       		.byte	0
 1882 02a6 03       		.uleb128 0x3
 1883 02a7 97050000 		.4byte	.LASF56
 1884 02ab 05       		.byte	0x5
 1885 02ac 91       		.byte	0x91
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 45


 1886 02ad F5010000 		.4byte	0x1f5
 1887 02b1 07       		.uleb128 0x7
 1888 02b2 34       		.byte	0x34
 1889 02b3 06       		.byte	0x6
 1890 02b4 39       		.byte	0x39
 1891 02b5 4A030000 		.4byte	0x34a
 1892 02b9 08       		.uleb128 0x8
 1893 02ba 7B010000 		.4byte	.LASF57
 1894 02be 06       		.byte	0x6
 1895 02bf 3C       		.byte	0x3c
 1896 02c0 4A030000 		.4byte	0x34a
 1897 02c4 00       		.byte	0
 1898 02c5 08       		.uleb128 0x8
 1899 02c6 44030000 		.4byte	.LASF58
 1900 02ca 06       		.byte	0x6
 1901 02cb 3D       		.byte	0x3d
 1902 02cc BF000000 		.4byte	0xbf
 1903 02d0 0C       		.byte	0xc
 1904 02d1 08       		.uleb128 0x8
 1905 02d2 11010000 		.4byte	.LASF59
 1906 02d6 06       		.byte	0x6
 1907 02d7 3E       		.byte	0x3e
 1908 02d8 9E000000 		.4byte	0x9e
 1909 02dc 10       		.byte	0x10
 1910 02dd 08       		.uleb128 0x8
 1911 02de 81080000 		.4byte	.LASF60
 1912 02e2 06       		.byte	0x6
 1913 02e3 41       		.byte	0x41
 1914 02e4 9E000000 		.4byte	0x9e
 1915 02e8 11       		.byte	0x11
 1916 02e9 08       		.uleb128 0x8
 1917 02ea 6B010000 		.4byte	.LASF61
 1918 02ee 06       		.byte	0x6
 1919 02ef 48       		.byte	0x48
 1920 02f0 25000000 		.4byte	0x25
 1921 02f4 14       		.byte	0x14
 1922 02f5 08       		.uleb128 0x8
 1923 02f6 13020000 		.4byte	.LASF62
 1924 02fa 06       		.byte	0x6
 1925 02fb 49       		.byte	0x49
 1926 02fc 25000000 		.4byte	0x25
 1927 0300 18       		.byte	0x18
 1928 0301 08       		.uleb128 0x8
 1929 0302 20010000 		.4byte	.LASF24
 1930 0306 06       		.byte	0x6
 1931 0307 4B       		.byte	0x4b
 1932 0308 25000000 		.4byte	0x25
 1933 030c 1C       		.byte	0x1c
 1934 030d 08       		.uleb128 0x8
 1935 030e C3070000 		.4byte	.LASF63
 1936 0312 06       		.byte	0x6
 1937 0313 4C       		.byte	0x4c
 1938 0314 25000000 		.4byte	0x25
 1939 0318 20       		.byte	0x20
 1940 0319 08       		.uleb128 0x8
 1941 031a 38000000 		.4byte	.LASF64
 1942 031e 06       		.byte	0x6
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 46


 1943 031f 50       		.byte	0x50
 1944 0320 25000000 		.4byte	0x25
 1945 0324 24       		.byte	0x24
 1946 0325 08       		.uleb128 0x8
 1947 0326 33050000 		.4byte	.LASF65
 1948 032a 06       		.byte	0x6
 1949 032b 51       		.byte	0x51
 1950 032c 25000000 		.4byte	0x25
 1951 0330 28       		.byte	0x28
 1952 0331 08       		.uleb128 0x8
 1953 0332 CB000000 		.4byte	.LASF66
 1954 0336 06       		.byte	0x6
 1955 0337 52       		.byte	0x52
 1956 0338 25000000 		.4byte	0x25
 1957 033c 2C       		.byte	0x2c
 1958 033d 08       		.uleb128 0x8
 1959 033e 36030000 		.4byte	.LASF55
 1960 0342 06       		.byte	0x6
 1961 0343 56       		.byte	0x56
 1962 0344 25000000 		.4byte	0x25
 1963 0348 30       		.byte	0x30
 1964 0349 00       		.byte	0
 1965 034a 09       		.uleb128 0x9
 1966 034b BF000000 		.4byte	0xbf
 1967 034f 5A030000 		.4byte	0x35a
 1968 0353 0A       		.uleb128 0xa
 1969 0354 D8000000 		.4byte	0xd8
 1970 0358 02       		.byte	0x2
 1971 0359 00       		.byte	0
 1972 035a 03       		.uleb128 0x3
 1973 035b 55000000 		.4byte	.LASF67
 1974 035f 06       		.byte	0x6
 1975 0360 58       		.byte	0x58
 1976 0361 B1020000 		.4byte	0x2b1
 1977 0365 07       		.uleb128 0x7
 1978 0366 0C       		.byte	0xc
 1979 0367 06       		.byte	0x6
 1980 0368 5C       		.byte	0x5c
 1981 0369 92030000 		.4byte	0x392
 1982 036d 08       		.uleb128 0x8
 1983 036e A0050000 		.4byte	.LASF68
 1984 0372 06       		.byte	0x6
 1985 0373 5D       		.byte	0x5d
 1986 0374 25000000 		.4byte	0x25
 1987 0378 00       		.byte	0
 1988 0379 08       		.uleb128 0x8
 1989 037a 36030000 		.4byte	.LASF55
 1990 037e 06       		.byte	0x6
 1991 037f 5E       		.byte	0x5e
 1992 0380 25000000 		.4byte	0x25
 1993 0384 04       		.byte	0x4
 1994 0385 08       		.uleb128 0x8
 1995 0386 81080000 		.4byte	.LASF60
 1996 038a 06       		.byte	0x6
 1997 038b 5F       		.byte	0x5f
 1998 038c 9E000000 		.4byte	0x9e
 1999 0390 08       		.byte	0x8
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 47


 2000 0391 00       		.byte	0
 2001 0392 03       		.uleb128 0x3
 2002 0393 8C010000 		.4byte	.LASF69
 2003 0397 06       		.byte	0x6
 2004 0398 63       		.byte	0x63
 2005 0399 65030000 		.4byte	0x365
 2006 039d 07       		.uleb128 0x7
 2007 039e 1C       		.byte	0x1c
 2008 039f 01       		.byte	0x1
 2009 03a0 22       		.byte	0x22
 2010 03a1 CA030000 		.4byte	0x3ca
 2011 03a5 08       		.uleb128 0x8
 2012 03a6 8B080000 		.4byte	.LASF70
 2013 03aa 01       		.byte	0x1
 2014 03ab 23       		.byte	0x23
 2015 03ac CA030000 		.4byte	0x3ca
 2016 03b0 00       		.byte	0
 2017 03b1 08       		.uleb128 0x8
 2018 03b2 EA010000 		.4byte	.LASF71
 2019 03b6 01       		.byte	0x1
 2020 03b7 26       		.byte	0x26
 2021 03b8 DA010000 		.4byte	0x1da
 2022 03bc 0C       		.byte	0xc
 2023 03bd 08       		.uleb128 0x8
 2024 03be 59080000 		.4byte	.LASF72
 2025 03c2 01       		.byte	0x1
 2026 03c3 27       		.byte	0x27
 2027 03c4 25000000 		.4byte	0x25
 2028 03c8 18       		.byte	0x18
 2029 03c9 00       		.byte	0
 2030 03ca 09       		.uleb128 0x9
 2031 03cb B4000000 		.4byte	0xb4
 2032 03cf DA030000 		.4byte	0x3da
 2033 03d3 0A       		.uleb128 0xa
 2034 03d4 D8000000 		.4byte	0xd8
 2035 03d8 02       		.byte	0x2
 2036 03d9 00       		.byte	0
 2037 03da 03       		.uleb128 0x3
 2038 03db 28040000 		.4byte	.LASF73
 2039 03df 01       		.byte	0x1
 2040 03e0 28       		.byte	0x28
 2041 03e1 9D030000 		.4byte	0x39d
 2042 03e5 0B       		.uleb128 0xb
 2043 03e6 81050000 		.4byte	.LASF128
 2044 03ea 01       		.byte	0x1
 2045 03eb 36       		.byte	0x36
 2046 03ec 9E000000 		.4byte	0x9e
 2047 03f0 00000000 		.4byte	.LFB64
 2048 03f4 0C000000 		.4byte	.LFE64-.LFB64
 2049 03f8 01       		.uleb128 0x1
 2050 03f9 9C       		.byte	0x9c
 2051 03fa 0E040000 		.4byte	0x40e
 2052 03fe 0C       		.uleb128 0xc
 2053 03ff 27050000 		.4byte	.LASF74
 2054 0403 01       		.byte	0x1
 2055 0404 36       		.byte	0x36
 2056 0405 9E000000 		.4byte	0x9e
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 48


 2057 0409 00000000 		.4byte	.LLST0
 2058 040d 00       		.byte	0
 2059 040e 0D       		.uleb128 0xd
 2060 040f BF010000 		.4byte	.LASF129
 2061 0413 01       		.byte	0x1
 2062 0414 1301     		.2byte	0x113
 2063 0416 00000000 		.4byte	.LFB74
 2064 041a 38000000 		.4byte	.LFE74-.LFB74
 2065 041e 01       		.uleb128 0x1
 2066 041f 9C       		.byte	0x9c
 2067 0420 55040000 		.4byte	0x455
 2068 0424 0E       		.uleb128 0xe
 2069 0425 02060000 		.4byte	.LASF75
 2070 0429 01       		.byte	0x1
 2071 042a 1301     		.2byte	0x113
 2072 042c 55040000 		.4byte	0x455
 2073 0430 29000000 		.4byte	.LLST1
 2074 0434 0E       		.uleb128 0xe
 2075 0435 1A040000 		.4byte	.LASF76
 2076 0439 01       		.byte	0x1
 2077 043a 1301     		.2byte	0x113
 2078 043c 25000000 		.4byte	0x25
 2079 0440 47000000 		.4byte	.LLST2
 2080 0444 0E       		.uleb128 0xe
 2081 0445 13000000 		.4byte	.LASF77
 2082 0449 01       		.byte	0x1
 2083 044a 1301     		.2byte	0x113
 2084 044c 25000000 		.4byte	0x25
 2085 0450 80000000 		.4byte	.LLST3
 2086 0454 00       		.byte	0
 2087 0455 0F       		.uleb128 0xf
 2088 0456 04       		.byte	0x4
 2089 0457 5A030000 		.4byte	0x35a
 2090 045b 10       		.uleb128 0x10
 2091 045c 5C040000 		.4byte	.LASF85
 2092 0460 01       		.byte	0x1
 2093 0461 2D       		.byte	0x2d
 2094 0462 9E000000 		.4byte	0x9e
 2095 0466 00000000 		.4byte	.LFB63
 2096 046a 0C000000 		.4byte	.LFE63-.LFB63
 2097 046e 01       		.uleb128 0x1
 2098 046f 9C       		.byte	0x9c
 2099 0470 84040000 		.4byte	0x484
 2100 0474 0C       		.uleb128 0xc
 2101 0475 27050000 		.4byte	.LASF74
 2102 0479 01       		.byte	0x1
 2103 047a 2D       		.byte	0x2d
 2104 047b 9E000000 		.4byte	0x9e
 2105 047f 9E000000 		.4byte	.LLST4
 2106 0483 00       		.byte	0
 2107 0484 11       		.uleb128 0x11
 2108 0485 F5020000 		.4byte	.LASF130
 2109 0489 01       		.byte	0x1
 2110 048a 7F       		.byte	0x7f
 2111 048b 00000000 		.4byte	.LFB65
 2112 048f 84010000 		.4byte	.LFE65-.LFB65
 2113 0493 01       		.uleb128 0x1
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 49


 2114 0494 9C       		.byte	0x9c
 2115 0495 32050000 		.4byte	0x532
 2116 0499 12       		.uleb128 0x12
 2117 049a 27050000 		.4byte	.LASF74
 2118 049e 01       		.byte	0x1
 2119 049f 82       		.byte	0x82
 2120 04a0 9E000000 		.4byte	0x9e
 2121 04a4 CA000000 		.4byte	.LLST5
 2122 04a8 12       		.uleb128 0x12
 2123 04a9 6B010000 		.4byte	.LASF61
 2124 04ad 01       		.byte	0x1
 2125 04ae 8A       		.byte	0x8a
 2126 04af 25000000 		.4byte	0x25
 2127 04b3 14010000 		.4byte	.LLST6
 2128 04b7 12       		.uleb128 0x12
 2129 04b8 8A000000 		.4byte	.LASF78
 2130 04bc 01       		.byte	0x1
 2131 04bd 8B       		.byte	0x8b
 2132 04be 55040000 		.4byte	0x455
 2133 04c2 48010000 		.4byte	.LLST7
 2134 04c6 12       		.uleb128 0x12
 2135 04c7 17080000 		.4byte	.LASF79
 2136 04cb 01       		.byte	0x1
 2137 04cc 8C       		.byte	0x8c
 2138 04cd 55040000 		.4byte	0x455
 2139 04d1 7C010000 		.4byte	.LLST8
 2140 04d5 13       		.uleb128 0x13
 2141 04d6 0C000000 		.4byte	.LVL15
 2142 04da E5030000 		.4byte	0x3e5
 2143 04de 14       		.uleb128 0x14
 2144 04df 52000000 		.4byte	.LVL22
 2145 04e3 E5030000 		.4byte	0x3e5
 2146 04e7 F2040000 		.4byte	0x4f2
 2147 04eb 15       		.uleb128 0x15
 2148 04ec 01       		.uleb128 0x1
 2149 04ed 50       		.byte	0x50
 2150 04ee 02       		.uleb128 0x2
 2151 04ef 75       		.byte	0x75
 2152 04f0 00       		.sleb128 0
 2153 04f1 00       		.byte	0
 2154 04f2 13       		.uleb128 0x13
 2155 04f3 66000000 		.4byte	.LVL24
 2156 04f7 AD0A0000 		.4byte	0xaad
 2157 04fb 14       		.uleb128 0x14
 2158 04fc 7A000000 		.4byte	.LVL27
 2159 0500 E5030000 		.4byte	0x3e5
 2160 0504 0F050000 		.4byte	0x50f
 2161 0508 15       		.uleb128 0x15
 2162 0509 01       		.uleb128 0x1
 2163 050a 50       		.byte	0x50
 2164 050b 02       		.uleb128 0x2
 2165 050c 76       		.byte	0x76
 2166 050d 00       		.sleb128 0
 2167 050e 00       		.byte	0
 2168 050f 13       		.uleb128 0x13
 2169 0510 88000000 		.4byte	.LVL29
 2170 0514 AD0A0000 		.4byte	0xaad
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 50


 2171 0518 13       		.uleb128 0x13
 2172 0519 00010000 		.4byte	.LVL42
 2173 051d 5B040000 		.4byte	0x45b
 2174 0521 16       		.uleb128 0x16
 2175 0522 70010000 		.4byte	.LVL55
 2176 0526 5B040000 		.4byte	0x45b
 2177 052a 15       		.uleb128 0x15
 2178 052b 01       		.uleb128 0x1
 2179 052c 50       		.byte	0x50
 2180 052d 02       		.uleb128 0x2
 2181 052e 74       		.byte	0x74
 2182 052f 00       		.sleb128 0
 2183 0530 00       		.byte	0
 2184 0531 00       		.byte	0
 2185 0532 17       		.uleb128 0x17
 2186 0533 26000000 		.4byte	.LASF131
 2187 0537 01       		.byte	0x1
 2188 0538 CF       		.byte	0xcf
 2189 0539 00000000 		.4byte	.LFB67
 2190 053d 18000000 		.4byte	.LFE67-.LFB67
 2191 0541 01       		.uleb128 0x1
 2192 0542 9C       		.byte	0x9c
 2193 0543 18       		.uleb128 0x18
 2194 0544 F7050000 		.4byte	.LASF80
 2195 0548 01       		.byte	0x1
 2196 0549 C8       		.byte	0xc8
 2197 054a 00000000 		.4byte	.LFB66
 2198 054e 2C000000 		.4byte	.LFE66-.LFB66
 2199 0552 01       		.uleb128 0x1
 2200 0553 9C       		.byte	0x9c
 2201 0554 62050000 		.4byte	0x562
 2202 0558 13       		.uleb128 0x13
 2203 0559 26000000 		.4byte	.LVL59
 2204 055d 32050000 		.4byte	0x532
 2205 0561 00       		.byte	0
 2206 0562 18       		.uleb128 0x18
 2207 0563 D1040000 		.4byte	.LASF81
 2208 0567 01       		.byte	0x1
 2209 0568 D8       		.byte	0xd8
 2210 0569 00000000 		.4byte	.LFB68
 2211 056d 2C000000 		.4byte	.LFE68-.LFB68
 2212 0571 01       		.uleb128 0x1
 2213 0572 9C       		.byte	0x9c
 2214 0573 A1050000 		.4byte	0x5a1
 2215 0577 19       		.uleb128 0x19
 2216 0578 0E000000 		.4byte	.LBB2
 2217 057c 1E000000 		.4byte	.LBE2-.LBB2
 2218 0580 12       		.uleb128 0x12
 2219 0581 27050000 		.4byte	.LASF74
 2220 0585 01       		.byte	0x1
 2221 0586 DB       		.byte	0xdb
 2222 0587 9E000000 		.4byte	0x9e
 2223 058b B0010000 		.4byte	.LLST9
 2224 058f 16       		.uleb128 0x16
 2225 0590 14000000 		.4byte	.LVL60
 2226 0594 5B040000 		.4byte	0x45b
 2227 0598 15       		.uleb128 0x15
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 51


 2228 0599 01       		.uleb128 0x1
 2229 059a 50       		.byte	0x50
 2230 059b 02       		.uleb128 0x2
 2231 059c 74       		.byte	0x74
 2232 059d 00       		.sleb128 0
 2233 059e 00       		.byte	0
 2234 059f 00       		.byte	0
 2235 05a0 00       		.byte	0
 2236 05a1 1A       		.uleb128 0x1a
 2237 05a2 94080000 		.4byte	.LASF82
 2238 05a6 01       		.byte	0x1
 2239 05a7 E4       		.byte	0xe4
 2240 05a8 55040000 		.4byte	0x455
 2241 05ac 00000000 		.4byte	.LFB69
 2242 05b0 14000000 		.4byte	.LFE69-.LFB69
 2243 05b4 01       		.uleb128 0x1
 2244 05b5 9C       		.byte	0x9c
 2245 05b6 1A       		.uleb128 0x1a
 2246 05b7 6D060000 		.4byte	.LASF83
 2247 05bb 01       		.byte	0x1
 2248 05bc EB       		.byte	0xeb
 2249 05bd 55040000 		.4byte	0x455
 2250 05c1 00000000 		.4byte	.LFB70
 2251 05c5 24000000 		.4byte	.LFE70-.LFB70
 2252 05c9 01       		.uleb128 0x1
 2253 05ca 9C       		.byte	0x9c
 2254 05cb 1B       		.uleb128 0x1b
 2255 05cc 48050000 		.4byte	.LASF132
 2256 05d0 01       		.byte	0x1
 2257 05d1 F2       		.byte	0xf2
 2258 05d2 25000000 		.4byte	0x25
 2259 05d6 00000000 		.4byte	.LFB71
 2260 05da 24000000 		.4byte	.LFE71-.LFB71
 2261 05de 01       		.uleb128 0x1
 2262 05df 9C       		.byte	0x9c
 2263 05e0 FD050000 		.4byte	0x5fd
 2264 05e4 12       		.uleb128 0x12
 2265 05e5 27050000 		.4byte	.LASF74
 2266 05e9 01       		.byte	0x1
 2267 05ea F4       		.byte	0xf4
 2268 05eb 9E000000 		.4byte	0x9e
 2269 05ef C3010000 		.4byte	.LLST10
 2270 05f3 13       		.uleb128 0x13
 2271 05f4 0C000000 		.4byte	.LVL62
 2272 05f8 5B040000 		.4byte	0x45b
 2273 05fc 00       		.byte	0
 2274 05fd 1A       		.uleb128 0x1a
 2275 05fe FA000000 		.4byte	.LASF84
 2276 0602 01       		.byte	0x1
 2277 0603 FB       		.byte	0xfb
 2278 0604 9E000000 		.4byte	0x9e
 2279 0608 00000000 		.4byte	.LFB72
 2280 060c 1C000000 		.4byte	.LFE72-.LFB72
 2281 0610 01       		.uleb128 0x1
 2282 0611 9C       		.byte	0x9c
 2283 0612 1C       		.uleb128 0x1c
 2284 0613 A3030000 		.4byte	.LASF86
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 52


 2285 0617 01       		.byte	0x1
 2286 0618 0401     		.2byte	0x104
 2287 061a 25000000 		.4byte	0x25
 2288 061e 00000000 		.4byte	.LFB73
 2289 0622 9C000000 		.4byte	.LFE73-.LFB73
 2290 0626 01       		.uleb128 0x1
 2291 0627 9C       		.byte	0x9c
 2292 0628 4D060000 		.4byte	0x64d
 2293 062c 0E       		.uleb128 0xe
 2294 062d 02060000 		.4byte	.LASF75
 2295 0631 01       		.byte	0x1
 2296 0632 0401     		.2byte	0x104
 2297 0634 55040000 		.4byte	0x455
 2298 0638 E1010000 		.4byte	.LLST11
 2299 063c 1D       		.uleb128 0x1d
 2300 063d 1A040000 		.4byte	.LASF76
 2301 0641 01       		.byte	0x1
 2302 0642 0601     		.2byte	0x106
 2303 0644 25000000 		.4byte	0x25
 2304 0648 31020000 		.4byte	.LLST12
 2305 064c 00       		.byte	0
 2306 064d 1E       		.uleb128 0x1e
 2307 064e 8C040000 		.4byte	.LASF87
 2308 0652 01       		.byte	0x1
 2309 0653 1D01     		.2byte	0x11d
 2310 0655 00000000 		.4byte	.LFB75
 2311 0659 4C000000 		.4byte	.LFE75-.LFB75
 2312 065d 01       		.uleb128 0x1
 2313 065e 9C       		.byte	0x9c
 2314 065f EA060000 		.4byte	0x6ea
 2315 0663 1D       		.uleb128 0x1d
 2316 0664 27050000 		.4byte	.LASF74
 2317 0668 01       		.byte	0x1
 2318 0669 1F01     		.2byte	0x11f
 2319 066b 9E000000 		.4byte	0x9e
 2320 066f 70020000 		.4byte	.LLST13
 2321 0673 1D       		.uleb128 0x1d
 2322 0674 02060000 		.4byte	.LASF75
 2323 0678 01       		.byte	0x1
 2324 0679 2001     		.2byte	0x120
 2325 067b 55040000 		.4byte	0x455
 2326 067f 83020000 		.4byte	.LLST14
 2327 0683 1D       		.uleb128 0x1d
 2328 0684 1A040000 		.4byte	.LASF76
 2329 0688 01       		.byte	0x1
 2330 0689 2101     		.2byte	0x121
 2331 068b 25000000 		.4byte	0x25
 2332 068f 96020000 		.4byte	.LLST15
 2333 0693 1D       		.uleb128 0x1d
 2334 0694 13000000 		.4byte	.LASF77
 2335 0698 01       		.byte	0x1
 2336 0699 2201     		.2byte	0x122
 2337 069b 25000000 		.4byte	0x25
 2338 069f B4020000 		.4byte	.LLST16
 2339 06a3 14       		.uleb128 0x14
 2340 06a4 1A000000 		.4byte	.LVL92
 2341 06a8 12060000 		.4byte	0x612
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 53


 2342 06ac B7060000 		.4byte	0x6b7
 2343 06b0 15       		.uleb128 0x15
 2344 06b1 01       		.uleb128 0x1
 2345 06b2 50       		.byte	0x50
 2346 06b3 02       		.uleb128 0x2
 2347 06b4 74       		.byte	0x74
 2348 06b5 00       		.sleb128 0
 2349 06b6 00       		.byte	0
 2350 06b7 14       		.uleb128 0x14
 2351 06b8 26000000 		.4byte	.LVL95
 2352 06bc 0E040000 		.4byte	0x40e
 2353 06c0 D9060000 		.4byte	0x6d9
 2354 06c4 15       		.uleb128 0x15
 2355 06c5 01       		.uleb128 0x1
 2356 06c6 52       		.byte	0x52
 2357 06c7 03       		.uleb128 0x3
 2358 06c8 F5       		.byte	0xf5
 2359 06c9 07       		.uleb128 0x7
 2360 06ca 25       		.uleb128 0x25
 2361 06cb 15       		.uleb128 0x15
 2362 06cc 01       		.uleb128 0x1
 2363 06cd 51       		.byte	0x51
 2364 06ce 03       		.uleb128 0x3
 2365 06cf F5       		.byte	0xf5
 2366 06d0 06       		.uleb128 0x6
 2367 06d1 25       		.uleb128 0x25
 2368 06d2 15       		.uleb128 0x15
 2369 06d3 01       		.uleb128 0x1
 2370 06d4 50       		.byte	0x50
 2371 06d5 02       		.uleb128 0x2
 2372 06d6 74       		.byte	0x74
 2373 06d7 00       		.sleb128 0
 2374 06d8 00       		.byte	0
 2375 06d9 16       		.uleb128 0x16
 2376 06da 2C000000 		.4byte	.LVL96
 2377 06de 5B040000 		.4byte	0x45b
 2378 06e2 15       		.uleb128 0x15
 2379 06e3 01       		.uleb128 0x1
 2380 06e4 50       		.byte	0x50
 2381 06e5 02       		.uleb128 0x2
 2382 06e6 75       		.byte	0x75
 2383 06e7 00       		.sleb128 0
 2384 06e8 00       		.byte	0
 2385 06e9 00       		.byte	0
 2386 06ea 1C       		.uleb128 0x1c
 2387 06eb 89070000 		.4byte	.LASF88
 2388 06ef 01       		.byte	0x1
 2389 06f0 3C01     		.2byte	0x13c
 2390 06f2 9E000000 		.4byte	0x9e
 2391 06f6 00000000 		.4byte	.LFB76
 2392 06fa 18030000 		.4byte	.LFE76-.LFB76
 2393 06fe 01       		.uleb128 0x1
 2394 06ff 9C       		.byte	0x9c
 2395 0700 F0080000 		.4byte	0x8f0
 2396 0704 0E       		.uleb128 0xe
 2397 0705 36020000 		.4byte	.LASF89
 2398 0709 01       		.byte	0x1
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 54


 2399 070a 3C01     		.2byte	0x13c
 2400 070c F0080000 		.4byte	0x8f0
 2401 0710 FC020000 		.4byte	.LLST17
 2402 0714 0E       		.uleb128 0xe
 2403 0715 62000000 		.4byte	.LASF90
 2404 0719 01       		.byte	0x1
 2405 071a 3C01     		.2byte	0x13c
 2406 071c F6080000 		.4byte	0x8f6
 2407 0720 5A030000 		.4byte	.LLST18
 2408 0724 1D       		.uleb128 0x1d
 2409 0725 02060000 		.4byte	.LASF75
 2410 0729 01       		.byte	0x1
 2411 072a 3F01     		.2byte	0x13f
 2412 072c 55040000 		.4byte	0x455
 2413 0730 B8030000 		.4byte	.LLST19
 2414 0734 1F       		.uleb128 0x1f
 2415 0735 59070000 		.4byte	.LASF91
 2416 0739 01       		.byte	0x1
 2417 073a 4A01     		.2byte	0x14a
 2418 073c CA030000 		.4byte	0x3ca
 2419 0740 02       		.uleb128 0x2
 2420 0741 91       		.byte	0x91
 2421 0742 54       		.sleb128 -44
 2422 0743 1F       		.uleb128 0x1f
 2423 0744 94030000 		.4byte	.LASF92
 2424 0748 01       		.byte	0x1
 2425 0749 4A01     		.2byte	0x14a
 2426 074b CA030000 		.4byte	0x3ca
 2427 074f 02       		.uleb128 0x2
 2428 0750 91       		.byte	0x91
 2429 0751 48       		.sleb128 -56
 2430 0752 1F       		.uleb128 0x1f
 2431 0753 41060000 		.4byte	.LASF93
 2432 0757 01       		.byte	0x1
 2433 0758 4B01     		.2byte	0x14b
 2434 075a DA010000 		.4byte	0x1da
 2435 075e 03       		.uleb128 0x3
 2436 075f 91       		.byte	0x91
 2437 0760 BC7F     		.sleb128 -68
 2438 0762 1D       		.uleb128 0x1d
 2439 0763 9A070000 		.4byte	.LASF94
 2440 0767 01       		.byte	0x1
 2441 0768 4B01     		.2byte	0x14b
 2442 076a 25000000 		.4byte	0x25
 2443 076e E1030000 		.4byte	.LLST20
 2444 0772 20       		.uleb128 0x20
 2445 0773 69647800 		.ascii	"idx\000"
 2446 0777 01       		.byte	0x1
 2447 0778 4C01     		.2byte	0x14c
 2448 077a 9E000000 		.4byte	0x9e
 2449 077e F4030000 		.4byte	.LLST21
 2450 0782 21       		.uleb128 0x21
 2451 0783 00000000 		.4byte	.Ldebug_ranges0+0
 2452 0787 0D080000 		.4byte	0x80d
 2453 078b 1F       		.uleb128 0x1f
 2454 078c 82030000 		.4byte	.LASF95
 2455 0790 01       		.byte	0x1
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 55


 2456 0791 AE01     		.2byte	0x1ae
 2457 0793 DA010000 		.4byte	0x1da
 2458 0797 03       		.uleb128 0x3
 2459 0798 91       		.byte	0x91
 2460 0799 B07F     		.sleb128 -80
 2461 079b 1D       		.uleb128 0x1d
 2462 079c E4050000 		.4byte	.LASF96
 2463 07a0 01       		.byte	0x1
 2464 07a1 AF01     		.2byte	0x1af
 2465 07a3 25000000 		.4byte	0x25
 2466 07a7 3E040000 		.4byte	.LLST22
 2467 07ab 19       		.uleb128 0x19
 2468 07ac EC010000 		.4byte	.LBB4
 2469 07b0 90000000 		.4byte	.LBE4-.LBB4
 2470 07b4 1D       		.uleb128 0x1d
 2471 07b5 31070000 		.4byte	.LASF97
 2472 07b9 01       		.byte	0x1
 2473 07ba BF01     		.2byte	0x1bf
 2474 07bc 25000000 		.4byte	0x25
 2475 07c0 72040000 		.4byte	.LLST23
 2476 07c4 1D       		.uleb128 0x1d
 2477 07c5 7F040000 		.4byte	.LASF98
 2478 07c9 01       		.byte	0x1
 2479 07ca C001     		.2byte	0x1c0
 2480 07cc 25000000 		.4byte	0x25
 2481 07d0 90040000 		.4byte	.LLST24
 2482 07d4 14       		.uleb128 0x14
 2483 07d5 F2010000 		.4byte	.LVL135
 2484 07d9 BA0A0000 		.4byte	0xaba
 2485 07dd E8070000 		.4byte	0x7e8
 2486 07e1 15       		.uleb128 0x15
 2487 07e2 01       		.uleb128 0x1
 2488 07e3 50       		.byte	0x50
 2489 07e4 02       		.uleb128 0x2
 2490 07e5 7D       		.byte	0x7d
 2491 07e6 00       		.sleb128 0
 2492 07e7 00       		.byte	0
 2493 07e8 14       		.uleb128 0x14
 2494 07e9 FC010000 		.4byte	.LVL137
 2495 07ed CF0A0000 		.4byte	0xacf
 2496 07f1 02080000 		.4byte	0x802
 2497 07f5 15       		.uleb128 0x15
 2498 07f6 01       		.uleb128 0x1
 2499 07f7 51       		.byte	0x51
 2500 07f8 02       		.uleb128 0x2
 2501 07f9 7D       		.byte	0x7d
 2502 07fa 00       		.sleb128 0
 2503 07fb 15       		.uleb128 0x15
 2504 07fc 01       		.uleb128 0x1
 2505 07fd 50       		.byte	0x50
 2506 07fe 02       		.uleb128 0x2
 2507 07ff 74       		.byte	0x74
 2508 0800 00       		.sleb128 0
 2509 0801 00       		.byte	0
 2510 0802 13       		.uleb128 0x13
 2511 0803 1E020000 		.4byte	.LVL142
 2512 0807 E90A0000 		.4byte	0xae9
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 56


 2513 080b 00       		.byte	0
 2514 080c 00       		.byte	0
 2515 080d 22       		.uleb128 0x22
 2516 080e 8C020000 		.4byte	.LBB6
 2517 0812 46000000 		.4byte	.LBE6-.LBB6
 2518 0816 6C080000 		.4byte	0x86c
 2519 081a 1D       		.uleb128 0x1d
 2520 081b 1A040000 		.4byte	.LASF76
 2521 081f 01       		.byte	0x1
 2522 0820 C901     		.2byte	0x1c9
 2523 0822 25000000 		.4byte	0x25
 2524 0826 AE040000 		.4byte	.LLST25
 2525 082a 14       		.uleb128 0x14
 2526 082b 92020000 		.4byte	.LVL156
 2527 082f 12060000 		.4byte	0x612
 2528 0833 3E080000 		.4byte	0x83e
 2529 0837 15       		.uleb128 0x15
 2530 0838 01       		.uleb128 0x1
 2531 0839 50       		.byte	0x50
 2532 083a 02       		.uleb128 0x2
 2533 083b 78       		.byte	0x78
 2534 083c 00       		.sleb128 0
 2535 083d 00       		.byte	0
 2536 083e 14       		.uleb128 0x14
 2537 083f A2020000 		.4byte	.LVL159
 2538 0843 0E040000 		.4byte	0x40e
 2539 0847 59080000 		.4byte	0x859
 2540 084b 15       		.uleb128 0x15
 2541 084c 01       		.uleb128 0x1
 2542 084d 51       		.byte	0x51
 2543 084e 03       		.uleb128 0x3
 2544 084f F5       		.byte	0xf5
 2545 0850 05       		.uleb128 0x5
 2546 0851 25       		.uleb128 0x25
 2547 0852 15       		.uleb128 0x15
 2548 0853 01       		.uleb128 0x1
 2549 0854 50       		.byte	0x50
 2550 0855 02       		.uleb128 0x2
 2551 0856 78       		.byte	0x78
 2552 0857 00       		.sleb128 0
 2553 0858 00       		.byte	0
 2554 0859 13       		.uleb128 0x13
 2555 085a CA020000 		.4byte	.LVL160
 2556 085e 5B040000 		.4byte	0x45b
 2557 0862 13       		.uleb128 0x13
 2558 0863 D2020000 		.4byte	.LVL161
 2559 0867 84040000 		.4byte	0x484
 2560 086b 00       		.byte	0
 2561 086c 14       		.uleb128 0x14
 2562 086d 22000000 		.4byte	.LVL104
 2563 0871 FE0A0000 		.4byte	0xafe
 2564 0875 8B080000 		.4byte	0x88b
 2565 0879 15       		.uleb128 0x15
 2566 087a 01       		.uleb128 0x1
 2567 087b 52       		.byte	0x52
 2568 087c 02       		.uleb128 0x2
 2569 087d 08       		.byte	0x8
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 57


 2570 087e 34       		.byte	0x34
 2571 087f 15       		.uleb128 0x15
 2572 0880 01       		.uleb128 0x1
 2573 0881 51       		.byte	0x51
 2574 0882 01       		.uleb128 0x1
 2575 0883 30       		.byte	0x30
 2576 0884 15       		.uleb128 0x15
 2577 0885 01       		.uleb128 0x1
 2578 0886 50       		.byte	0x50
 2579 0887 02       		.uleb128 0x2
 2580 0888 78       		.byte	0x78
 2581 0889 00       		.sleb128 0
 2582 088a 00       		.byte	0
 2583 088b 13       		.uleb128 0x13
 2584 088c 66000000 		.4byte	.LVL109
 2585 0890 1B0B0000 		.4byte	0xb1b
 2586 0894 14       		.uleb128 0x14
 2587 0895 BE000000 		.4byte	.LVL113
 2588 0899 310B0000 		.4byte	0xb31
 2589 089d A8080000 		.4byte	0x8a8
 2590 08a1 15       		.uleb128 0x15
 2591 08a2 01       		.uleb128 0x1
 2592 08a3 50       		.byte	0x50
 2593 08a4 02       		.uleb128 0x2
 2594 08a5 74       		.byte	0x74
 2595 08a6 00       		.sleb128 0
 2596 08a7 00       		.byte	0
 2597 08a8 14       		.uleb128 0x14
 2598 08a9 EA000000 		.4byte	.LVL116
 2599 08ad BA0A0000 		.4byte	0xaba
 2600 08b1 BD080000 		.4byte	0x8bd
 2601 08b5 15       		.uleb128 0x15
 2602 08b6 01       		.uleb128 0x1
 2603 08b7 50       		.byte	0x50
 2604 08b8 03       		.uleb128 0x3
 2605 08b9 91       		.byte	0x91
 2606 08ba BC7F     		.sleb128 -68
 2607 08bc 00       		.byte	0
 2608 08bd 14       		.uleb128 0x14
 2609 08be FE000000 		.4byte	.LVL118
 2610 08c2 CF0A0000 		.4byte	0xacf
 2611 08c6 D8080000 		.4byte	0x8d8
 2612 08ca 15       		.uleb128 0x15
 2613 08cb 01       		.uleb128 0x1
 2614 08cc 51       		.byte	0x51
 2615 08cd 03       		.uleb128 0x3
 2616 08ce 91       		.byte	0x91
 2617 08cf BC7F     		.sleb128 -68
 2618 08d1 15       		.uleb128 0x15
 2619 08d2 01       		.uleb128 0x1
 2620 08d3 50       		.byte	0x50
 2621 08d4 02       		.uleb128 0x2
 2622 08d5 76       		.byte	0x76
 2623 08d6 00       		.sleb128 0
 2624 08d7 00       		.byte	0
 2625 08d8 16       		.uleb128 0x16
 2626 08d9 0A010000 		.4byte	.LVL119
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 58


 2627 08dd CF0A0000 		.4byte	0xacf
 2628 08e1 15       		.uleb128 0x15
 2629 08e2 01       		.uleb128 0x1
 2630 08e3 51       		.byte	0x51
 2631 08e4 03       		.uleb128 0x3
 2632 08e5 91       		.byte	0x91
 2633 08e6 BC7F     		.sleb128 -68
 2634 08e8 15       		.uleb128 0x15
 2635 08e9 01       		.uleb128 0x1
 2636 08ea 50       		.byte	0x50
 2637 08eb 02       		.uleb128 0x2
 2638 08ec 76       		.byte	0x76
 2639 08ed 74       		.sleb128 -12
 2640 08ee 00       		.byte	0
 2641 08ef 00       		.byte	0
 2642 08f0 0F       		.uleb128 0xf
 2643 08f1 04       		.byte	0x4
 2644 08f2 25000000 		.4byte	0x25
 2645 08f6 0F       		.uleb128 0xf
 2646 08f7 04       		.byte	0x4
 2647 08f8 92030000 		.4byte	0x392
 2648 08fc 1E       		.uleb128 0x1e
 2649 08fd 3E010000 		.4byte	.LASF99
 2650 0901 01       		.byte	0x1
 2651 0902 DD01     		.2byte	0x1dd
 2652 0904 00000000 		.4byte	.LFB77
 2653 0908 28000000 		.4byte	.LFE77-.LFB77
 2654 090c 01       		.uleb128 0x1
 2655 090d 9C       		.byte	0x9c
 2656 090e 23090000 		.4byte	0x923
 2657 0912 20       		.uleb128 0x20
 2658 0913 69647800 		.ascii	"idx\000"
 2659 0917 01       		.byte	0x1
 2660 0918 E101     		.2byte	0x1e1
 2661 091a 9E000000 		.4byte	0x9e
 2662 091e CC040000 		.4byte	.LLST26
 2663 0922 00       		.byte	0
 2664 0923 23       		.uleb128 0x23
 2665 0924 A3070000 		.4byte	.LASF100
 2666 0928 01       		.byte	0x1
 2667 0929 F301     		.2byte	0x1f3
 2668 092b 9E000000 		.4byte	0x9e
 2669 092f 00000000 		.4byte	.LFB78
 2670 0933 20000000 		.4byte	.LFE78-.LFB78
 2671 0937 01       		.uleb128 0x1
 2672 0938 9C       		.byte	0x9c
 2673 0939 23       		.uleb128 0x23
 2674 093a 66070000 		.4byte	.LASF101
 2675 093e 01       		.byte	0x1
 2676 093f FC01     		.2byte	0x1fc
 2677 0941 9E000000 		.4byte	0x9e
 2678 0945 00000000 		.4byte	.LFB79
 2679 0949 20000000 		.4byte	.LFE79-.LFB79
 2680 094d 01       		.uleb128 0x1
 2681 094e 9C       		.byte	0x9c
 2682 094f 1E       		.uleb128 0x1e
 2683 0950 44040000 		.4byte	.LASF102
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 59


 2684 0954 01       		.byte	0x1
 2685 0955 0502     		.2byte	0x205
 2686 0957 00000000 		.4byte	.LFB80
 2687 095b 18000000 		.4byte	.LFE80-.LFB80
 2688 095f 01       		.uleb128 0x1
 2689 0960 9C       		.byte	0x9c
 2690 0961 78090000 		.4byte	0x978
 2691 0965 13       		.uleb128 0x13
 2692 0966 06000000 		.4byte	.LVL169
 2693 096a AD0A0000 		.4byte	0xaad
 2694 096e 13       		.uleb128 0x13
 2695 096f 12000000 		.4byte	.LVL170
 2696 0973 84040000 		.4byte	0x484
 2697 0977 00       		.byte	0
 2698 0978 09       		.uleb128 0x9
 2699 0979 5A030000 		.4byte	0x35a
 2700 097d 88090000 		.4byte	0x988
 2701 0981 0A       		.uleb128 0xa
 2702 0982 D8000000 		.4byte	0xd8
 2703 0986 0F       		.byte	0xf
 2704 0987 00       		.byte	0
 2705 0988 24       		.uleb128 0x24
 2706 0989 F9030000 		.4byte	.LASF103
 2707 098d 01       		.byte	0x1
 2708 098e 1B       		.byte	0x1b
 2709 098f 78090000 		.4byte	0x978
 2710 0993 05       		.uleb128 0x5
 2711 0994 03       		.byte	0x3
 2712 0995 04000000 		.4byte	block_buffer
 2713 0999 24       		.uleb128 0x24
 2714 099a 32040000 		.4byte	.LASF104
 2715 099e 01       		.byte	0x1
 2716 099f 1C       		.byte	0x1c
 2717 09a0 9E000000 		.4byte	0x9e
 2718 09a4 05       		.uleb128 0x5
 2719 09a5 03       		.byte	0x3
 2720 09a6 44030000 		.4byte	block_buffer_tail
 2721 09aa 24       		.uleb128 0x24
 2722 09ab C6030000 		.4byte	.LASF105
 2723 09af 01       		.byte	0x1
 2724 09b0 1D       		.byte	0x1d
 2725 09b1 9E000000 		.4byte	0x9e
 2726 09b5 05       		.uleb128 0x5
 2727 09b6 03       		.byte	0x3
 2728 09b7 00000000 		.4byte	block_buffer_head
 2729 09bb 24       		.uleb128 0x24
 2730 09bc E9000000 		.4byte	.LASF106
 2731 09c0 01       		.byte	0x1
 2732 09c1 1E       		.byte	0x1e
 2733 09c2 9E000000 		.4byte	0x9e
 2734 09c6 05       		.uleb128 0x5
 2735 09c7 03       		.byte	0x3
 2736 09c8 45030000 		.4byte	next_buffer_head
 2737 09cc 24       		.uleb128 0x24
 2738 09cd 85020000 		.4byte	.LASF107
 2739 09d1 01       		.byte	0x1
 2740 09d2 1F       		.byte	0x1f
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 60


 2741 09d3 9E000000 		.4byte	0x9e
 2742 09d7 05       		.uleb128 0x5
 2743 09d8 03       		.byte	0x3
 2744 09d9 01000000 		.4byte	block_buffer_planned
 2745 09dd 25       		.uleb128 0x25
 2746 09de 706C00   		.ascii	"pl\000"
 2747 09e1 01       		.byte	0x1
 2748 09e2 29       		.byte	0x29
 2749 09e3 DA030000 		.4byte	0x3da
 2750 09e7 05       		.uleb128 0x5
 2751 09e8 03       		.byte	0x3
 2752 09e9 48030000 		.4byte	pl
 2753 09ed 26       		.uleb128 0x26
 2754 09ee 74050000 		.4byte	.LASF108
 2755 09f2 07       		.byte	0x7
 2756 09f3 9606     		.2byte	0x696
 2757 09f5 F9090000 		.4byte	0x9f9
 2758 09f9 06       		.uleb128 0x6
 2759 09fa B4000000 		.4byte	0xb4
 2760 09fe 27       		.uleb128 0x27
 2761 09ff E1020000 		.4byte	.LASF109
 2762 0a03 04       		.byte	0x4
 2763 0a04 6A       		.byte	0x6a
 2764 0a05 EA010000 		.4byte	0x1ea
 2765 0a09 28       		.uleb128 0x28
 2766 0a0a 73797300 		.ascii	"sys\000"
 2767 0a0e 05       		.byte	0x5
 2768 0a0f 92       		.byte	0x92
 2769 0a10 A6020000 		.4byte	0x2a6
 2770 0a14 29       		.uleb128 0x29
 2771 0a15 72040000 		.4byte	.LASF110
 2772 0a19 05       		.byte	0x5
 2773 0a1a 95       		.byte	0x95
 2774 0a1b CA030000 		.4byte	0x3ca
 2775 0a1f 05       		.uleb128 0x5
 2776 0a20 03       		.byte	0x3
 2777 0a21 00000000 		.4byte	sys_position
 2778 0a25 29       		.uleb128 0x29
 2779 0a26 E6030000 		.4byte	.LASF111
 2780 0a2a 05       		.byte	0x5
 2781 0a2b 96       		.byte	0x96
 2782 0a2c CA030000 		.4byte	0x3ca
 2783 0a30 05       		.uleb128 0x5
 2784 0a31 03       		.byte	0x3
 2785 0a32 00000000 		.4byte	sys_probe_position
 2786 0a36 29       		.uleb128 0x29
 2787 0a37 A4000000 		.4byte	.LASF112
 2788 0a3b 05       		.byte	0x5
 2789 0a3c 98       		.byte	0x98
 2790 0a3d E1000000 		.4byte	0xe1
 2791 0a41 05       		.uleb128 0x5
 2792 0a42 03       		.byte	0x3
 2793 0a43 00000000 		.4byte	sys_probe_state
 2794 0a47 29       		.uleb128 0x29
 2795 0a48 73020000 		.4byte	.LASF113
 2796 0a4c 05       		.byte	0x5
 2797 0a4d 99       		.byte	0x99
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 61


 2798 0a4e E1000000 		.4byte	0xe1
 2799 0a52 05       		.uleb128 0x5
 2800 0a53 03       		.byte	0x3
 2801 0a54 00000000 		.4byte	sys_rt_exec_state
 2802 0a58 29       		.uleb128 0x29
 2803 0a59 47070000 		.4byte	.LASF114
 2804 0a5d 05       		.byte	0x5
 2805 0a5e 9A       		.byte	0x9a
 2806 0a5f E1000000 		.4byte	0xe1
 2807 0a63 05       		.uleb128 0x5
 2808 0a64 03       		.byte	0x3
 2809 0a65 00000000 		.4byte	sys_rt_exec_alarm
 2810 0a69 29       		.uleb128 0x29
 2811 0a6a FE040000 		.4byte	.LASF115
 2812 0a6e 05       		.byte	0x5
 2813 0a6f 9B       		.byte	0x9b
 2814 0a70 E1000000 		.4byte	0xe1
 2815 0a74 05       		.uleb128 0x5
 2816 0a75 03       		.byte	0x3
 2817 0a76 00000000 		.4byte	sys_rt_exec_motion_override
 2818 0a7a 29       		.uleb128 0x29
 2819 0a7b 22060000 		.4byte	.LASF116
 2820 0a7f 05       		.byte	0x5
 2821 0a80 9C       		.byte	0x9c
 2822 0a81 E1000000 		.4byte	0xe1
 2823 0a85 05       		.uleb128 0x5
 2824 0a86 03       		.byte	0x3
 2825 0a87 00000000 		.4byte	sys_rt_exec_accessory_override
 2826 0a8b 29       		.uleb128 0x29
 2827 0a8c 9A020000 		.4byte	.LASF117
 2828 0a90 05       		.byte	0x5
 2829 0a91 A0       		.byte	0xa0
 2830 0a92 E1000000 		.4byte	0xe1
 2831 0a96 05       		.uleb128 0x5
 2832 0a97 03       		.byte	0x3
 2833 0a98 00000000 		.4byte	sys_rt_exec_debug
 2834 0a9c 29       		.uleb128 0x29
 2835 0a9d 1F080000 		.4byte	.LASF118
 2836 0aa1 08       		.byte	0x8
 2837 0aa2 11       		.byte	0x11
 2838 0aa3 9E000000 		.4byte	0x9e
 2839 0aa7 05       		.uleb128 0x5
 2840 0aa8 03       		.byte	0x3
 2841 0aa9 00000000 		.4byte	exec_lcd_status
 2842 0aad 2A       		.uleb128 0x2a
 2843 0aae 16030000 		.4byte	.LASF133
 2844 0ab2 0B       		.byte	0xb
 2845 0ab3 38       		.byte	0x38
 2846 0ab4 BA0A0000 		.4byte	0xaba
 2847 0ab8 2B       		.uleb128 0x2b
 2848 0ab9 00       		.byte	0
 2849 0aba 2C       		.uleb128 0x2c
 2850 0abb 4F020000 		.4byte	.LASF119
 2851 0abf 09       		.byte	0x9
 2852 0ac0 56       		.byte	0x56
 2853 0ac1 25000000 		.4byte	0x25
 2854 0ac5 CF0A0000 		.4byte	0xacf
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 62


 2855 0ac9 2D       		.uleb128 0x2d
 2856 0aca F0080000 		.4byte	0x8f0
 2857 0ace 00       		.byte	0
 2858 0acf 2C       		.uleb128 0x2c
 2859 0ad0 BD050000 		.4byte	.LASF120
 2860 0ad4 09       		.byte	0x9
 2861 0ad5 57       		.byte	0x57
 2862 0ad6 25000000 		.4byte	0x25
 2863 0ada E90A0000 		.4byte	0xae9
 2864 0ade 2D       		.uleb128 0x2d
 2865 0adf F0080000 		.4byte	0x8f0
 2866 0ae3 2D       		.uleb128 0x2d
 2867 0ae4 F0080000 		.4byte	0x8f0
 2868 0ae8 00       		.byte	0
 2869 0ae9 2C       		.uleb128 0x2c
 2870 0aea 87010000 		.4byte	.LASF121
 2871 0aee 0A       		.byte	0xa
 2872 0aef 86       		.byte	0x86
 2873 0af0 CA000000 		.4byte	0xca
 2874 0af4 FE0A0000 		.4byte	0xafe
 2875 0af8 2D       		.uleb128 0x2d
 2876 0af9 CA000000 		.4byte	0xca
 2877 0afd 00       		.byte	0
 2878 0afe 2E       		.uleb128 0x2e
 2879 0aff 13040000 		.4byte	.LASF123
 2880 0b03 DF000000 		.4byte	0xdf
 2881 0b07 1B0B0000 		.4byte	0xb1b
 2882 0b0b 2D       		.uleb128 0x2d
 2883 0b0c DF000000 		.4byte	0xdf
 2884 0b10 2D       		.uleb128 0x2d
 2885 0b11 90000000 		.4byte	0x90
 2886 0b15 2D       		.uleb128 0x2d
 2887 0b16 D8000000 		.4byte	0xd8
 2888 0b1a 00       		.byte	0
 2889 0b1b 2F       		.uleb128 0x2f
 2890 0b1c 82070000 		.4byte	.LASF122
 2891 0b20 0A       		.byte	0xa
 2892 0b21 1B01     		.2byte	0x11b
 2893 0b23 69000000 		.4byte	0x69
 2894 0b27 310B0000 		.4byte	0xb31
 2895 0b2b 2D       		.uleb128 0x2d
 2896 0b2c CA000000 		.4byte	0xca
 2897 0b30 00       		.byte	0
 2898 0b31 30       		.uleb128 0x30
 2899 0b32 B1080000 		.4byte	.LASF124
 2900 0b36 04       		.byte	0x4
 2901 0b37 8B       		.byte	0x8b
 2902 0b38 9E000000 		.4byte	0x9e
 2903 0b3c 2D       		.uleb128 0x2d
 2904 0b3d 9E000000 		.4byte	0x9e
 2905 0b41 00       		.byte	0
 2906 0b42 00       		.byte	0
 2907              		.section	.debug_abbrev,"",%progbits
 2908              	.Ldebug_abbrev0:
 2909 0000 01       		.uleb128 0x1
 2910 0001 11       		.uleb128 0x11
 2911 0002 01       		.byte	0x1
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 63


 2912 0003 25       		.uleb128 0x25
 2913 0004 0E       		.uleb128 0xe
 2914 0005 13       		.uleb128 0x13
 2915 0006 0B       		.uleb128 0xb
 2916 0007 03       		.uleb128 0x3
 2917 0008 0E       		.uleb128 0xe
 2918 0009 1B       		.uleb128 0x1b
 2919 000a 0E       		.uleb128 0xe
 2920 000b 55       		.uleb128 0x55
 2921 000c 17       		.uleb128 0x17
 2922 000d 11       		.uleb128 0x11
 2923 000e 01       		.uleb128 0x1
 2924 000f 10       		.uleb128 0x10
 2925 0010 17       		.uleb128 0x17
 2926 0011 00       		.byte	0
 2927 0012 00       		.byte	0
 2928 0013 02       		.uleb128 0x2
 2929 0014 24       		.uleb128 0x24
 2930 0015 00       		.byte	0
 2931 0016 0B       		.uleb128 0xb
 2932 0017 0B       		.uleb128 0xb
 2933 0018 3E       		.uleb128 0x3e
 2934 0019 0B       		.uleb128 0xb
 2935 001a 03       		.uleb128 0x3
 2936 001b 0E       		.uleb128 0xe
 2937 001c 00       		.byte	0
 2938 001d 00       		.byte	0
 2939 001e 03       		.uleb128 0x3
 2940 001f 16       		.uleb128 0x16
 2941 0020 00       		.byte	0
 2942 0021 03       		.uleb128 0x3
 2943 0022 0E       		.uleb128 0xe
 2944 0023 3A       		.uleb128 0x3a
 2945 0024 0B       		.uleb128 0xb
 2946 0025 3B       		.uleb128 0x3b
 2947 0026 0B       		.uleb128 0xb
 2948 0027 49       		.uleb128 0x49
 2949 0028 13       		.uleb128 0x13
 2950 0029 00       		.byte	0
 2951 002a 00       		.byte	0
 2952 002b 04       		.uleb128 0x4
 2953 002c 24       		.uleb128 0x24
 2954 002d 00       		.byte	0
 2955 002e 0B       		.uleb128 0xb
 2956 002f 0B       		.uleb128 0xb
 2957 0030 3E       		.uleb128 0x3e
 2958 0031 0B       		.uleb128 0xb
 2959 0032 03       		.uleb128 0x3
 2960 0033 08       		.uleb128 0x8
 2961 0034 00       		.byte	0
 2962 0035 00       		.byte	0
 2963 0036 05       		.uleb128 0x5
 2964 0037 0F       		.uleb128 0xf
 2965 0038 00       		.byte	0
 2966 0039 0B       		.uleb128 0xb
 2967 003a 0B       		.uleb128 0xb
 2968 003b 00       		.byte	0
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 64


 2969 003c 00       		.byte	0
 2970 003d 06       		.uleb128 0x6
 2971 003e 35       		.uleb128 0x35
 2972 003f 00       		.byte	0
 2973 0040 49       		.uleb128 0x49
 2974 0041 13       		.uleb128 0x13
 2975 0042 00       		.byte	0
 2976 0043 00       		.byte	0
 2977 0044 07       		.uleb128 0x7
 2978 0045 13       		.uleb128 0x13
 2979 0046 01       		.byte	0x1
 2980 0047 0B       		.uleb128 0xb
 2981 0048 0B       		.uleb128 0xb
 2982 0049 3A       		.uleb128 0x3a
 2983 004a 0B       		.uleb128 0xb
 2984 004b 3B       		.uleb128 0x3b
 2985 004c 0B       		.uleb128 0xb
 2986 004d 01       		.uleb128 0x1
 2987 004e 13       		.uleb128 0x13
 2988 004f 00       		.byte	0
 2989 0050 00       		.byte	0
 2990 0051 08       		.uleb128 0x8
 2991 0052 0D       		.uleb128 0xd
 2992 0053 00       		.byte	0
 2993 0054 03       		.uleb128 0x3
 2994 0055 0E       		.uleb128 0xe
 2995 0056 3A       		.uleb128 0x3a
 2996 0057 0B       		.uleb128 0xb
 2997 0058 3B       		.uleb128 0x3b
 2998 0059 0B       		.uleb128 0xb
 2999 005a 49       		.uleb128 0x49
 3000 005b 13       		.uleb128 0x13
 3001 005c 38       		.uleb128 0x38
 3002 005d 0B       		.uleb128 0xb
 3003 005e 00       		.byte	0
 3004 005f 00       		.byte	0
 3005 0060 09       		.uleb128 0x9
 3006 0061 01       		.uleb128 0x1
 3007 0062 01       		.byte	0x1
 3008 0063 49       		.uleb128 0x49
 3009 0064 13       		.uleb128 0x13
 3010 0065 01       		.uleb128 0x1
 3011 0066 13       		.uleb128 0x13
 3012 0067 00       		.byte	0
 3013 0068 00       		.byte	0
 3014 0069 0A       		.uleb128 0xa
 3015 006a 21       		.uleb128 0x21
 3016 006b 00       		.byte	0
 3017 006c 49       		.uleb128 0x49
 3018 006d 13       		.uleb128 0x13
 3019 006e 2F       		.uleb128 0x2f
 3020 006f 0B       		.uleb128 0xb
 3021 0070 00       		.byte	0
 3022 0071 00       		.byte	0
 3023 0072 0B       		.uleb128 0xb
 3024 0073 2E       		.uleb128 0x2e
 3025 0074 01       		.byte	0x1
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 65


 3026 0075 03       		.uleb128 0x3
 3027 0076 0E       		.uleb128 0xe
 3028 0077 3A       		.uleb128 0x3a
 3029 0078 0B       		.uleb128 0xb
 3030 0079 3B       		.uleb128 0x3b
 3031 007a 0B       		.uleb128 0xb
 3032 007b 27       		.uleb128 0x27
 3033 007c 19       		.uleb128 0x19
 3034 007d 49       		.uleb128 0x49
 3035 007e 13       		.uleb128 0x13
 3036 007f 11       		.uleb128 0x11
 3037 0080 01       		.uleb128 0x1
 3038 0081 12       		.uleb128 0x12
 3039 0082 06       		.uleb128 0x6
 3040 0083 40       		.uleb128 0x40
 3041 0084 18       		.uleb128 0x18
 3042 0085 9742     		.uleb128 0x2117
 3043 0087 19       		.uleb128 0x19
 3044 0088 01       		.uleb128 0x1
 3045 0089 13       		.uleb128 0x13
 3046 008a 00       		.byte	0
 3047 008b 00       		.byte	0
 3048 008c 0C       		.uleb128 0xc
 3049 008d 05       		.uleb128 0x5
 3050 008e 00       		.byte	0
 3051 008f 03       		.uleb128 0x3
 3052 0090 0E       		.uleb128 0xe
 3053 0091 3A       		.uleb128 0x3a
 3054 0092 0B       		.uleb128 0xb
 3055 0093 3B       		.uleb128 0x3b
 3056 0094 0B       		.uleb128 0xb
 3057 0095 49       		.uleb128 0x49
 3058 0096 13       		.uleb128 0x13
 3059 0097 02       		.uleb128 0x2
 3060 0098 17       		.uleb128 0x17
 3061 0099 00       		.byte	0
 3062 009a 00       		.byte	0
 3063 009b 0D       		.uleb128 0xd
 3064 009c 2E       		.uleb128 0x2e
 3065 009d 01       		.byte	0x1
 3066 009e 03       		.uleb128 0x3
 3067 009f 0E       		.uleb128 0xe
 3068 00a0 3A       		.uleb128 0x3a
 3069 00a1 0B       		.uleb128 0xb
 3070 00a2 3B       		.uleb128 0x3b
 3071 00a3 05       		.uleb128 0x5
 3072 00a4 27       		.uleb128 0x27
 3073 00a5 19       		.uleb128 0x19
 3074 00a6 11       		.uleb128 0x11
 3075 00a7 01       		.uleb128 0x1
 3076 00a8 12       		.uleb128 0x12
 3077 00a9 06       		.uleb128 0x6
 3078 00aa 40       		.uleb128 0x40
 3079 00ab 18       		.uleb128 0x18
 3080 00ac 9642     		.uleb128 0x2116
 3081 00ae 19       		.uleb128 0x19
 3082 00af 01       		.uleb128 0x1
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 66


 3083 00b0 13       		.uleb128 0x13
 3084 00b1 00       		.byte	0
 3085 00b2 00       		.byte	0
 3086 00b3 0E       		.uleb128 0xe
 3087 00b4 05       		.uleb128 0x5
 3088 00b5 00       		.byte	0
 3089 00b6 03       		.uleb128 0x3
 3090 00b7 0E       		.uleb128 0xe
 3091 00b8 3A       		.uleb128 0x3a
 3092 00b9 0B       		.uleb128 0xb
 3093 00ba 3B       		.uleb128 0x3b
 3094 00bb 05       		.uleb128 0x5
 3095 00bc 49       		.uleb128 0x49
 3096 00bd 13       		.uleb128 0x13
 3097 00be 02       		.uleb128 0x2
 3098 00bf 17       		.uleb128 0x17
 3099 00c0 00       		.byte	0
 3100 00c1 00       		.byte	0
 3101 00c2 0F       		.uleb128 0xf
 3102 00c3 0F       		.uleb128 0xf
 3103 00c4 00       		.byte	0
 3104 00c5 0B       		.uleb128 0xb
 3105 00c6 0B       		.uleb128 0xb
 3106 00c7 49       		.uleb128 0x49
 3107 00c8 13       		.uleb128 0x13
 3108 00c9 00       		.byte	0
 3109 00ca 00       		.byte	0
 3110 00cb 10       		.uleb128 0x10
 3111 00cc 2E       		.uleb128 0x2e
 3112 00cd 01       		.byte	0x1
 3113 00ce 3F       		.uleb128 0x3f
 3114 00cf 19       		.uleb128 0x19
 3115 00d0 03       		.uleb128 0x3
 3116 00d1 0E       		.uleb128 0xe
 3117 00d2 3A       		.uleb128 0x3a
 3118 00d3 0B       		.uleb128 0xb
 3119 00d4 3B       		.uleb128 0x3b
 3120 00d5 0B       		.uleb128 0xb
 3121 00d6 27       		.uleb128 0x27
 3122 00d7 19       		.uleb128 0x19
 3123 00d8 49       		.uleb128 0x49
 3124 00d9 13       		.uleb128 0x13
 3125 00da 11       		.uleb128 0x11
 3126 00db 01       		.uleb128 0x1
 3127 00dc 12       		.uleb128 0x12
 3128 00dd 06       		.uleb128 0x6
 3129 00de 40       		.uleb128 0x40
 3130 00df 18       		.uleb128 0x18
 3131 00e0 9742     		.uleb128 0x2117
 3132 00e2 19       		.uleb128 0x19
 3133 00e3 01       		.uleb128 0x1
 3134 00e4 13       		.uleb128 0x13
 3135 00e5 00       		.byte	0
 3136 00e6 00       		.byte	0
 3137 00e7 11       		.uleb128 0x11
 3138 00e8 2E       		.uleb128 0x2e
 3139 00e9 01       		.byte	0x1
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 67


 3140 00ea 03       		.uleb128 0x3
 3141 00eb 0E       		.uleb128 0xe
 3142 00ec 3A       		.uleb128 0x3a
 3143 00ed 0B       		.uleb128 0xb
 3144 00ee 3B       		.uleb128 0x3b
 3145 00ef 0B       		.uleb128 0xb
 3146 00f0 11       		.uleb128 0x11
 3147 00f1 01       		.uleb128 0x1
 3148 00f2 12       		.uleb128 0x12
 3149 00f3 06       		.uleb128 0x6
 3150 00f4 40       		.uleb128 0x40
 3151 00f5 18       		.uleb128 0x18
 3152 00f6 9642     		.uleb128 0x2116
 3153 00f8 19       		.uleb128 0x19
 3154 00f9 01       		.uleb128 0x1
 3155 00fa 13       		.uleb128 0x13
 3156 00fb 00       		.byte	0
 3157 00fc 00       		.byte	0
 3158 00fd 12       		.uleb128 0x12
 3159 00fe 34       		.uleb128 0x34
 3160 00ff 00       		.byte	0
 3161 0100 03       		.uleb128 0x3
 3162 0101 0E       		.uleb128 0xe
 3163 0102 3A       		.uleb128 0x3a
 3164 0103 0B       		.uleb128 0xb
 3165 0104 3B       		.uleb128 0x3b
 3166 0105 0B       		.uleb128 0xb
 3167 0106 49       		.uleb128 0x49
 3168 0107 13       		.uleb128 0x13
 3169 0108 02       		.uleb128 0x2
 3170 0109 17       		.uleb128 0x17
 3171 010a 00       		.byte	0
 3172 010b 00       		.byte	0
 3173 010c 13       		.uleb128 0x13
 3174 010d 898201   		.uleb128 0x4109
 3175 0110 00       		.byte	0
 3176 0111 11       		.uleb128 0x11
 3177 0112 01       		.uleb128 0x1
 3178 0113 31       		.uleb128 0x31
 3179 0114 13       		.uleb128 0x13
 3180 0115 00       		.byte	0
 3181 0116 00       		.byte	0
 3182 0117 14       		.uleb128 0x14
 3183 0118 898201   		.uleb128 0x4109
 3184 011b 01       		.byte	0x1
 3185 011c 11       		.uleb128 0x11
 3186 011d 01       		.uleb128 0x1
 3187 011e 31       		.uleb128 0x31
 3188 011f 13       		.uleb128 0x13
 3189 0120 01       		.uleb128 0x1
 3190 0121 13       		.uleb128 0x13
 3191 0122 00       		.byte	0
 3192 0123 00       		.byte	0
 3193 0124 15       		.uleb128 0x15
 3194 0125 8A8201   		.uleb128 0x410a
 3195 0128 00       		.byte	0
 3196 0129 02       		.uleb128 0x2
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 68


 3197 012a 18       		.uleb128 0x18
 3198 012b 9142     		.uleb128 0x2111
 3199 012d 18       		.uleb128 0x18
 3200 012e 00       		.byte	0
 3201 012f 00       		.byte	0
 3202 0130 16       		.uleb128 0x16
 3203 0131 898201   		.uleb128 0x4109
 3204 0134 01       		.byte	0x1
 3205 0135 11       		.uleb128 0x11
 3206 0136 01       		.uleb128 0x1
 3207 0137 31       		.uleb128 0x31
 3208 0138 13       		.uleb128 0x13
 3209 0139 00       		.byte	0
 3210 013a 00       		.byte	0
 3211 013b 17       		.uleb128 0x17
 3212 013c 2E       		.uleb128 0x2e
 3213 013d 00       		.byte	0
 3214 013e 3F       		.uleb128 0x3f
 3215 013f 19       		.uleb128 0x19
 3216 0140 03       		.uleb128 0x3
 3217 0141 0E       		.uleb128 0xe
 3218 0142 3A       		.uleb128 0x3a
 3219 0143 0B       		.uleb128 0xb
 3220 0144 3B       		.uleb128 0x3b
 3221 0145 0B       		.uleb128 0xb
 3222 0146 11       		.uleb128 0x11
 3223 0147 01       		.uleb128 0x1
 3224 0148 12       		.uleb128 0x12
 3225 0149 06       		.uleb128 0x6
 3226 014a 40       		.uleb128 0x40
 3227 014b 18       		.uleb128 0x18
 3228 014c 9742     		.uleb128 0x2117
 3229 014e 19       		.uleb128 0x19
 3230 014f 00       		.byte	0
 3231 0150 00       		.byte	0
 3232 0151 18       		.uleb128 0x18
 3233 0152 2E       		.uleb128 0x2e
 3234 0153 01       		.byte	0x1
 3235 0154 3F       		.uleb128 0x3f
 3236 0155 19       		.uleb128 0x19
 3237 0156 03       		.uleb128 0x3
 3238 0157 0E       		.uleb128 0xe
 3239 0158 3A       		.uleb128 0x3a
 3240 0159 0B       		.uleb128 0xb
 3241 015a 3B       		.uleb128 0x3b
 3242 015b 0B       		.uleb128 0xb
 3243 015c 11       		.uleb128 0x11
 3244 015d 01       		.uleb128 0x1
 3245 015e 12       		.uleb128 0x12
 3246 015f 06       		.uleb128 0x6
 3247 0160 40       		.uleb128 0x40
 3248 0161 18       		.uleb128 0x18
 3249 0162 9742     		.uleb128 0x2117
 3250 0164 19       		.uleb128 0x19
 3251 0165 01       		.uleb128 0x1
 3252 0166 13       		.uleb128 0x13
 3253 0167 00       		.byte	0
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 69


 3254 0168 00       		.byte	0
 3255 0169 19       		.uleb128 0x19
 3256 016a 0B       		.uleb128 0xb
 3257 016b 01       		.byte	0x1
 3258 016c 11       		.uleb128 0x11
 3259 016d 01       		.uleb128 0x1
 3260 016e 12       		.uleb128 0x12
 3261 016f 06       		.uleb128 0x6
 3262 0170 00       		.byte	0
 3263 0171 00       		.byte	0
 3264 0172 1A       		.uleb128 0x1a
 3265 0173 2E       		.uleb128 0x2e
 3266 0174 00       		.byte	0
 3267 0175 3F       		.uleb128 0x3f
 3268 0176 19       		.uleb128 0x19
 3269 0177 03       		.uleb128 0x3
 3270 0178 0E       		.uleb128 0xe
 3271 0179 3A       		.uleb128 0x3a
 3272 017a 0B       		.uleb128 0xb
 3273 017b 3B       		.uleb128 0x3b
 3274 017c 0B       		.uleb128 0xb
 3275 017d 49       		.uleb128 0x49
 3276 017e 13       		.uleb128 0x13
 3277 017f 11       		.uleb128 0x11
 3278 0180 01       		.uleb128 0x1
 3279 0181 12       		.uleb128 0x12
 3280 0182 06       		.uleb128 0x6
 3281 0183 40       		.uleb128 0x40
 3282 0184 18       		.uleb128 0x18
 3283 0185 9742     		.uleb128 0x2117
 3284 0187 19       		.uleb128 0x19
 3285 0188 00       		.byte	0
 3286 0189 00       		.byte	0
 3287 018a 1B       		.uleb128 0x1b
 3288 018b 2E       		.uleb128 0x2e
 3289 018c 01       		.byte	0x1
 3290 018d 3F       		.uleb128 0x3f
 3291 018e 19       		.uleb128 0x19
 3292 018f 03       		.uleb128 0x3
 3293 0190 0E       		.uleb128 0xe
 3294 0191 3A       		.uleb128 0x3a
 3295 0192 0B       		.uleb128 0xb
 3296 0193 3B       		.uleb128 0x3b
 3297 0194 0B       		.uleb128 0xb
 3298 0195 49       		.uleb128 0x49
 3299 0196 13       		.uleb128 0x13
 3300 0197 11       		.uleb128 0x11
 3301 0198 01       		.uleb128 0x1
 3302 0199 12       		.uleb128 0x12
 3303 019a 06       		.uleb128 0x6
 3304 019b 40       		.uleb128 0x40
 3305 019c 18       		.uleb128 0x18
 3306 019d 9742     		.uleb128 0x2117
 3307 019f 19       		.uleb128 0x19
 3308 01a0 01       		.uleb128 0x1
 3309 01a1 13       		.uleb128 0x13
 3310 01a2 00       		.byte	0
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 70


 3311 01a3 00       		.byte	0
 3312 01a4 1C       		.uleb128 0x1c
 3313 01a5 2E       		.uleb128 0x2e
 3314 01a6 01       		.byte	0x1
 3315 01a7 3F       		.uleb128 0x3f
 3316 01a8 19       		.uleb128 0x19
 3317 01a9 03       		.uleb128 0x3
 3318 01aa 0E       		.uleb128 0xe
 3319 01ab 3A       		.uleb128 0x3a
 3320 01ac 0B       		.uleb128 0xb
 3321 01ad 3B       		.uleb128 0x3b
 3322 01ae 05       		.uleb128 0x5
 3323 01af 27       		.uleb128 0x27
 3324 01b0 19       		.uleb128 0x19
 3325 01b1 49       		.uleb128 0x49
 3326 01b2 13       		.uleb128 0x13
 3327 01b3 11       		.uleb128 0x11
 3328 01b4 01       		.uleb128 0x1
 3329 01b5 12       		.uleb128 0x12
 3330 01b6 06       		.uleb128 0x6
 3331 01b7 40       		.uleb128 0x40
 3332 01b8 18       		.uleb128 0x18
 3333 01b9 9642     		.uleb128 0x2116
 3334 01bb 19       		.uleb128 0x19
 3335 01bc 01       		.uleb128 0x1
 3336 01bd 13       		.uleb128 0x13
 3337 01be 00       		.byte	0
 3338 01bf 00       		.byte	0
 3339 01c0 1D       		.uleb128 0x1d
 3340 01c1 34       		.uleb128 0x34
 3341 01c2 00       		.byte	0
 3342 01c3 03       		.uleb128 0x3
 3343 01c4 0E       		.uleb128 0xe
 3344 01c5 3A       		.uleb128 0x3a
 3345 01c6 0B       		.uleb128 0xb
 3346 01c7 3B       		.uleb128 0x3b
 3347 01c8 05       		.uleb128 0x5
 3348 01c9 49       		.uleb128 0x49
 3349 01ca 13       		.uleb128 0x13
 3350 01cb 02       		.uleb128 0x2
 3351 01cc 17       		.uleb128 0x17
 3352 01cd 00       		.byte	0
 3353 01ce 00       		.byte	0
 3354 01cf 1E       		.uleb128 0x1e
 3355 01d0 2E       		.uleb128 0x2e
 3356 01d1 01       		.byte	0x1
 3357 01d2 3F       		.uleb128 0x3f
 3358 01d3 19       		.uleb128 0x19
 3359 01d4 03       		.uleb128 0x3
 3360 01d5 0E       		.uleb128 0xe
 3361 01d6 3A       		.uleb128 0x3a
 3362 01d7 0B       		.uleb128 0xb
 3363 01d8 3B       		.uleb128 0x3b
 3364 01d9 05       		.uleb128 0x5
 3365 01da 11       		.uleb128 0x11
 3366 01db 01       		.uleb128 0x1
 3367 01dc 12       		.uleb128 0x12
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 71


 3368 01dd 06       		.uleb128 0x6
 3369 01de 40       		.uleb128 0x40
 3370 01df 18       		.uleb128 0x18
 3371 01e0 9742     		.uleb128 0x2117
 3372 01e2 19       		.uleb128 0x19
 3373 01e3 01       		.uleb128 0x1
 3374 01e4 13       		.uleb128 0x13
 3375 01e5 00       		.byte	0
 3376 01e6 00       		.byte	0
 3377 01e7 1F       		.uleb128 0x1f
 3378 01e8 34       		.uleb128 0x34
 3379 01e9 00       		.byte	0
 3380 01ea 03       		.uleb128 0x3
 3381 01eb 0E       		.uleb128 0xe
 3382 01ec 3A       		.uleb128 0x3a
 3383 01ed 0B       		.uleb128 0xb
 3384 01ee 3B       		.uleb128 0x3b
 3385 01ef 05       		.uleb128 0x5
 3386 01f0 49       		.uleb128 0x49
 3387 01f1 13       		.uleb128 0x13
 3388 01f2 02       		.uleb128 0x2
 3389 01f3 18       		.uleb128 0x18
 3390 01f4 00       		.byte	0
 3391 01f5 00       		.byte	0
 3392 01f6 20       		.uleb128 0x20
 3393 01f7 34       		.uleb128 0x34
 3394 01f8 00       		.byte	0
 3395 01f9 03       		.uleb128 0x3
 3396 01fa 08       		.uleb128 0x8
 3397 01fb 3A       		.uleb128 0x3a
 3398 01fc 0B       		.uleb128 0xb
 3399 01fd 3B       		.uleb128 0x3b
 3400 01fe 05       		.uleb128 0x5
 3401 01ff 49       		.uleb128 0x49
 3402 0200 13       		.uleb128 0x13
 3403 0201 02       		.uleb128 0x2
 3404 0202 17       		.uleb128 0x17
 3405 0203 00       		.byte	0
 3406 0204 00       		.byte	0
 3407 0205 21       		.uleb128 0x21
 3408 0206 0B       		.uleb128 0xb
 3409 0207 01       		.byte	0x1
 3410 0208 55       		.uleb128 0x55
 3411 0209 17       		.uleb128 0x17
 3412 020a 01       		.uleb128 0x1
 3413 020b 13       		.uleb128 0x13
 3414 020c 00       		.byte	0
 3415 020d 00       		.byte	0
 3416 020e 22       		.uleb128 0x22
 3417 020f 0B       		.uleb128 0xb
 3418 0210 01       		.byte	0x1
 3419 0211 11       		.uleb128 0x11
 3420 0212 01       		.uleb128 0x1
 3421 0213 12       		.uleb128 0x12
 3422 0214 06       		.uleb128 0x6
 3423 0215 01       		.uleb128 0x1
 3424 0216 13       		.uleb128 0x13
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 72


 3425 0217 00       		.byte	0
 3426 0218 00       		.byte	0
 3427 0219 23       		.uleb128 0x23
 3428 021a 2E       		.uleb128 0x2e
 3429 021b 00       		.byte	0
 3430 021c 3F       		.uleb128 0x3f
 3431 021d 19       		.uleb128 0x19
 3432 021e 03       		.uleb128 0x3
 3433 021f 0E       		.uleb128 0xe
 3434 0220 3A       		.uleb128 0x3a
 3435 0221 0B       		.uleb128 0xb
 3436 0222 3B       		.uleb128 0x3b
 3437 0223 05       		.uleb128 0x5
 3438 0224 49       		.uleb128 0x49
 3439 0225 13       		.uleb128 0x13
 3440 0226 11       		.uleb128 0x11
 3441 0227 01       		.uleb128 0x1
 3442 0228 12       		.uleb128 0x12
 3443 0229 06       		.uleb128 0x6
 3444 022a 40       		.uleb128 0x40
 3445 022b 18       		.uleb128 0x18
 3446 022c 9742     		.uleb128 0x2117
 3447 022e 19       		.uleb128 0x19
 3448 022f 00       		.byte	0
 3449 0230 00       		.byte	0
 3450 0231 24       		.uleb128 0x24
 3451 0232 34       		.uleb128 0x34
 3452 0233 00       		.byte	0
 3453 0234 03       		.uleb128 0x3
 3454 0235 0E       		.uleb128 0xe
 3455 0236 3A       		.uleb128 0x3a
 3456 0237 0B       		.uleb128 0xb
 3457 0238 3B       		.uleb128 0x3b
 3458 0239 0B       		.uleb128 0xb
 3459 023a 49       		.uleb128 0x49
 3460 023b 13       		.uleb128 0x13
 3461 023c 02       		.uleb128 0x2
 3462 023d 18       		.uleb128 0x18
 3463 023e 00       		.byte	0
 3464 023f 00       		.byte	0
 3465 0240 25       		.uleb128 0x25
 3466 0241 34       		.uleb128 0x34
 3467 0242 00       		.byte	0
 3468 0243 03       		.uleb128 0x3
 3469 0244 08       		.uleb128 0x8
 3470 0245 3A       		.uleb128 0x3a
 3471 0246 0B       		.uleb128 0xb
 3472 0247 3B       		.uleb128 0x3b
 3473 0248 0B       		.uleb128 0xb
 3474 0249 49       		.uleb128 0x49
 3475 024a 13       		.uleb128 0x13
 3476 024b 02       		.uleb128 0x2
 3477 024c 18       		.uleb128 0x18
 3478 024d 00       		.byte	0
 3479 024e 00       		.byte	0
 3480 024f 26       		.uleb128 0x26
 3481 0250 34       		.uleb128 0x34
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 73


 3482 0251 00       		.byte	0
 3483 0252 03       		.uleb128 0x3
 3484 0253 0E       		.uleb128 0xe
 3485 0254 3A       		.uleb128 0x3a
 3486 0255 0B       		.uleb128 0xb
 3487 0256 3B       		.uleb128 0x3b
 3488 0257 05       		.uleb128 0x5
 3489 0258 49       		.uleb128 0x49
 3490 0259 13       		.uleb128 0x13
 3491 025a 3F       		.uleb128 0x3f
 3492 025b 19       		.uleb128 0x19
 3493 025c 3C       		.uleb128 0x3c
 3494 025d 19       		.uleb128 0x19
 3495 025e 00       		.byte	0
 3496 025f 00       		.byte	0
 3497 0260 27       		.uleb128 0x27
 3498 0261 34       		.uleb128 0x34
 3499 0262 00       		.byte	0
 3500 0263 03       		.uleb128 0x3
 3501 0264 0E       		.uleb128 0xe
 3502 0265 3A       		.uleb128 0x3a
 3503 0266 0B       		.uleb128 0xb
 3504 0267 3B       		.uleb128 0x3b
 3505 0268 0B       		.uleb128 0xb
 3506 0269 49       		.uleb128 0x49
 3507 026a 13       		.uleb128 0x13
 3508 026b 3F       		.uleb128 0x3f
 3509 026c 19       		.uleb128 0x19
 3510 026d 3C       		.uleb128 0x3c
 3511 026e 19       		.uleb128 0x19
 3512 026f 00       		.byte	0
 3513 0270 00       		.byte	0
 3514 0271 28       		.uleb128 0x28
 3515 0272 34       		.uleb128 0x34
 3516 0273 00       		.byte	0
 3517 0274 03       		.uleb128 0x3
 3518 0275 08       		.uleb128 0x8
 3519 0276 3A       		.uleb128 0x3a
 3520 0277 0B       		.uleb128 0xb
 3521 0278 3B       		.uleb128 0x3b
 3522 0279 0B       		.uleb128 0xb
 3523 027a 49       		.uleb128 0x49
 3524 027b 13       		.uleb128 0x13
 3525 027c 3F       		.uleb128 0x3f
 3526 027d 19       		.uleb128 0x19
 3527 027e 3C       		.uleb128 0x3c
 3528 027f 19       		.uleb128 0x19
 3529 0280 00       		.byte	0
 3530 0281 00       		.byte	0
 3531 0282 29       		.uleb128 0x29
 3532 0283 34       		.uleb128 0x34
 3533 0284 00       		.byte	0
 3534 0285 03       		.uleb128 0x3
 3535 0286 0E       		.uleb128 0xe
 3536 0287 3A       		.uleb128 0x3a
 3537 0288 0B       		.uleb128 0xb
 3538 0289 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 74


 3539 028a 0B       		.uleb128 0xb
 3540 028b 49       		.uleb128 0x49
 3541 028c 13       		.uleb128 0x13
 3542 028d 3F       		.uleb128 0x3f
 3543 028e 19       		.uleb128 0x19
 3544 028f 02       		.uleb128 0x2
 3545 0290 18       		.uleb128 0x18
 3546 0291 00       		.byte	0
 3547 0292 00       		.byte	0
 3548 0293 2A       		.uleb128 0x2a
 3549 0294 2E       		.uleb128 0x2e
 3550 0295 01       		.byte	0x1
 3551 0296 3F       		.uleb128 0x3f
 3552 0297 19       		.uleb128 0x19
 3553 0298 03       		.uleb128 0x3
 3554 0299 0E       		.uleb128 0xe
 3555 029a 3A       		.uleb128 0x3a
 3556 029b 0B       		.uleb128 0xb
 3557 029c 3B       		.uleb128 0x3b
 3558 029d 0B       		.uleb128 0xb
 3559 029e 3C       		.uleb128 0x3c
 3560 029f 19       		.uleb128 0x19
 3561 02a0 01       		.uleb128 0x1
 3562 02a1 13       		.uleb128 0x13
 3563 02a2 00       		.byte	0
 3564 02a3 00       		.byte	0
 3565 02a4 2B       		.uleb128 0x2b
 3566 02a5 18       		.uleb128 0x18
 3567 02a6 00       		.byte	0
 3568 02a7 00       		.byte	0
 3569 02a8 00       		.byte	0
 3570 02a9 2C       		.uleb128 0x2c
 3571 02aa 2E       		.uleb128 0x2e
 3572 02ab 01       		.byte	0x1
 3573 02ac 3F       		.uleb128 0x3f
 3574 02ad 19       		.uleb128 0x19
 3575 02ae 03       		.uleb128 0x3
 3576 02af 0E       		.uleb128 0xe
 3577 02b0 3A       		.uleb128 0x3a
 3578 02b1 0B       		.uleb128 0xb
 3579 02b2 3B       		.uleb128 0x3b
 3580 02b3 0B       		.uleb128 0xb
 3581 02b4 27       		.uleb128 0x27
 3582 02b5 19       		.uleb128 0x19
 3583 02b6 49       		.uleb128 0x49
 3584 02b7 13       		.uleb128 0x13
 3585 02b8 3C       		.uleb128 0x3c
 3586 02b9 19       		.uleb128 0x19
 3587 02ba 01       		.uleb128 0x1
 3588 02bb 13       		.uleb128 0x13
 3589 02bc 00       		.byte	0
 3590 02bd 00       		.byte	0
 3591 02be 2D       		.uleb128 0x2d
 3592 02bf 05       		.uleb128 0x5
 3593 02c0 00       		.byte	0
 3594 02c1 49       		.uleb128 0x49
 3595 02c2 13       		.uleb128 0x13
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 75


 3596 02c3 00       		.byte	0
 3597 02c4 00       		.byte	0
 3598 02c5 2E       		.uleb128 0x2e
 3599 02c6 2E       		.uleb128 0x2e
 3600 02c7 01       		.byte	0x1
 3601 02c8 3F       		.uleb128 0x3f
 3602 02c9 19       		.uleb128 0x19
 3603 02ca 03       		.uleb128 0x3
 3604 02cb 0E       		.uleb128 0xe
 3605 02cc 27       		.uleb128 0x27
 3606 02cd 19       		.uleb128 0x19
 3607 02ce 49       		.uleb128 0x49
 3608 02cf 13       		.uleb128 0x13
 3609 02d0 34       		.uleb128 0x34
 3610 02d1 19       		.uleb128 0x19
 3611 02d2 3C       		.uleb128 0x3c
 3612 02d3 19       		.uleb128 0x19
 3613 02d4 01       		.uleb128 0x1
 3614 02d5 13       		.uleb128 0x13
 3615 02d6 00       		.byte	0
 3616 02d7 00       		.byte	0
 3617 02d8 2F       		.uleb128 0x2f
 3618 02d9 2E       		.uleb128 0x2e
 3619 02da 01       		.byte	0x1
 3620 02db 3F       		.uleb128 0x3f
 3621 02dc 19       		.uleb128 0x19
 3622 02dd 03       		.uleb128 0x3
 3623 02de 0E       		.uleb128 0xe
 3624 02df 3A       		.uleb128 0x3a
 3625 02e0 0B       		.uleb128 0xb
 3626 02e1 3B       		.uleb128 0x3b
 3627 02e2 05       		.uleb128 0x5
 3628 02e3 27       		.uleb128 0x27
 3629 02e4 19       		.uleb128 0x19
 3630 02e5 49       		.uleb128 0x49
 3631 02e6 13       		.uleb128 0x13
 3632 02e7 3C       		.uleb128 0x3c
 3633 02e8 19       		.uleb128 0x19
 3634 02e9 01       		.uleb128 0x1
 3635 02ea 13       		.uleb128 0x13
 3636 02eb 00       		.byte	0
 3637 02ec 00       		.byte	0
 3638 02ed 30       		.uleb128 0x30
 3639 02ee 2E       		.uleb128 0x2e
 3640 02ef 01       		.byte	0x1
 3641 02f0 3F       		.uleb128 0x3f
 3642 02f1 19       		.uleb128 0x19
 3643 02f2 03       		.uleb128 0x3
 3644 02f3 0E       		.uleb128 0xe
 3645 02f4 3A       		.uleb128 0x3a
 3646 02f5 0B       		.uleb128 0xb
 3647 02f6 3B       		.uleb128 0x3b
 3648 02f7 0B       		.uleb128 0xb
 3649 02f8 27       		.uleb128 0x27
 3650 02f9 19       		.uleb128 0x19
 3651 02fa 49       		.uleb128 0x49
 3652 02fb 13       		.uleb128 0x13
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 76


 3653 02fc 3C       		.uleb128 0x3c
 3654 02fd 19       		.uleb128 0x19
 3655 02fe 00       		.byte	0
 3656 02ff 00       		.byte	0
 3657 0300 00       		.byte	0
 3658              		.section	.debug_loc,"",%progbits
 3659              	.Ldebug_loc0:
 3660              	.LLST0:
 3661 0000 00000000 		.4byte	.LVL0
 3662 0004 06000000 		.4byte	.LVL1
 3663 0008 0100     		.2byte	0x1
 3664 000a 50       		.byte	0x50
 3665 000b 06000000 		.4byte	.LVL1
 3666 000f 08000000 		.4byte	.LVL2
 3667 0013 0100     		.2byte	0x1
 3668 0015 53       		.byte	0x53
 3669 0016 08000000 		.4byte	.LVL2
 3670 001a 0C000000 		.4byte	.LFE64
 3671 001e 0100     		.2byte	0x1
 3672 0020 50       		.byte	0x50
 3673 0021 00000000 		.4byte	0
 3674 0025 00000000 		.4byte	0
 3675              	.LLST1:
 3676 0029 00000000 		.4byte	.LVL3
 3677 002d 0A000000 		.4byte	.LVL4
 3678 0031 0100     		.2byte	0x1
 3679 0033 50       		.byte	0x50
 3680 0034 0A000000 		.4byte	.LVL4
 3681 0038 38000000 		.4byte	.LFE74
 3682 003c 0100     		.2byte	0x1
 3683 003e 54       		.byte	0x54
 3684 003f 00000000 		.4byte	0
 3685 0043 00000000 		.4byte	0
 3686              	.LLST2:
 3687 0047 00000000 		.4byte	.LVL3
 3688 004b 0C000000 		.4byte	.LVL5
 3689 004f 0100     		.2byte	0x1
 3690 0051 51       		.byte	0x51
 3691 0052 0C000000 		.4byte	.LVL5
 3692 0056 0F000000 		.4byte	.LVL6-1
 3693 005a 0100     		.2byte	0x1
 3694 005c 50       		.byte	0x50
 3695 005d 0F000000 		.4byte	.LVL6-1
 3696 0061 2A000000 		.4byte	.LVL9
 3697 0065 0100     		.2byte	0x1
 3698 0067 55       		.byte	0x55
 3699 0068 2A000000 		.4byte	.LVL9
 3700 006c 38000000 		.4byte	.LFE74
 3701 0070 0600     		.2byte	0x6
 3702 0072 F3       		.byte	0xf3
 3703 0073 03       		.uleb128 0x3
 3704 0074 F5       		.byte	0xf5
 3705 0075 01       		.uleb128 0x1
 3706 0076 25       		.uleb128 0x25
 3707 0077 9F       		.byte	0x9f
 3708 0078 00000000 		.4byte	0
 3709 007c 00000000 		.4byte	0
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 77


 3710              	.LLST3:
 3711 0080 00000000 		.4byte	.LVL3
 3712 0084 0F000000 		.4byte	.LVL6-1
 3713 0088 0100     		.2byte	0x1
 3714 008a 52       		.byte	0x52
 3715 008b 0F000000 		.4byte	.LVL6-1
 3716 008f 38000000 		.4byte	.LFE74
 3717 0093 0100     		.2byte	0x1
 3718 0095 56       		.byte	0x56
 3719 0096 00000000 		.4byte	0
 3720 009a 00000000 		.4byte	0
 3721              	.LLST4:
 3722 009e 00000000 		.4byte	.LVL11
 3723 00a2 02000000 		.4byte	.LVL12
 3724 00a6 0100     		.2byte	0x1
 3725 00a8 50       		.byte	0x50
 3726 00a9 02000000 		.4byte	.LVL12
 3727 00ad 04000000 		.4byte	.LVL13
 3728 00b1 0400     		.2byte	0x4
 3729 00b3 F3       		.byte	0xf3
 3730 00b4 01       		.uleb128 0x1
 3731 00b5 50       		.byte	0x50
 3732 00b6 9F       		.byte	0x9f
 3733 00b7 04000000 		.4byte	.LVL13
 3734 00bb 0C000000 		.4byte	.LFE63
 3735 00bf 0100     		.2byte	0x1
 3736 00c1 50       		.byte	0x50
 3737 00c2 00000000 		.4byte	0
 3738 00c6 00000000 		.4byte	0
 3739              	.LLST5:
 3740 00ca 0E000000 		.4byte	.LVL16
 3741 00ce 28000000 		.4byte	.LVL18
 3742 00d2 0100     		.2byte	0x1
 3743 00d4 50       		.byte	0x50
 3744 00d5 54000000 		.4byte	.LVL23
 3745 00d9 65000000 		.4byte	.LVL24-1
 3746 00dd 0100     		.2byte	0x1
 3747 00df 50       		.byte	0x50
 3748 00e0 68000000 		.4byte	.LVL25
 3749 00e4 7C000000 		.4byte	.LVL28
 3750 00e8 0100     		.2byte	0x1
 3751 00ea 54       		.byte	0x54
 3752 00eb 7C000000 		.4byte	.LVL28
 3753 00ef 87000000 		.4byte	.LVL29-1
 3754 00f3 0100     		.2byte	0x1
 3755 00f5 50       		.byte	0x50
 3756 00f6 E8000000 		.4byte	.LVL39
 3757 00fa F0000000 		.4byte	.LVL40
 3758 00fe 0100     		.2byte	0x1
 3759 0100 54       		.byte	0x54
 3760 0101 02010000 		.4byte	.LVL43
 3761 0105 7C010000 		.4byte	.LVL58
 3762 0109 0100     		.2byte	0x1
 3763 010b 54       		.byte	0x54
 3764 010c 00000000 		.4byte	0
 3765 0110 00000000 		.4byte	0
 3766              	.LLST6:
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 78


 3767 0114 C4000000 		.4byte	.LVL35
 3768 0118 C6000000 		.4byte	.LVL36
 3769 011c 0100     		.2byte	0x1
 3770 011e 50       		.byte	0x50
 3771 011f C6000000 		.4byte	.LVL36
 3772 0123 E6000000 		.4byte	.LVL38
 3773 0127 0100     		.2byte	0x1
 3774 0129 58       		.byte	0x58
 3775 012a 3E010000 		.4byte	.LVL50
 3776 012e 40010000 		.4byte	.LVL51
 3777 0132 0100     		.2byte	0x1
 3778 0134 50       		.byte	0x50
 3779 0135 40010000 		.4byte	.LVL51
 3780 0139 54010000 		.4byte	.LVL53
 3781 013d 0100     		.2byte	0x1
 3782 013f 57       		.byte	0x57
 3783 0140 00000000 		.4byte	0
 3784 0144 00000000 		.4byte	0
 3785              	.LLST7:
 3786 0148 68000000 		.4byte	.LVL25
 3787 014c A8000000 		.4byte	.LVL31
 3788 0150 0100     		.2byte	0x1
 3789 0152 58       		.byte	0x58
 3790 0153 FC000000 		.4byte	.LVL41
 3791 0157 12010000 		.4byte	.LVL45
 3792 015b 0100     		.2byte	0x1
 3793 015d 57       		.byte	0x57
 3794 015e 12010000 		.4byte	.LVL45
 3795 0162 74010000 		.4byte	.LVL57
 3796 0166 0100     		.2byte	0x1
 3797 0168 56       		.byte	0x56
 3798 0169 74010000 		.4byte	.LVL57
 3799 016d 7C010000 		.4byte	.LVL58
 3800 0171 0100     		.2byte	0x1
 3801 0173 57       		.byte	0x57
 3802 0174 00000000 		.4byte	0
 3803 0178 00000000 		.4byte	0
 3804              	.LLST8:
 3805 017c 22000000 		.4byte	.LVL17
 3806 0180 74000000 		.4byte	.LVL26
 3807 0184 0100     		.2byte	0x1
 3808 0186 58       		.byte	0x58
 3809 0187 74000000 		.4byte	.LVL26
 3810 018b E8000000 		.4byte	.LVL39
 3811 018f 0100     		.2byte	0x1
 3812 0191 55       		.byte	0x55
 3813 0192 E8000000 		.4byte	.LVL39
 3814 0196 04010000 		.4byte	.LVL44
 3815 019a 0100     		.2byte	0x1
 3816 019c 58       		.byte	0x58
 3817 019d 04010000 		.4byte	.LVL44
 3818 01a1 3E010000 		.4byte	.LVL50
 3819 01a5 0100     		.2byte	0x1
 3820 01a7 57       		.byte	0x57
 3821 01a8 00000000 		.4byte	0
 3822 01ac 00000000 		.4byte	0
 3823              	.LLST9:
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 79


 3824 01b0 14000000 		.4byte	.LVL60
 3825 01b4 26000000 		.4byte	.LVL61
 3826 01b8 0100     		.2byte	0x1
 3827 01ba 50       		.byte	0x50
 3828 01bb 00000000 		.4byte	0
 3829 01bf 00000000 		.4byte	0
 3830              	.LLST10:
 3831 01c3 0C000000 		.4byte	.LVL62
 3832 01c7 18000000 		.4byte	.LVL63
 3833 01cb 0100     		.2byte	0x1
 3834 01cd 50       		.byte	0x50
 3835 01ce 1C000000 		.4byte	.LVL64
 3836 01d2 1E000000 		.4byte	.LVL65
 3837 01d6 0100     		.2byte	0x1
 3838 01d8 50       		.byte	0x50
 3839 01d9 00000000 		.4byte	0
 3840 01dd 00000000 		.4byte	0
 3841              	.LLST11:
 3842 01e1 00000000 		.4byte	.LVL66
 3843 01e5 12000000 		.4byte	.LVL68
 3844 01e9 0100     		.2byte	0x1
 3845 01eb 50       		.byte	0x50
 3846 01ec 12000000 		.4byte	.LVL68
 3847 01f0 38000000 		.4byte	.LVL74
 3848 01f4 0100     		.2byte	0x1
 3849 01f6 54       		.byte	0x54
 3850 01f7 38000000 		.4byte	.LVL74
 3851 01fb 3A000000 		.4byte	.LVL75
 3852 01ff 0400     		.2byte	0x4
 3853 0201 F3       		.byte	0xf3
 3854 0202 01       		.uleb128 0x1
 3855 0203 50       		.byte	0x50
 3856 0204 9F       		.byte	0x9f
 3857 0205 3A000000 		.4byte	.LVL75
 3858 0209 44000000 		.4byte	.LVL76
 3859 020d 0100     		.2byte	0x1
 3860 020f 50       		.byte	0x50
 3861 0210 44000000 		.4byte	.LVL76
 3862 0214 6C000000 		.4byte	.LVL83
 3863 0218 0100     		.2byte	0x1
 3864 021a 54       		.byte	0x54
 3865 021b 6C000000 		.4byte	.LVL83
 3866 021f 9C000000 		.4byte	.LFE73
 3867 0223 0400     		.2byte	0x4
 3868 0225 F3       		.byte	0xf3
 3869 0226 01       		.uleb128 0x1
 3870 0227 50       		.byte	0x50
 3871 0228 9F       		.byte	0x9f
 3872 0229 00000000 		.4byte	0
 3873 022d 00000000 		.4byte	0
 3874              	.LLST12:
 3875 0231 06000000 		.4byte	.LVL67
 3876 0235 38000000 		.4byte	.LVL74
 3877 0239 0100     		.2byte	0x1
 3878 023b 55       		.byte	0x55
 3879 023c 38000000 		.4byte	.LVL74
 3880 0240 3A000000 		.4byte	.LVL75
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 80


 3881 0244 0100     		.2byte	0x1
 3882 0246 50       		.byte	0x50
 3883 0247 3A000000 		.4byte	.LVL75
 3884 024b 78000000 		.4byte	.LVL85
 3885 024f 0100     		.2byte	0x1
 3886 0251 55       		.byte	0x55
 3887 0252 78000000 		.4byte	.LVL85
 3888 0256 8E000000 		.4byte	.LVL88
 3889 025a 0100     		.2byte	0x1
 3890 025c 54       		.byte	0x54
 3891 025d 8E000000 		.4byte	.LVL88
 3892 0261 9C000000 		.4byte	.LFE73
 3893 0265 0100     		.2byte	0x1
 3894 0267 50       		.byte	0x50
 3895 0268 00000000 		.4byte	0
 3896 026c 00000000 		.4byte	0
 3897              	.LLST13:
 3898 0270 08000000 		.4byte	.LVL89
 3899 0274 40000000 		.4byte	.LVL99
 3900 0278 0100     		.2byte	0x1
 3901 027a 55       		.byte	0x55
 3902 027b 00000000 		.4byte	0
 3903 027f 00000000 		.4byte	0
 3904              	.LLST14:
 3905 0283 14000000 		.4byte	.LVL91
 3906 0287 30000000 		.4byte	.LVL98
 3907 028b 0100     		.2byte	0x1
 3908 028d 54       		.byte	0x54
 3909 028e 00000000 		.4byte	0
 3910 0292 00000000 		.4byte	0
 3911              	.LLST15:
 3912 0296 1C000000 		.4byte	.LVL93
 3913 029a 1E000000 		.4byte	.LVL94
 3914 029e 0100     		.2byte	0x1
 3915 02a0 50       		.byte	0x50
 3916 02a1 1E000000 		.4byte	.LVL94
 3917 02a5 30000000 		.4byte	.LVL98
 3918 02a9 0100     		.2byte	0x1
 3919 02ab 56       		.byte	0x56
 3920 02ac 00000000 		.4byte	0
 3921 02b0 00000000 		.4byte	0
 3922              	.LLST16:
 3923 02b4 08000000 		.4byte	.LVL89
 3924 02b8 0C000000 		.4byte	.LVL90
 3925 02bc 0600     		.2byte	0x6
 3926 02be 9E       		.byte	0x9e
 3927 02bf 04       		.uleb128 0x4
 3928 02c0 9976967E 		.4byte	0x7e967699
 3929 02c4 0C000000 		.4byte	.LVL90
 3930 02c8 26000000 		.4byte	.LVL95
 3931 02cc 0100     		.2byte	0x1
 3932 02ce 57       		.byte	0x57
 3933 02cf 26000000 		.4byte	.LVL95
 3934 02d3 30000000 		.4byte	.LVL98
 3935 02d7 0100     		.2byte	0x1
 3936 02d9 56       		.byte	0x56
 3937 02da 30000000 		.4byte	.LVL98
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 81


 3938 02de 40000000 		.4byte	.LVL99
 3939 02e2 0100     		.2byte	0x1
 3940 02e4 57       		.byte	0x57
 3941 02e5 40000000 		.4byte	.LVL99
 3942 02e9 4C000000 		.4byte	.LFE75
 3943 02ed 0500     		.2byte	0x5
 3944 02ef 03       		.byte	0x3
 3945 02f0 60030000 		.4byte	pl+24
 3946 02f4 00000000 		.4byte	0
 3947 02f8 00000000 		.4byte	0
 3948              	.LLST17:
 3949 02fc 00000000 		.4byte	.LVL100
 3950 0300 1C000000 		.4byte	.LVL102
 3951 0304 0100     		.2byte	0x1
 3952 0306 50       		.byte	0x50
 3953 0307 1C000000 		.4byte	.LVL102
 3954 030b 68010000 		.4byte	.LVL121
 3955 030f 0100     		.2byte	0x1
 3956 0311 59       		.byte	0x59
 3957 0312 68010000 		.4byte	.LVL121
 3958 0316 A0010000 		.4byte	.LVL129
 3959 031a 0400     		.2byte	0x4
 3960 031c F3       		.byte	0xf3
 3961 031d 01       		.uleb128 0x1
 3962 031e 50       		.byte	0x50
 3963 031f 9F       		.byte	0x9f
 3964 0320 A0010000 		.4byte	.LVL129
 3965 0324 A4010000 		.4byte	.LVL130
 3966 0328 0100     		.2byte	0x1
 3967 032a 59       		.byte	0x59
 3968 032b A4010000 		.4byte	.LVL130
 3969 032f D6020000 		.4byte	.LVL162
 3970 0333 0400     		.2byte	0x4
 3971 0335 F3       		.byte	0xf3
 3972 0336 01       		.uleb128 0x1
 3973 0337 50       		.byte	0x50
 3974 0338 9F       		.byte	0x9f
 3975 0339 D6020000 		.4byte	.LVL162
 3976 033d DA020000 		.4byte	.LVL163
 3977 0341 0100     		.2byte	0x1
 3978 0343 59       		.byte	0x59
 3979 0344 DA020000 		.4byte	.LVL163
 3980 0348 18030000 		.4byte	.LFE76
 3981 034c 0400     		.2byte	0x4
 3982 034e F3       		.byte	0xf3
 3983 034f 01       		.uleb128 0x1
 3984 0350 50       		.byte	0x50
 3985 0351 9F       		.byte	0x9f
 3986 0352 00000000 		.4byte	0
 3987 0356 00000000 		.4byte	0
 3988              	.LLST18:
 3989 035a 00000000 		.4byte	.LVL100
 3990 035e 1E000000 		.4byte	.LVL103
 3991 0362 0100     		.2byte	0x1
 3992 0364 51       		.byte	0x51
 3993 0365 1E000000 		.4byte	.LVL103
 3994 0369 68010000 		.4byte	.LVL121
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 82


 3995 036d 0100     		.2byte	0x1
 3996 036f 5A       		.byte	0x5a
 3997 0370 68010000 		.4byte	.LVL121
 3998 0374 A0010000 		.4byte	.LVL129
 3999 0378 0400     		.2byte	0x4
 4000 037a F3       		.byte	0xf3
 4001 037b 01       		.uleb128 0x1
 4002 037c 51       		.byte	0x51
 4003 037d 9F       		.byte	0x9f
 4004 037e A0010000 		.4byte	.LVL129
 4005 0382 A6010000 		.4byte	.LVL131
 4006 0386 0100     		.2byte	0x1
 4007 0388 5A       		.byte	0x5a
 4008 0389 A6010000 		.4byte	.LVL131
 4009 038d D6020000 		.4byte	.LVL162
 4010 0391 0400     		.2byte	0x4
 4011 0393 F3       		.byte	0xf3
 4012 0394 01       		.uleb128 0x1
 4013 0395 51       		.byte	0x51
 4014 0396 9F       		.byte	0x9f
 4015 0397 D6020000 		.4byte	.LVL162
 4016 039b DA020000 		.4byte	.LVL163
 4017 039f 0100     		.2byte	0x1
 4018 03a1 5A       		.byte	0x5a
 4019 03a2 DA020000 		.4byte	.LVL163
 4020 03a6 18030000 		.4byte	.LFE76
 4021 03aa 0400     		.2byte	0x4
 4022 03ac F3       		.byte	0xf3
 4023 03ad 01       		.uleb128 0x1
 4024 03ae 51       		.byte	0x51
 4025 03af 9F       		.byte	0x9f
 4026 03b0 00000000 		.4byte	0
 4027 03b4 00000000 		.4byte	0
 4028              	.LLST19:
 4029 03b8 1A000000 		.4byte	.LVL101
 4030 03bc 44000000 		.4byte	.LVL105
 4031 03c0 0100     		.2byte	0x1
 4032 03c2 58       		.byte	0x58
 4033 03c3 44000000 		.4byte	.LVL105
 4034 03c7 50000000 		.4byte	.LVL106
 4035 03cb 0100     		.2byte	0x1
 4036 03cd 54       		.byte	0x54
 4037 03ce 50000000 		.4byte	.LVL106
 4038 03d2 E2020000 		.4byte	.LVL164
 4039 03d6 0100     		.2byte	0x1
 4040 03d8 58       		.byte	0x58
 4041 03d9 00000000 		.4byte	0
 4042 03dd 00000000 		.4byte	0
 4043              	.LLST20:
 4044 03e1 AC000000 		.4byte	.LVL111
 4045 03e5 B5000000 		.4byte	.LVL112-1
 4046 03e9 0100     		.2byte	0x1
 4047 03eb 50       		.byte	0x50
 4048 03ec 00000000 		.4byte	0
 4049 03f0 00000000 		.4byte	0
 4050              	.LLST21:
 4051 03f4 50000000 		.4byte	.LVL106
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 83


 4052 03f8 CE000000 		.4byte	.LVL114
 4053 03fc 0100     		.2byte	0x1
 4054 03fe 54       		.byte	0x54
 4055 03ff D0000000 		.4byte	.LVL115
 4056 0403 EE000000 		.4byte	.LVL117
 4057 0407 0100     		.2byte	0x1
 4058 0409 54       		.byte	0x54
 4059 040a 68010000 		.4byte	.LVL121
 4060 040e 9C010000 		.4byte	.LVL127
 4061 0412 0100     		.2byte	0x1
 4062 0414 54       		.byte	0x54
 4063 0415 9E010000 		.4byte	.LVL128
 4064 0419 A0010000 		.4byte	.LVL129
 4065 041d 0100     		.2byte	0x1
 4066 041f 54       		.byte	0x54
 4067 0420 A6010000 		.4byte	.LVL131
 4068 0424 F4010000 		.4byte	.LVL136
 4069 0428 0100     		.2byte	0x1
 4070 042a 54       		.byte	0x54
 4071 042b D6020000 		.4byte	.LVL162
 4072 042f DA020000 		.4byte	.LVL163
 4073 0433 0100     		.2byte	0x1
 4074 0435 54       		.byte	0x54
 4075 0436 00000000 		.4byte	0
 4076 043a 00000000 		.4byte	0
 4077              	.LLST22:
 4078 043e 68010000 		.4byte	.LVL121
 4079 0442 8E010000 		.4byte	.LVL124
 4080 0446 0100     		.2byte	0x1
 4081 0448 59       		.byte	0x59
 4082 0449 8E010000 		.4byte	.LVL124
 4083 044d 90010000 		.4byte	.LVL125
 4084 0451 0100     		.2byte	0x1
 4085 0453 50       		.byte	0x50
 4086 0454 90010000 		.4byte	.LVL125
 4087 0458 A0010000 		.4byte	.LVL129
 4088 045c 0100     		.2byte	0x1
 4089 045e 59       		.byte	0x59
 4090 045f A6010000 		.4byte	.LVL131
 4091 0463 FE010000 		.4byte	.LVL138
 4092 0467 0100     		.2byte	0x1
 4093 0469 59       		.byte	0x59
 4094 046a 00000000 		.4byte	0
 4095 046e 00000000 		.4byte	0
 4096              	.LLST23:
 4097 0472 FE010000 		.4byte	.LVL138
 4098 0476 00020000 		.4byte	.LVL139
 4099 047a 0100     		.2byte	0x1
 4100 047c 50       		.byte	0x50
 4101 047d 00020000 		.4byte	.LVL139
 4102 0481 7C020000 		.4byte	.LVL155
 4103 0485 0100     		.2byte	0x1
 4104 0487 59       		.byte	0x59
 4105 0488 00000000 		.4byte	0
 4106 048c 00000000 		.4byte	0
 4107              	.LLST24:
 4108 0490 24020000 		.4byte	.LVL144
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 84


 4109 0494 26020000 		.4byte	.LVL145
 4110 0498 0100     		.2byte	0x1
 4111 049a 50       		.byte	0x50
 4112 049b 26020000 		.4byte	.LVL145
 4113 049f 48020000 		.4byte	.LVL150
 4114 04a3 0100     		.2byte	0x1
 4115 04a5 56       		.byte	0x56
 4116 04a6 00000000 		.4byte	0
 4117 04aa 00000000 		.4byte	0
 4118              	.LLST25:
 4119 04ae 94020000 		.4byte	.LVL157
 4120 04b2 98020000 		.4byte	.LVL158
 4121 04b6 0100     		.2byte	0x1
 4122 04b8 50       		.byte	0x50
 4123 04b9 98020000 		.4byte	.LVL158
 4124 04bd D6020000 		.4byte	.LVL162
 4125 04c1 0100     		.2byte	0x1
 4126 04c3 55       		.byte	0x55
 4127 04c4 00000000 		.4byte	0
 4128 04c8 00000000 		.4byte	0
 4129              	.LLST26:
 4130 04cc 00000000 		.4byte	.LVL165
 4131 04d0 04000000 		.4byte	.LVL166
 4132 04d4 0200     		.2byte	0x2
 4133 04d6 30       		.byte	0x30
 4134 04d7 9F       		.byte	0x9f
 4135 04d8 04000000 		.4byte	.LVL166
 4136 04dc 16000000 		.4byte	.LVL167
 4137 04e0 0100     		.2byte	0x1
 4138 04e2 53       		.byte	0x53
 4139 04e3 18000000 		.4byte	.LVL168
 4140 04e7 28000000 		.4byte	.LFE77
 4141 04eb 0100     		.2byte	0x1
 4142 04ed 53       		.byte	0x53
 4143 04ee 00000000 		.4byte	0
 4144 04f2 00000000 		.4byte	0
 4145              		.section	.debug_aranges,"",%progbits
 4146 0000 A4000000 		.4byte	0xa4
 4147 0004 0200     		.2byte	0x2
 4148 0006 00000000 		.4byte	.Ldebug_info0
 4149 000a 04       		.byte	0x4
 4150 000b 00       		.byte	0
 4151 000c 0000     		.2byte	0
 4152 000e 0000     		.2byte	0
 4153 0010 00000000 		.4byte	.LFB64
 4154 0014 0C000000 		.4byte	.LFE64-.LFB64
 4155 0018 00000000 		.4byte	.LFB74
 4156 001c 38000000 		.4byte	.LFE74-.LFB74
 4157 0020 00000000 		.4byte	.LFB63
 4158 0024 0C000000 		.4byte	.LFE63-.LFB63
 4159 0028 00000000 		.4byte	.LFB65
 4160 002c 84010000 		.4byte	.LFE65-.LFB65
 4161 0030 00000000 		.4byte	.LFB67
 4162 0034 18000000 		.4byte	.LFE67-.LFB67
 4163 0038 00000000 		.4byte	.LFB66
 4164 003c 2C000000 		.4byte	.LFE66-.LFB66
 4165 0040 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 85


 4166 0044 2C000000 		.4byte	.LFE68-.LFB68
 4167 0048 00000000 		.4byte	.LFB69
 4168 004c 14000000 		.4byte	.LFE69-.LFB69
 4169 0050 00000000 		.4byte	.LFB70
 4170 0054 24000000 		.4byte	.LFE70-.LFB70
 4171 0058 00000000 		.4byte	.LFB71
 4172 005c 24000000 		.4byte	.LFE71-.LFB71
 4173 0060 00000000 		.4byte	.LFB72
 4174 0064 1C000000 		.4byte	.LFE72-.LFB72
 4175 0068 00000000 		.4byte	.LFB73
 4176 006c 9C000000 		.4byte	.LFE73-.LFB73
 4177 0070 00000000 		.4byte	.LFB75
 4178 0074 4C000000 		.4byte	.LFE75-.LFB75
 4179 0078 00000000 		.4byte	.LFB76
 4180 007c 18030000 		.4byte	.LFE76-.LFB76
 4181 0080 00000000 		.4byte	.LFB77
 4182 0084 28000000 		.4byte	.LFE77-.LFB77
 4183 0088 00000000 		.4byte	.LFB78
 4184 008c 20000000 		.4byte	.LFE78-.LFB78
 4185 0090 00000000 		.4byte	.LFB79
 4186 0094 20000000 		.4byte	.LFE79-.LFB79
 4187 0098 00000000 		.4byte	.LFB80
 4188 009c 18000000 		.4byte	.LFE80-.LFB80
 4189 00a0 00000000 		.4byte	0
 4190 00a4 00000000 		.4byte	0
 4191              		.section	.debug_ranges,"",%progbits
 4192              	.Ldebug_ranges0:
 4193 0000 68010000 		.4byte	.LBB3
 4194 0004 A0010000 		.4byte	.LBE3
 4195 0008 A6010000 		.4byte	.LBB5
 4196 000c 7C020000 		.4byte	.LBE5
 4197 0010 00000000 		.4byte	0
 4198 0014 00000000 		.4byte	0
 4199 0018 00000000 		.4byte	.LFB64
 4200 001c 0C000000 		.4byte	.LFE64
 4201 0020 00000000 		.4byte	.LFB74
 4202 0024 38000000 		.4byte	.LFE74
 4203 0028 00000000 		.4byte	.LFB63
 4204 002c 0C000000 		.4byte	.LFE63
 4205 0030 00000000 		.4byte	.LFB65
 4206 0034 84010000 		.4byte	.LFE65
 4207 0038 00000000 		.4byte	.LFB67
 4208 003c 18000000 		.4byte	.LFE67
 4209 0040 00000000 		.4byte	.LFB66
 4210 0044 2C000000 		.4byte	.LFE66
 4211 0048 00000000 		.4byte	.LFB68
 4212 004c 2C000000 		.4byte	.LFE68
 4213 0050 00000000 		.4byte	.LFB69
 4214 0054 14000000 		.4byte	.LFE69
 4215 0058 00000000 		.4byte	.LFB70
 4216 005c 24000000 		.4byte	.LFE70
 4217 0060 00000000 		.4byte	.LFB71
 4218 0064 24000000 		.4byte	.LFE71
 4219 0068 00000000 		.4byte	.LFB72
 4220 006c 1C000000 		.4byte	.LFE72
 4221 0070 00000000 		.4byte	.LFB73
 4222 0074 9C000000 		.4byte	.LFE73
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 86


 4223 0078 00000000 		.4byte	.LFB75
 4224 007c 4C000000 		.4byte	.LFE75
 4225 0080 00000000 		.4byte	.LFB76
 4226 0084 18030000 		.4byte	.LFE76
 4227 0088 00000000 		.4byte	.LFB77
 4228 008c 28000000 		.4byte	.LFE77
 4229 0090 00000000 		.4byte	.LFB78
 4230 0094 20000000 		.4byte	.LFE78
 4231 0098 00000000 		.4byte	.LFB79
 4232 009c 20000000 		.4byte	.LFE79
 4233 00a0 00000000 		.4byte	.LFB80
 4234 00a4 18000000 		.4byte	.LFE80
 4235 00a8 00000000 		.4byte	0
 4236 00ac 00000000 		.4byte	0
 4237              		.section	.debug_line,"",%progbits
 4238              	.Ldebug_line0:
 4239 0000 22040000 		.section	.debug_str,"MS",%progbits,1
 4239      02009B01 
 4239      00000201 
 4239      FB0E0D00 
 4239      01010101 
 4240              	.LASF26:
 4241 0000 70756C73 		.ascii	"pulse_microseconds\000"
 4241      655F6D69 
 4241      63726F73 
 4241      65636F6E 
 4241      647300
 4242              	.LASF77:
 4243 0013 70726576 		.ascii	"prev_nominal_speed\000"
 4243      5F6E6F6D 
 4243      696E616C 
 4243      5F737065 
 4243      656400
 4244              	.LASF131:
 4245 0026 706C616E 		.ascii	"plan_reset_buffer\000"
 4245      5F726573 
 4245      65745F62 
 4245      75666665 
 4245      7200
 4246              	.LASF64:
 4247 0038 6D61785F 		.ascii	"max_junction_speed_sqr\000"
 4247      6A756E63 
 4247      74696F6E 
 4247      5F737065 
 4247      65645F73 
 4248              	.LASF35:
 4249 004f 666C6167 		.ascii	"flags\000"
 4249      7300
 4250              	.LASF67:
 4251 0055 706C616E 		.ascii	"plan_block_t\000"
 4251      5F626C6F 
 4251      636B5F74 
 4251      00
 4252              	.LASF90:
 4253 0062 706C5F64 		.ascii	"pl_data\000"
 4253      61746100 
 4254              	.LASF30:
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 87


 4255 006a 73746174 		.ascii	"status_report_mask\000"
 4255      75735F72 
 4255      65706F72 
 4255      745F6D61 
 4255      736B00
 4256              	.LASF13:
 4257 007d 756E7369 		.ascii	"unsigned int\000"
 4257      676E6564 
 4257      20696E74 
 4257      00
 4258              	.LASF78:
 4259 008a 6E657874 		.ascii	"next\000"
 4259      00
 4260              	.LASF50:
 4261 008f 725F6F76 		.ascii	"r_override\000"
 4261      65727269 
 4261      646500
 4262              	.LASF7:
 4263 009a 5F5F696E 		.ascii	"__int32_t\000"
 4263      7433325F 
 4263      7400
 4264              	.LASF112:
 4265 00a4 7379735F 		.ascii	"sys_probe_state\000"
 4265      70726F62 
 4265      655F7374 
 4265      61746500 
 4266              	.LASF29:
 4267 00b4 73746570 		.ascii	"stepper_idle_lock_time\000"
 4267      7065725F 
 4267      69646C65 
 4267      5F6C6F63 
 4267      6B5F7469 
 4268              	.LASF66:
 4269 00cb 70726F67 		.ascii	"programmed_rate\000"
 4269      72616D6D 
 4269      65645F72 
 4269      61746500 
 4270              	.LASF32:
 4271 00db 6172635F 		.ascii	"arc_tolerance\000"
 4271      746F6C65 
 4271      72616E63 
 4271      6500
 4272              	.LASF106:
 4273 00e9 6E657874 		.ascii	"next_buffer_head\000"
 4273      5F627566 
 4273      6665725F 
 4273      68656164 
 4273      00
 4274              	.LASF84:
 4275 00fa 706C616E 		.ascii	"plan_check_full_buffer\000"
 4275      5F636865 
 4275      636B5F66 
 4275      756C6C5F 
 4275      62756666 
 4276              	.LASF59:
 4277 0111 64697265 		.ascii	"direction_bits\000"
 4277      6374696F 
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 88


 4277      6E5F6269 
 4277      747300
 4278              	.LASF24:
 4279 0120 61636365 		.ascii	"acceleration\000"
 4279      6C657261 
 4279      74696F6E 
 4279      00
 4280              	.LASF38:
 4281 012d 686F6D69 		.ascii	"homing_seek_rate\000"
 4281      6E675F73 
 4281      65656B5F 
 4281      72617465 
 4281      00
 4282              	.LASF99:
 4283 013e 706C616E 		.ascii	"plan_sync_position\000"
 4283      5F73796E 
 4283      635F706F 
 4283      73697469 
 4283      6F6E00
 4284              	.LASF17:
 4285 0151 75696E74 		.ascii	"uint32_t\000"
 4285      33325F74 
 4285      00
 4286              	.LASF37:
 4287 015a 686F6D69 		.ascii	"homing_feed_rate\000"
 4287      6E675F66 
 4287      6565645F 
 4287      72617465 
 4287      00
 4288              	.LASF61:
 4289 016b 656E7472 		.ascii	"entry_speed_sqr\000"
 4289      795F7370 
 4289      6565645F 
 4289      73717200 
 4290              	.LASF57:
 4291 017b 73746570 		.ascii	"steps\000"
 4291      7300
 4292              	.LASF0:
 4293 0181 666C6F61 		.ascii	"float\000"
 4293      7400
 4294              	.LASF121:
 4295 0187 73717274 		.ascii	"sqrt\000"
 4295      00
 4296              	.LASF69:
 4297 018c 706C616E 		.ascii	"plan_line_data_t\000"
 4297      5F6C696E 
 4297      655F6461 
 4297      74615F74 
 4297      00
 4298              	.LASF12:
 4299 019d 6C6F6E67 		.ascii	"long long unsigned int\000"
 4299      206C6F6E 
 4299      6720756E 
 4299      7369676E 
 4299      65642069 
 4300              	.LASF49:
 4301 01b4 665F6F76 		.ascii	"f_override\000"
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 89


 4301      65727269 
 4301      646500
 4302              	.LASF129:
 4303 01bf 706C616E 		.ascii	"plan_compute_profile_parameters\000"
 4303      5F636F6D 
 4303      70757465 
 4303      5F70726F 
 4303      66696C65 
 4304              	.LASF5:
 4305 01df 5F5F7569 		.ascii	"__uint16_t\000"
 4305      6E743136 
 4305      5F7400
 4306              	.LASF71:
 4307 01ea 70726576 		.ascii	"previous_unit_vec\000"
 4307      696F7573 
 4307      5F756E69 
 4307      745F7665 
 4307      6300
 4308              	.LASF52:
 4309 01fc 7370696E 		.ascii	"spindle_stop_ovr\000"
 4309      646C655F 
 4309      73746F70 
 4309      5F6F7672 
 4309      00
 4310              	.LASF43:
 4311 020d 61626F72 		.ascii	"abort\000"
 4311      7400
 4312              	.LASF62:
 4313 0213 6D61785F 		.ascii	"max_entry_speed_sqr\000"
 4313      656E7472 
 4313      795F7370 
 4313      6565645F 
 4313      73717200 
 4314              	.LASF40:
 4315 0227 686F6D69 		.ascii	"homing_pulloff\000"
 4315      6E675F70 
 4315      756C6C6F 
 4315      666600
 4316              	.LASF89:
 4317 0236 74617267 		.ascii	"target\000"
 4317      657400
 4318              	.LASF126:
 4319 023d 706C616E 		.ascii	"planner.c\000"
 4319      6E65722E 
 4319      6300
 4320              	.LASF44:
 4321 0247 73757370 		.ascii	"suspend\000"
 4321      656E6400 
 4322              	.LASF119:
 4323 024f 636F6E76 		.ascii	"convert_delta_vector_to_unit_vector\000"
 4323      6572745F 
 4323      64656C74 
 4323      615F7665 
 4323      63746F72 
 4324              	.LASF113:
 4325 0273 7379735F 		.ascii	"sys_rt_exec_state\000"
 4325      72745F65 
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 90


 4325      7865635F 
 4325      73746174 
 4325      6500
 4326              	.LASF107:
 4327 0285 626C6F63 		.ascii	"block_buffer_planned\000"
 4327      6B5F6275 
 4327      66666572 
 4327      5F706C61 
 4327      6E6E6564 
 4328              	.LASF117:
 4329 029a 7379735F 		.ascii	"sys_rt_exec_debug\000"
 4329      72745F65 
 4329      7865635F 
 4329      64656275 
 4329      6700
 4330              	.LASF127:
 4331 02ac 433A5C55 		.ascii	"C:\\Users\\Bart\\Dropbox\\PSoC\\PSoC_Grbl\\PSoC_Grb"
 4331      73657273 
 4331      5C426172 
 4331      745C4472 
 4331      6F70626F 
 4332 02d9 6C2E6379 		.ascii	"l.cydsn\000"
 4332      64736E00 
 4333              	.LASF109:
 4334 02e1 73657474 		.ascii	"settings\000"
 4334      696E6773 
 4334      00
 4335              	.LASF25:
 4336 02ea 6D61785F 		.ascii	"max_travel\000"
 4336      74726176 
 4336      656C00
 4337              	.LASF130:
 4338 02f5 706C616E 		.ascii	"planner_recalculate\000"
 4338      6E65725F 
 4338      72656361 
 4338      6C63756C 
 4338      61746500 
 4339              	.LASF19:
 4340 0309 63686172 		.ascii	"char\000"
 4340      00
 4341              	.LASF33:
 4342 030e 72706D5F 		.ascii	"rpm_max\000"
 4342      6D617800 
 4343              	.LASF133:
 4344 0316 73745F75 		.ascii	"st_update_plan_block_parameters\000"
 4344      70646174 
 4344      655F706C 
 4344      616E5F62 
 4344      6C6F636B 
 4345              	.LASF55:
 4346 0336 7370696E 		.ascii	"spindle_speed\000"
 4346      646C655F 
 4346      73706565 
 4346      6400
 4347              	.LASF58:
 4348 0344 73746570 		.ascii	"step_event_count\000"
 4348      5F657665 
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 91


 4348      6E745F63 
 4348      6F756E74 
 4348      00
 4349              	.LASF53:
 4350 0355 7265706F 		.ascii	"report_ovr_counter\000"
 4350      72745F6F 
 4350      76725F63 
 4350      6F756E74 
 4350      657200
 4351              	.LASF51:
 4352 0368 7370696E 		.ascii	"spindle_speed_ovr\000"
 4352      646C655F 
 4352      73706565 
 4352      645F6F76 
 4352      7200
 4353              	.LASF14:
 4354 037a 75696E74 		.ascii	"uint8_t\000"
 4354      385F7400 
 4355              	.LASF95:
 4356 0382 6A756E63 		.ascii	"junction_unit_vec\000"
 4356      74696F6E 
 4356      5F756E69 
 4356      745F7665 
 4356      6300
 4357              	.LASF92:
 4358 0394 706F7369 		.ascii	"position_steps\000"
 4358      74696F6E 
 4358      5F737465 
 4358      707300
 4359              	.LASF86:
 4360 03a3 706C616E 		.ascii	"plan_compute_profile_nominal_speed\000"
 4360      5F636F6D 
 4360      70757465 
 4360      5F70726F 
 4360      66696C65 
 4361              	.LASF105:
 4362 03c6 626C6F63 		.ascii	"block_buffer_head\000"
 4362      6B5F6275 
 4362      66666572 
 4362      5F686561 
 4362      6400
 4363              	.LASF11:
 4364 03d8 6C6F6E67 		.ascii	"long long int\000"
 4364      206C6F6E 
 4364      6720696E 
 4364      7400
 4365              	.LASF111:
 4366 03e6 7379735F 		.ascii	"sys_probe_position\000"
 4366      70726F62 
 4366      655F706F 
 4366      73697469 
 4366      6F6E00
 4367              	.LASF103:
 4368 03f9 626C6F63 		.ascii	"block_buffer\000"
 4368      6B5F6275 
 4368      66666572 
 4368      00
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 92


 4369              	.LASF22:
 4370 0406 73746570 		.ascii	"steps_per_mm\000"
 4370      735F7065 
 4370      725F6D6D 
 4370      00
 4371              	.LASF123:
 4372 0413 6D656D73 		.ascii	"memset\000"
 4372      657400
 4373              	.LASF76:
 4374 041a 6E6F6D69 		.ascii	"nominal_speed\000"
 4374      6E616C5F 
 4374      73706565 
 4374      6400
 4375              	.LASF73:
 4376 0428 706C616E 		.ascii	"planner_t\000"
 4376      6E65725F 
 4376      7400
 4377              	.LASF104:
 4378 0432 626C6F63 		.ascii	"block_buffer_tail\000"
 4378      6B5F6275 
 4378      66666572 
 4378      5F746169 
 4378      6C00
 4379              	.LASF102:
 4380 0444 706C616E 		.ascii	"plan_cycle_reinitialize\000"
 4380      5F637963 
 4380      6C655F72 
 4380      65696E69 
 4380      7469616C 
 4381              	.LASF85:
 4382 045c 706C616E 		.ascii	"plan_next_block_index\000"
 4382      5F6E6578 
 4382      745F626C 
 4382      6F636B5F 
 4382      696E6465 
 4383              	.LASF110:
 4384 0472 7379735F 		.ascii	"sys_position\000"
 4384      706F7369 
 4384      74696F6E 
 4384      00
 4385              	.LASF98:
 4386 047f 73696E5F 		.ascii	"sin_theta_d2\000"
 4386      74686574 
 4386      615F6432 
 4386      00
 4387              	.LASF87:
 4388 048c 706C616E 		.ascii	"plan_update_velocity_profile_parameters\000"
 4388      5F757064 
 4388      6174655F 
 4388      76656C6F 
 4388      63697479 
 4389              	.LASF27:
 4390 04b4 73746570 		.ascii	"step_invert_mask\000"
 4390      5F696E76 
 4390      6572745F 
 4390      6D61736B 
 4390      00
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 93


 4391              	.LASF21:
 4392 04c5 6C6F6E67 		.ascii	"long double\000"
 4392      20646F75 
 4392      626C6500 
 4393              	.LASF81:
 4394 04d1 706C616E 		.ascii	"plan_discard_current_block\000"
 4394      5F646973 
 4394      63617264 
 4394      5F637572 
 4394      72656E74 
 4395              	.LASF15:
 4396 04ec 75696E74 		.ascii	"uint16_t\000"
 4396      31365F74 
 4396      00
 4397              	.LASF23:
 4398 04f5 6D61785F 		.ascii	"max_rate\000"
 4398      72617465 
 4398      00
 4399              	.LASF115:
 4400 04fe 7379735F 		.ascii	"sys_rt_exec_motion_override\000"
 4400      72745F65 
 4400      7865635F 
 4400      6D6F7469 
 4400      6F6E5F6F 
 4401              	.LASF46:
 4402 051a 73746570 		.ascii	"step_control\000"
 4402      5F636F6E 
 4402      74726F6C 
 4402      00
 4403              	.LASF74:
 4404 0527 626C6F63 		.ascii	"block_index\000"
 4404      6B5F696E 
 4404      64657800 
 4405              	.LASF65:
 4406 0533 72617069 		.ascii	"rapid_rate\000"
 4406      645F7261 
 4406      746500
 4407              	.LASF3:
 4408 053e 73686F72 		.ascii	"short int\000"
 4408      7420696E 
 4408      7400
 4409              	.LASF132:
 4410 0548 706C616E 		.ascii	"plan_get_exec_block_exit_speed_sqr\000"
 4410      5F676574 
 4410      5F657865 
 4410      635F626C 
 4410      6F636B5F 
 4411              	.LASF8:
 4412 056b 6C6F6E67 		.ascii	"long int\000"
 4412      20696E74 
 4412      00
 4413              	.LASF108:
 4414 0574 49544D5F 		.ascii	"ITM_RxBuffer\000"
 4414      52784275 
 4414      66666572 
 4414      00
 4415              	.LASF128:
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 94


 4416 0581 706C616E 		.ascii	"plan_prev_block_index\000"
 4416      5F707265 
 4416      765F626C 
 4416      6F636B5F 
 4416      696E6465 
 4417              	.LASF56:
 4418 0597 73797374 		.ascii	"system_t\000"
 4418      656D5F74 
 4418      00
 4419              	.LASF68:
 4420 05a0 66656564 		.ascii	"feed_rate\000"
 4420      5F726174 
 4420      6500
 4421              	.LASF54:
 4422 05aa 7265706F 		.ascii	"report_wco_counter\000"
 4422      72745F77 
 4422      636F5F63 
 4422      6F756E74 
 4422      657200
 4423              	.LASF120:
 4424 05bd 6C696D69 		.ascii	"limit_value_by_axis_maximum\000"
 4424      745F7661 
 4424      6C75655F 
 4424      62795F61 
 4424      7869735F 
 4425              	.LASF45:
 4426 05d9 736F6674 		.ascii	"soft_limit\000"
 4426      5F6C696D 
 4426      697400
 4427              	.LASF96:
 4428 05e4 6A756E63 		.ascii	"junction_cos_theta\000"
 4428      74696F6E 
 4428      5F636F73 
 4428      5F746865 
 4428      746100
 4429              	.LASF80:
 4430 05f7 706C616E 		.ascii	"plan_reset\000"
 4430      5F726573 
 4430      657400
 4431              	.LASF75:
 4432 0602 626C6F63 		.ascii	"block\000"
 4432      6B00
 4433              	.LASF4:
 4434 0608 5F5F7569 		.ascii	"__uint8_t\000"
 4434      6E74385F 
 4434      7400
 4435              	.LASF47:
 4436 0612 70726F62 		.ascii	"probe_succeeded\000"
 4436      655F7375 
 4436      63636565 
 4436      64656400 
 4437              	.LASF116:
 4438 0622 7379735F 		.ascii	"sys_rt_exec_accessory_override\000"
 4438      72745F65 
 4438      7865635F 
 4438      61636365 
 4438      73736F72 
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 95


 4439              	.LASF93:
 4440 0641 756E6974 		.ascii	"unit_vec\000"
 4440      5F766563 
 4440      00
 4441              	.LASF20:
 4442 064a 73697A65 		.ascii	"sizetype\000"
 4442      74797065 
 4442      00
 4443              	.LASF10:
 4444 0653 6C6F6E67 		.ascii	"long unsigned int\000"
 4444      20756E73 
 4444      69676E65 
 4444      6420696E 
 4444      7400
 4445              	.LASF16:
 4446 0665 696E7433 		.ascii	"int32_t\000"
 4446      325F7400 
 4447              	.LASF83:
 4448 066d 706C616E 		.ascii	"plan_get_current_block\000"
 4448      5F676574 
 4448      5F637572 
 4448      72656E74 
 4448      5F626C6F 
 4449              	.LASF2:
 4450 0684 756E7369 		.ascii	"unsigned char\000"
 4450      676E6564 
 4450      20636861 
 4450      7200
 4451              	.LASF9:
 4452 0692 5F5F7569 		.ascii	"__uint32_t\000"
 4452      6E743332 
 4452      5F7400
 4453              	.LASF125:
 4454 069d 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 4454      4320342E 
 4454      392E3320 
 4454      32303135 
 4454      30333033 
 4455 06d0 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 4455      20726576 
 4455      6973696F 
 4455      6E203232 
 4455      31323230 
 4456 0703 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 4456      66756E63 
 4456      74696F6E 
 4456      2D736563 
 4456      74696F6E 
 4457              	.LASF42:
 4458 072b 73746174 		.ascii	"state\000"
 4458      6500
 4459              	.LASF97:
 4460 0731 6A756E63 		.ascii	"junction_acceleration\000"
 4460      74696F6E 
 4460      5F616363 
 4460      656C6572 
 4460      6174696F 
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 96


 4461              	.LASF114:
 4462 0747 7379735F 		.ascii	"sys_rt_exec_alarm\000"
 4462      72745F65 
 4462      7865635F 
 4462      616C6172 
 4462      6D00
 4463              	.LASF91:
 4464 0759 74617267 		.ascii	"target_steps\000"
 4464      65745F73 
 4464      74657073 
 4464      00
 4465              	.LASF101:
 4466 0766 706C616E 		.ascii	"plan_get_block_buffer_count\000"
 4466      5F676574 
 4466      5F626C6F 
 4466      636B5F62 
 4466      75666665 
 4467              	.LASF122:
 4468 0782 6C726F75 		.ascii	"lround\000"
 4468      6E6400
 4469              	.LASF88:
 4470 0789 706C616E 		.ascii	"plan_buffer_line\000"
 4470      5F627566 
 4470      6665725F 
 4470      6C696E65 
 4470      00
 4471              	.LASF94:
 4472 079a 64656C74 		.ascii	"delta_mm\000"
 4472      615F6D6D 
 4472      00
 4473              	.LASF100:
 4474 07a3 706C616E 		.ascii	"plan_get_block_buffer_available\000"
 4474      5F676574 
 4474      5F626C6F 
 4474      636B5F62 
 4474      75666665 
 4475              	.LASF63:
 4476 07c3 6D696C6C 		.ascii	"millimeters\000"
 4476      696D6574 
 4476      65727300 
 4477              	.LASF1:
 4478 07cf 7369676E 		.ascii	"signed char\000"
 4478      65642063 
 4478      68617200 
 4479              	.LASF39:
 4480 07db 686F6D69 		.ascii	"homing_debounce_delay\000"
 4480      6E675F64 
 4480      65626F75 
 4480      6E63655F 
 4480      64656C61 
 4481              	.LASF6:
 4482 07f1 73686F72 		.ascii	"short unsigned int\000"
 4482      7420756E 
 4482      7369676E 
 4482      65642069 
 4482      6E7400
 4483              	.LASF34:
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 97


 4484 0804 72706D5F 		.ascii	"rpm_min\000"
 4484      6D696E00 
 4485              	.LASF41:
 4486 080c 73657474 		.ascii	"settings_t\000"
 4486      696E6773 
 4486      5F7400
 4487              	.LASF79:
 4488 0817 63757272 		.ascii	"current\000"
 4488      656E7400 
 4489              	.LASF118:
 4490 081f 65786563 		.ascii	"exec_lcd_status\000"
 4490      5F6C6364 
 4490      5F737461 
 4490      74757300 
 4491              	.LASF18:
 4492 082f 646F7562 		.ascii	"double\000"
 4492      6C6500
 4493              	.LASF36:
 4494 0836 686F6D69 		.ascii	"homing_dir_mask\000"
 4494      6E675F64 
 4494      69725F6D 
 4494      61736B00 
 4495              	.LASF31:
 4496 0846 6A756E63 		.ascii	"junction_deviation\000"
 4496      74696F6E 
 4496      5F646576 
 4496      69617469 
 4496      6F6E00
 4497              	.LASF72:
 4498 0859 70726576 		.ascii	"previous_nominal_speed\000"
 4498      696F7573 
 4498      5F6E6F6D 
 4498      696E616C 
 4498      5F737065 
 4499              	.LASF48:
 4500 0870 686F6D69 		.ascii	"homing_axis_lock\000"
 4500      6E675F61 
 4500      7869735F 
 4500      6C6F636B 
 4500      00
 4501              	.LASF60:
 4502 0881 636F6E64 		.ascii	"condition\000"
 4502      6974696F 
 4502      6E00
 4503              	.LASF70:
 4504 088b 706F7369 		.ascii	"position\000"
 4504      74696F6E 
 4504      00
 4505              	.LASF82:
 4506 0894 706C616E 		.ascii	"plan_get_system_motion_block\000"
 4506      5F676574 
 4506      5F737973 
 4506      74656D5F 
 4506      6D6F7469 
 4507              	.LASF124:
 4508 08b1 6765745F 		.ascii	"get_direction_pin_mask\000"
 4508      64697265 
ARM GAS  C:\Users\Bart\AppData\Local\Temp\ccqXVSEd.s 			page 98


 4508      6374696F 
 4508      6E5F7069 
 4508      6E5F6D61 
 4509              	.LASF28:
 4510 08c8 6469725F 		.ascii	"dir_invert_mask\000"
 4510      696E7665 
 4510      72745F6D 
 4510      61736B00 
 4511              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
